/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ModuleInstallationSystem,
  ModuleInstallationSystemInterface,
} from "../ModuleInstallationSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "Slice_OutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    name: "StoreCore_InvalidDataLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tableId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "tableIdString",
        type: "string",
      },
    ],
    name: "StoreCore_TableNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IModule",
        name: "module",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "installModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061161d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638da798da14610030575b600080fd5b61004361003e36600461112e565b610045565b005b6100d1610050610155565b836313861fb560e01b8460405160240161006a9190611232565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152600080610187565b506101518273ffffffffffffffffffffffffffffffffffffffff166317d7de7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610120573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101449190611245565b82516020840120846102b1565b5050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c806101845750335b90565b60606000848760405160200161019e929190611287565b604051602081830303815290604052905060008085610225578773ffffffffffffffffffffffffffffffffffffffff1685846040516101dd91906112d1565b60006040518083038185875af1925050503d806000811461021a576040519150601f19603f3d011682016040523d82523d6000602084013e61021f565b606091505b5061028c565b8773ffffffffffffffffffffffffffffffffffffffff168360405161024a91906112d1565b600060405180830381855af49150503d8060008114610285576040519150601f19603f3d011682016040523d82523d6000602084013e61028a565b606091505b505b9150915081156102a05792506102a8915050565b805160208201fd5b95945050505050565b60408051606083901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660208201528151808203601401815260026034830181815260948401855291936000936054019080368337019050509050846fffffffffffffffffffffffffffffffff191681600081518110610334576103346112ed565b6020026020010181815250508381600181518110610354576103546112ed565b602090810291909101810191909152604080516000818401527f496e7374616c6c65644d6f64756c657300000000000000000000000000000000603082015281518082039093018352810190526103b5906103ae90611303565b82846103bc565b5050505050565b60006103c6610484565b90503073ffffffffffffffffffffffffffffffffffffffff8216036103f5576103f08484846104d0565b61047e565b6040517f8ed41f2f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821690638ed41f2f9061044b90879087908790600401611362565b600060405180830381600087803b15801561046557600080fd5b505af1158015610479573d6000803e3d6000fd5b505050505b50505050565b7f629a4c26e296b22a8e0856e9f6ecb2d1008d7e00081111962cd175fa7488e1755460009073ffffffffffffffffffffffffffffffffffffffff16806104cb573391505090565b919050565b60006104db846106b1565b90506000806104ea8385610721565b915091507f912af873e852235aae78a1d25ae9bb28b616a67c36898c53a14fd8184504ee3286868660405161052193929190611362565b60405180910390a16000610534876107bf565b905060005b81518110156105e3576000828281518110610556576105566112ed565b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff166382b6745f8a8a8a6040518463ffffffff1660e01b815260040161059d93929190611362565b600060405180830381600087803b1580156105b757600080fd5b505af11580156105cb573d6000803e3d6000fd5b505050505080806105db906113ad565b915050610539565b5060006105f0888861089c565b90506020860161060382600083886108f2565b61060e8560206113c7565b61061890826113c7565b9050610623866109b2565b60ff1660000361063857505050505050505050565b60006106448a8a6109c3565b858155905060008060005b6106588a6109b2565b60ff168160ff1610156106a2576106708d8d836109fa565b925061067f8860ff8316610a56565b915061068e83600087856108f2565b61069882866113c7565b945060010161064f565b50505050505050505050505050565b60006106bc82610a88565b9050806104cb5781826040516020016106d791815260200190565b60408051601f19818403018152908290527fd623a70d00000000000000000000000000000000000000000000000000000000825261071892916004016113df565b60405180910390fd5b60008061072e8460f01c90565b915081600061073c866109b2565b60ff161115610770578284016020015191506107588260c81c90565b6107639060206113c7565b61076d90826113c7565b90505b835181146107b75783516040517f521b3d33000000000000000000000000000000000000000000000000000000008152610718918391600401918252602082015260400190565b509250929050565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106107f9576107f96112ed565b602090810291909101810191909152604080517f6d756473746f7265000000000000000000000000000000000000000000000000818401527f486f6f6b730000000000000000000000000000000000000000000000000000006030820152815180820390930183528101905260009061087d9061087590611303565b836000610b4d565b905061089461088f8260008451610c2e565b610cbe565b949350505050565b60007f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d983836040516020016108d3939291906113f8565b60408051601f1981840301815291905280516020909101209392505050565b821561096c576020831061091c5760208304840193506020838161091857610918611417565b0692505b821561096c5760208390036000600019600884021c1990506008850281811c91508451811c905081198754168282161787555081831161095d57505061047e565b50600194909401939182019190035b5b6020811061098e5781518455600190930192602090910190601f190161096d565b801561047e576000600019600883021c198554845182169119161785555050505050565b6000601882901b5b60f81c92915050565b60007f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d983836040516020016108d39392919061142d565b60007f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d9848484604051602001610a33949392919061148d565b6040516020818303038152906040528051906020012060001c90505b9392505050565b600080610a648360056114c0565b610a6f9060076113c7565b9050610a7d84826008021b90565b60d81c949350505050565b604080516001808252818301909252600091829190602080830190803683370190505090508281600081518110610ac157610ac16112ed565b602090810291909101810191909152604080517f6d756473746f7265000000000000000000000000000000000000000000000000818401527f736368656d61000000000000000000000000000000000000000000000000000060308201528151808203909301835281019052600090610b4390610b3d90611303565b8361089c565b9050610894815490565b60606000610b59610484565b90503073ffffffffffffffffffffffffffffffffffffffff821603610b8b57610b83858585610ccf565b915050610a4f565b6040517fd03edb8c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063d03edb8c90610be1908890889088906004016114df565b600060405180830381865afa158015610bfe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b83919081019061150b565b509392505050565b6000818311158015610c41575083518211155b610c7d578383836040517f23230fa300000000000000000000000000000000000000000000000000000000815260040161071893929190611579565b60208401610c8b84826113c7565b90506000610c99858561159e565b6fffffffffffffffffffffffffffffffff1660809290921b9190911795945050505050565b60606000610a4f8360146060610cea565b60606000610cdc856106b1565b90506102a885858584610dfc565b60606000610cf88560801c90565b90506fffffffffffffffffffffffffffffffff85166000858281610d1e57610d1e611417565b049050610d2b86836115b5565b15610db8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f756e7061636b546f41727261793a207061636b65644c656e677468206d75737460448201527f2062652061206d756c7469706c65206f6620656c656d656e7453697a650000006064820152608401610718565b60405193506020840160208202810160405281855260005b82811015610df0578451871c825293870193602090910190600101610dd0565b50505050509392505050565b6060610e0782610e33565b60ff168360ff161015610e2757610e2085858585610e3f565b9050610894565b610e2085858585610ea4565b6000601082901b6109ba565b60606000610e508360ff8616610eff565b90506000610e6e8260c5811115610e6957610e696115d7565b610f2b565b90506000610e7c888861089c565b90506000610e8a8688610f8b565b9050610e97828483610fd7565b9998505050505050505050565b60606000610eb183610e33565b610ebb90856115ed565b90506000610eca8787846109fa565b90506000610ee58360ff16610edf8a8a610ffa565b90610a56565b9050610ef382826000610fd7565b98975050505050505050565b6000610f1783610f108460046113c7565b6008021b90565b60f81c60c5811115610a4f57610a4f6115d7565b6000808260c5811115610f4057610f406115d7565b60ff1690506061811015610f5a57601f1660010192915050565b60618360c5811115610f6e57610f6e6115d7565b03610f7c5750601492915050565b50600092915050565b50919050565b600080805b8360ff16811015610c2657610fb9610fa88683610eff565b60c5811115610e6957610e696115d7565b610fc390836113c7565b915080610fcf816113ad565b915050610f90565b60405160208101601f19603f8584010116604052838252610c2685858584611007565b600080610b4384846109c3565b811561107957602082106110315760208204840193506020828161102d5761102d611417565b0691505b81156110795760208290036000600019600883021c1990508554600885021b81198451168282161784525081851161106a57505061047e565b50600194909401939283900392015b5b6020831061109b5783548152600190930192601f199092019160200161107a565b821561047e576000600019600885021c198251865482169119161782525050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156110fe576110fe6110bf565b604052919050565b600067ffffffffffffffff821115611120576111206110bf565b50601f01601f191660200190565b6000806040838503121561114157600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461116557600080fd5b9150602083013567ffffffffffffffff81111561118157600080fd5b8301601f8101851361119257600080fd5b80356111a56111a082611106565b6110d5565b8181528660208385010111156111ba57600080fd5b816020840160208301376000602083830101528093505050509250929050565b60005b838110156111f55781810151838201526020016111dd565b8381111561047e5750506000910152565b6000815180845261121e8160208601602086016111da565b601f01601f19169290920160200192915050565b602081526000610a4f6020830184611206565b60006020828403121561125757600080fd5b81517fffffffffffffffffffffffffffffffff0000000000000000000000000000000081168114610a4f57600080fd5b600083516112998184602088016111da565b60609390931b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169190920190815260140192915050565b600082516112e38184602087016111da565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b80516020808301519190811015610f855760001960209190910360031b1b16919050565b600081518084526020808501945080840160005b838110156113575781518752958201959082019060010161133b565b509495945050505050565b83815260606020820152600061137b6060830185611327565b828103604084015261138d8185611206565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b600060001982036113c0576113c0611397565b5060010190565b600082198211156113da576113da611397565b500190565b8281526040602082015260006108946040830184611206565b8381528260208201526060604082015260006102a86060830184611327565b634e487b7160e01b600052601260045260246000fd5b83815282602082015260806040820152600061144c6080830184611327565b8281036060840152600681527f6c656e6774680000000000000000000000000000000000000000000000000000602082015260408101915050949350505050565b8481528360208201526080604082015260006114ac6080830185611327565b905060ff8316606083015295945050505050565b60008160001904831182151516156114da576114da611397565b500290565b8381526060602082015260006114f86060830185611327565b905060ff83166040830152949350505050565b60006020828403121561151d57600080fd5b815167ffffffffffffffff81111561153457600080fd5b8201601f8101841361154557600080fd5b80516115536111a082611106565b81815285602083850101111561156857600080fd5b6102a88260208301602086016111da565b60608152600061158c6060830186611206565b60208301949094525060400152919050565b6000828210156115b0576115b0611397565b500390565b6000826115d257634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052602160045260246000fd5b600060ff821660ff84168082101561160757611607611397565b9003939250505056fea164736f6c634300080d000a";

type ModuleInstallationSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ModuleInstallationSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ModuleInstallationSystem__factory extends ContractFactory {
  constructor(...args: ModuleInstallationSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ModuleInstallationSystem> {
    return super.deploy(overrides || {}) as Promise<ModuleInstallationSystem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ModuleInstallationSystem {
    return super.attach(address) as ModuleInstallationSystem;
  }
  override connect(signer: Signer): ModuleInstallationSystem__factory {
    return super.connect(signer) as ModuleInstallationSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ModuleInstallationSystemInterface {
    return new utils.Interface(_abi) as ModuleInstallationSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ModuleInstallationSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ModuleInstallationSystem;
  }
}

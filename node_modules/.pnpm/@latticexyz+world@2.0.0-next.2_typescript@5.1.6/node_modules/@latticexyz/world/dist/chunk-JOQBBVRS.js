var d={registerFunctionSelector:!0,openAccess:!0,accessList:[]},o={worldContractName:void 0,worldInterfaceName:"IWorld",systems:{},excludeSystems:[],postDeployScript:"PostDeploy",deploysDirectory:"./deploys",worldsFile:"./worlds.json",worldgenDirectory:"world",worldImportPath:"@latticexyz/world/src/",modules:[]};import{getDuplicates as g,STORE_SELECTOR_MAX_LENGTH as w,UnrecognizedSystemErrorFactory as f}from"@latticexyz/config";import{MUDError as D}from"@latticexyz/common/errors";function R(r,s){let n=s?.filter(t=>t.endsWith("System")&&t!=="System"&&!t.match(/^I[A-Z]/))??[],c=Object.keys(r.systems);if(s){for(let t of c)if(!s.includes(t)||t==="World")throw f(["systems",t],t)}let l=[...new Set([...n,...c])].filter(t=>!r.excludeSystems.includes(t)).reduce((t,u)=>({...t,[u]:b(u,r.systems[u],s)}),{}),i=Object.values(r.tables).map(({name:t})=>t),a=Object.values(l).map(({name:t})=>t),m=g([...i,...a]);if(m.length>0)throw new D(`Table and system names must be unique: ${m.join(", ")}`);return{systems:l}}function b(r,s,n){let c=s?.name??r.slice(0,w),p=s?.registerFunctionSelectors??!0,l=s?.openAccess??!0,i=[],a=[],m=s&&!s.openAccess?s.accessList:[];for(let t of m)if(t.startsWith("0x"))i.push(t);else{if(n&&!n.includes(t))throw f(["systems",r,"accessList"],t);a.push(t)}return{name:c,registerFunctionSelectors:p,openAccess:l,accessListAddresses:i,accessListSystems:a}}import{z as e}from"zod";import{DynamicResolutionType as A,zEthereumAddress as L,zObjectName as S,zSelector as C}from"@latticexyz/config";var y=S,h=S,z=e.array(y.or(L)).default(d.accessList),v=e.intersection(e.object({name:C.optional(),registerFunctionSelectors:e.boolean().default(d.registerFunctionSelector)}),e.discriminatedUnion("openAccess",[e.object({openAccess:e.literal(!0).default(d.openAccess)}),e.object({openAccess:e.literal(!1),accessList:z})])),x=e.object({value:e.union([e.string(),e.number(),e.instanceof(Uint8Array)]),type:e.string()}),E=e.object({type:e.nativeEnum(A),input:e.string()}),N=e.object({name:h,root:e.boolean().default(!1),args:e.array(e.union([x,E])).default([])}),T=e.object({worldContractName:e.string().optional(),worldInterfaceName:e.string().default(o.worldInterfaceName),systems:e.record(y,v).default(o.systems),excludeSystems:e.array(y).default(o.excludeSystems),postDeployScript:e.string().default(o.postDeployScript),deploysDirectory:e.string().default(o.deploysDirectory),worldsFile:e.string().default(o.worldsFile),worldgenDirectory:e.string().default(o.worldgenDirectory),worldImportPath:e.string().default(o.worldImportPath),modules:e.array(N).default(o.modules)}),M=T.catchall(e.any());export{d as a,o as b,R as c,b as d,T as e,M as f};
//# sourceMappingURL=chunk-JOQBBVRS.js.map
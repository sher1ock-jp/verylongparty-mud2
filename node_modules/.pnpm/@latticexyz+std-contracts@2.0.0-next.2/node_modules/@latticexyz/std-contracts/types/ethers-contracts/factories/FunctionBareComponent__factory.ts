/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  FunctionBareComponent,
  FunctionBareComponentInterface,
} from "../FunctionBareComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contr",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "func",
            type: "bytes4",
          },
        ],
        internalType: "struct FunctionSelector",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "contr",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "func",
            type: "bytes4",
          },
        ],
        internalType: "struct FunctionSelector",
        name: "value",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015df380380620015df8339810160408190526200003491620001e1565b818162000041336200006b565b60028190556001600160a01b0382161562000061576200006182620000df565b505050506200021d565b6000620000826200019760201b62000b521760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b620000e9620001bb565b6001600160a01b0316336001600160a01b0316146200011b57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200017b57600080fd5b505af115801562000190573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001d26200019760201b62000b521760201c565b546001600160a01b0316919050565b60008060408385031215620001f557600080fd5b82516001600160a01b03811681146200020d57600080fd5b6020939093015192949293505050565b6113b2806200022d6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e146102ff578063f2fde38b14610312578063f63c8bbd1461032557600080fd5b8063b8bc073d146102cc578063bf4fe57e146102ec57600080fd5b80638da5cb5b146102875780639d2c76b41461028f578063af640d0f146102a2578063b361be46146102b957600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c1461023e578063861eb905146102515780638b2829471461027457600080fd5b80634fef6a38146102155780636b122fe01461022857600080fd5b80630ff4c9161461013b57806330b67baa146101a657806331b933b9146101eb5780634cc8221514610200575b600080fd5b61014e610149366004610e19565b610338565b60408051825173ffffffffffffffffffffffffffffffffffffffff1681526020928301517fffffffff000000000000000000000000000000000000000000000000000000001692810192909252015b60405180910390f35b6000546101c69073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019d565b6101f361036e565b60405161019d9190610e32565b61021361020e366004610e19565b6103a2565b005b610213610223366004610e98565b6103ed565b6102306104cb565b60405161019d929190610f56565b61021361024c366004610e98565b610650565b61026461025f366004610e98565b610682565b604051901515815260200161019d565b610213610282366004611120565b61070c565b6101c6610759565b61021361029d366004610e98565b61079e565b6102ab60025481565b60405190815260200161019d565b6101f36102c7366004611167565b61036e565b6102df6102da366004610e19565b6108c7565b60405161019d91906111a4565b6102136102fa366004610e98565b610969565b61026461030d366004610e19565b610a44565b610213610320366004610e98565b610a66565b6102136103333660046111e5565b610adf565b6040805180820190915260008082526020820152610355826108c7565b8060200190518101906103689190611282565b92915050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103ab33610682565b6103e1576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103ea81610b76565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461045d576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160028082526060828101909352829190816020015b60608152602001906001900390816104e457505060408051600280825260608201835292945091906020830190803683370190505090506040518060400160405280600581526020017f636f6e747200000000000000000000000000000000000000000000000000000081525082600081518110610564576105646112e1565b6020026020010181905250601081600081518110610584576105846112e1565b6020026020010190602181111561059d5761059d610f27565b908160218111156105b0576105b0610f27565b815250506040518060400160405280600481526020017f66756e6300000000000000000000000000000000000000000000000000000000815250826001815181106105fd576105fd6112e1565b602002602001018190525060118160018151811061061d5761061d6112e1565b6020026020010190602181111561063657610636610f27565b9081602181111561064957610649610f27565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061036857506106d8610759565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161492915050565b61071533610682565b61074b576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107558282610be4565b5050565b60006107997f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461080e576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b1580156108ac57600080fd5b505af11580156108c0573d6000803e3d6000fd5b5050505050565b60008181526001602052604090208054606091906108e490611310565b80601f016020809104026020016040519081016040528092919081815260200182805461091090611310565b801561095d5780601f106109325761010080835404028352916020019161095d565b820191906000526020600020905b81548152906001019060200180831161094057829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146109d9576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610a5d90611310565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ad6576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103ea81610c92565b6107558282604051602001610b3e9190815173ffffffffffffffffffffffffffffffffffffffff1681526020918201517fffffffff00000000000000000000000000000000000000000000000000000000169181019190915260400190565b60405160208183030381529060405261070c565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610b8d91610d46565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610892565b60008281526001602090815260409091208251610c0392840190610d80565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610c5c9085908590600401611363565b600060405180830381600087803b158015610c7657600080fd5b505af1158015610c8a573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103ea928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610d5290611310565b6000825580601f10610d62575050565b601f0160209004906000526020600020908101906103ea9190610e04565b828054610d8c90611310565b90600052602060002090601f016020900481019282610dae5760008555610df4565b82601f10610dc757805160ff1916838001178555610df4565b82800160010185558215610df4579182015b82811115610df4578251825591602001919060010190610dd9565b50610e00929150610e04565b5090565b5b80821115610e005760008155600101610e05565b600060208284031215610e2b57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610e6a57835183529284019291840191600101610e4e565b50909695505050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146103ea57600080fd5b600060208284031215610eaa57600080fd5b8135610eb581610e76565b9392505050565b6000815180845260005b81811015610ee257602081850181015186830182015201610ec6565b81811115610ef4576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015610fcb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552610fb9868351610ebc565b95509382019390820190600101610f7f565b50508584038187015286518085528782019482019350915060005b8281101561103957845160228110611027577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101610fe6565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261108657600080fd5b813567ffffffffffffffff808211156110a1576110a1611046565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156110e7576110e7611046565b8160405283815286602085880101111561110057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561113357600080fd5b82359150602083013567ffffffffffffffff81111561115157600080fd5b61115d85828601611075565b9150509250929050565b60006020828403121561117957600080fd5b813567ffffffffffffffff81111561119057600080fd5b61119c84828501611075565b949350505050565b602081526000610eb56020830184610ebc565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146103ea57600080fd5b60008082840360608112156111f957600080fd5b8335925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561122d57600080fd5b506040516040810181811067ffffffffffffffff8211171561125157611251611046565b604052602084013561126281610e76565b81526040840135611272816111b7565b6020820152919491935090915050565b60006040828403121561129457600080fd5b6040516040810181811067ffffffffffffffff821117156112b7576112b7611046565b60405282516112c581610e76565b815260208301516112d5816111b7565b60208201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061132457607f821691505b60208210810361135d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b82815260406020820152600061119c6040830184610ebc56fea2646970667358221220470f22f43cda592fe6d4b2273a61362289f5fbe8b870d797a54ca554ca7055cc64736f6c634300080d0033";

type FunctionBareComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FunctionBareComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FunctionBareComponent__factory extends ContractFactory {
  constructor(...args: FunctionBareComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FunctionBareComponent> {
    return super.deploy(
      world,
      id,
      overrides || {}
    ) as Promise<FunctionBareComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    id: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, id, overrides || {});
  }
  override attach(address: string): FunctionBareComponent {
    return super.attach(address) as FunctionBareComponent;
  }
  override connect(signer: Signer): FunctionBareComponent__factory {
    return super.connect(signer) as FunctionBareComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FunctionBareComponentInterface {
    return new utils.Interface(_abi) as FunctionBareComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FunctionBareComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FunctionBareComponent;
  }
}

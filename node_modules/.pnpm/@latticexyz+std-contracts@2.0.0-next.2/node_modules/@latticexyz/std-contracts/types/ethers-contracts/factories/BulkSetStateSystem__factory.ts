/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BulkSetStateSystem,
  BulkSetStateSystemInterface,
} from "../BulkSetStateSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "componentIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "entities",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "component",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "entity",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct ECSEvent[]",
        name: "state",
        type: "tuple[]",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "requirement",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011203803806200112083398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200036817901c565b5050505062000292565b600062000126620001ef60201b620003f91760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b610e7e80620002a26000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100a95780639cb22c91146100d6578063f2fde38b146100e957600080fd5b806309c5eabe1461006c5780638b246a5b14610095575b600080fd5b61007f61007a36600461075c565b6100fe565b60405161008c919061080b565b60405180910390f35b61007f6100a336600461075c565b50606090565b6100b1610271565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008c565b61007f6100e43660046108d0565b6102b6565b6100fc6100f7366004610a3f565b6102ec565b005b60606000806000848060200190518101906101199190610ad0565b92509250925060005b81518110156102685760008054835161018c9173ffffffffffffffffffffffffffffffffffffffff1690879086908690811061016057610160610c67565b60200260200101516000015160ff168151811061017f5761017f610c67565b602002602001015161041d565b90508073ffffffffffffffffffffffffffffffffffffffff16638b282947858585815181106101bd576101bd610c67565b60200260200101516020015163ffffffff16815181106101df576101df610c67565b60200260200101518585815181106101f9576101f9610c67565b6020026020010151604001516040518363ffffffff1660e01b8152600401610222929190610c96565b600060405180830381600087803b15801561023c57600080fd5b505af1158015610250573d6000803e3d6000fd5b5050505050808061026090610caf565b915050610122565b50505050919050565b60006102b17f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60606102e48484846040516020016102d093929190610d49565b6040516020818303038152906040526100fe565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461035c576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61036581610565565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa15801561048d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104d39190810190610e13565b90508051600003610544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640160405180910390fd5b6102e48160008151811061055a5761055a610c67565b602002602001015190565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610365928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561066b5761066b610619565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156106b8576106b8610619565b604052919050565b600067ffffffffffffffff8211156106da576106da610619565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261071757600080fd5b813561072a610725826106c0565b610671565b81815284602083860101111561073f57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561076e57600080fd5b813567ffffffffffffffff81111561078557600080fd5b6102e484828501610706565b60005b838110156107ac578181015183820152602001610794565b838111156107bb576000848401525b50505050565b600081518084526107d9816020860160208601610791565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061081e60208301846107c1565b9392505050565b600067ffffffffffffffff82111561083f5761083f610619565b5060051b60200190565b600082601f83011261085a57600080fd5b8135602061086a61072583610825565b82815260059290921b8401810191818101908684111561088957600080fd5b8286015b848110156108a4578035835291830191830161088d565b509695505050505050565b60ff8116811461036557600080fd5b63ffffffff8116811461036557600080fd5b6000806000606084860312156108e557600080fd5b833567ffffffffffffffff808211156108fd57600080fd5b61090987838801610849565b945060209150818601358181111561092057600080fd5b61092c88828901610849565b94505060408601358181111561094157600080fd5b8601601f8101881361095257600080fd5b803561096061072582610825565b81815260059190911b8201840190848101908a83111561097f57600080fd5b8584015b83811015610a2e5780358681111561099b5760008081fd5b85016060818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112156109d05760008081fd5b6109d8610648565b888201356109e5816108af565b815260408201356109f5816108be565b818a0152606082013588811115610a0c5760008081fd5b610a1a8f8b83860101610706565b604083015250845250918601918601610983565b508096505050505050509250925092565b600060208284031215610a5157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461081e57600080fd5b600082601f830112610a8657600080fd5b81516020610a9661072583610825565b82815260059290921b84018101918181019086841115610ab557600080fd5b8286015b848110156108a45780518352918301918301610ab9565b600080600060608486031215610ae557600080fd5b835167ffffffffffffffff80821115610afd57600080fd5b610b0987838801610a75565b9450602091508186015181811115610b2057600080fd5b610b2c88828901610a75565b945050604086015181811115610b4157600080fd5b8601601f81018813610b5257600080fd5b8051610b6061072582610825565b81815260059190911b8201840190848101908a831115610b7f57600080fd5b8584015b83811015610a2e57805186811115610b9a57600080fd5b85016060818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0011215610bce57600080fd5b610bd6610648565b88820151610be3816108af565b81526040820151610bf3816108be565b818a0152606082015188811115610c0957600080fd5b8083019250508d603f830112610c1e57600080fd5b88820151610c2e610725826106c0565b8181528f6040838601011115610c4357600080fd5b610c53828c830160408701610791565b604083015250845250918601918601610b83565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8281526040602082015260006102e460408301846107c1565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d07577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600081518084526020808501945080840160005b83811015610d3e57815187529582019590820190600101610d22565b509495945050505050565b60006060808352610d5c81840187610d0e565b602084820381860152610d6f8288610d0e565b91506040858303818701528287518085528385019150838160051b860101848a0160005b83811015610e01578783037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00185528151805160ff1684528781015163ffffffff16888501528601518684018a9052610dee8a8501826107c1565b9588019593505090860190600101610d93565b50909c9b505050505050505050505050565b600060208284031215610e2557600080fd5b815167ffffffffffffffff811115610e3c57600080fd5b6102e484828501610a7556fea26469706673582212209d90835137cdc9da6cb0f2afd1bef13693a9e7e953872d1af1d14b1eaaef818464736f6c634300080d0033";

type BulkSetStateSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BulkSetStateSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BulkSetStateSystem__factory extends ContractFactory {
  constructor(...args: BulkSetStateSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BulkSetStateSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<BulkSetStateSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): BulkSetStateSystem {
    return super.attach(address) as BulkSetStateSystem;
  }
  override connect(signer: Signer): BulkSetStateSystem__factory {
    return super.connect(signer) as BulkSetStateSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BulkSetStateSystemInterface {
    return new utils.Interface(_abi) as BulkSetStateSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BulkSetStateSystem {
    return new Contract(address, _abi, signerOrProvider) as BulkSetStateSystem;
  }
}

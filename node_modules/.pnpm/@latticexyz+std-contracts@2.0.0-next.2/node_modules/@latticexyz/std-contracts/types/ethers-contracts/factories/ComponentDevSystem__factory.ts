/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ComponentDevSystem,
  ComponentDevSystemInterface,
} from "../ComponentDevSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "componentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "requirement",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000cf138038062000cf183398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200035d17901c565b5050505062000292565b600062000126620001ef60201b620003ee1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b610a4f80620002a26000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638b246a5b116100505780638b246a5b146100a85780638da5cb5b146100bc578063f2fde38b146100e957600080fd5b806309c5eabe1461006c57806334830fd714610095575b600080fd5b61007f61007a366004610728565b6100fe565b60405161008c91906107d7565b60405180910390f35b61007f6100a33660046107f1565b610266565b61007f6100b6366004610728565b50606090565b6100c461029c565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008c565b6100fc6100f7366004610841565b6102e1565b005b60606000806000848060200190518101906101199190610877565b600080549396509194509250906101469073ffffffffffffffffffffffffffffffffffffffff1685610412565b905081516000036101d6576040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff821690634cc8221590602401600060405180830381600087803b1580156101b957600080fd5b505af11580156101cd573d6000803e3d6000fd5b5050505061025d565b6040517f8b28294700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821690638b2829479061022a9086908690600401610903565b600060405180830381600087803b15801561024457600080fd5b505af1158015610258573d6000803e3d6000fd5b505050505b50505050919050565b60606102948484846040516020016102809392919061091c565b6040516020818303038152906040526100fe565b949350505050565b60006102dc7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610351576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61035a8161055a565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610482573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104c89190810190610944565b90508051600003610539576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640160405180910390fd5b6102948160008151811061054f5761054f6109ea565b602002602001015190565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161035a928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156106845761068461060e565b604052919050565b600067ffffffffffffffff8211156106a6576106a661060e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126106e357600080fd5b81356106f66106f18261068c565b61063d565b81815284602083860101111561070b57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561073a57600080fd5b813567ffffffffffffffff81111561075157600080fd5b610294848285016106d2565b60005b83811015610778578181015183820152602001610760565b83811115610787576000848401525b50505050565b600081518084526107a581602086016020860161075d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006107ea602083018461078d565b9392505050565b60008060006060848603121561080657600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561082b57600080fd5b610837868287016106d2565b9150509250925092565b60006020828403121561085357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146107ea57600080fd5b60008060006060848603121561088c57600080fd5b8351925060208401519150604084015167ffffffffffffffff8111156108b157600080fd5b8401601f810186136108c257600080fd5b80516108d06106f18261068c565b8181528760208385010111156108e557600080fd5b6108f682602083016020860161075d565b8093505050509250925092565b828152604060208201526000610294604083018461078d565b83815282602082015260606040820152600061093b606083018461078d565b95945050505050565b6000602080838503121561095757600080fd5b825167ffffffffffffffff8082111561096f57600080fd5b818501915085601f83011261098357600080fd5b8151818111156109955761099561060e565b8060051b91506109a684830161063d565b81815291830184019184810190888411156109c057600080fd5b938501935b838510156109de578451825293850193908501906109c5565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212208f17c46a944f255dd4a9cb2ccf177f1519aad48466223ddbf0a4f75b0ba8ab7164736f6c634300080d0033";

type ComponentDevSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComponentDevSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComponentDevSystem__factory extends ContractFactory {
  constructor(...args: ComponentDevSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ComponentDevSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<ComponentDevSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): ComponentDevSystem {
    return super.attach(address) as ComponentDevSystem;
  }
  override connect(signer: Signer): ComponentDevSystem__factory {
    return super.connect(signer) as ComponentDevSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComponentDevSystemInterface {
    return new utils.Interface(_abi) as ComponentDevSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ComponentDevSystem {
    return new Contract(address, _abi, signerOrProvider) as ComponentDevSystem;
  }
}

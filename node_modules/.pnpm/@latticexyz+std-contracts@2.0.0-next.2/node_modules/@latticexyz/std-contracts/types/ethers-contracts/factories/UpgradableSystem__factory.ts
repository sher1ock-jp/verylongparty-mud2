/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  UpgradableSystem,
  UpgradableSystemInterface,
} from "../UpgradableSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161076f38038061076f83398101604081905261002f91610197565b818161003a336100ea565b6001600160a01b0381161561004f57806100b1565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b191906101d1565b600080546001600160a01b039283166001600160a01b0319918216179091556001805494909216931692909217909155506101f5915050565b60006100fe61015b60201b61028b1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b038116811461019457600080fd5b50565b600080604083850312156101aa57600080fd5b82516101b58161017f565b60208401519092506101c68161017f565b809150509250929050565b6000602082840312156101e357600080fd5b81516101ee8161017f565b9392505050565b61056b806102046000396000f3fe60806040526004361061003f5760003560e01c80630900f0101461004457806309c5eabe146100665780638da5cb5b1461008f578063f2fde38b146100c9575b600080fd5b34801561005057600080fd5b5061006461005f366004610387565b6100e9565b005b6100796100743660046103f3565b6101a0565b60405161008691906104c2565b60405180910390f35b34801561009b57600080fd5b506100a46101ca565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610086565b3480156100d557600080fd5b506100646100e4366004610387565b61020f565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610159576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6002546060906101c59073ffffffffffffffffffffffffffffffffffffffff166102af565b919050565b600061020a7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461027f576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610288816102d3565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b3660008037600080366000845af43d6000803e8080156102ce573d6000f35b3d6000fd5b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610288928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006020828403121561039957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146103bd57600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561040557600080fd5b813567ffffffffffffffff8082111561041d57600080fd5b818401915084601f83011261043157600080fd5b813581811115610443576104436103c4565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610489576104896103c4565b816040528281528760208487010111156104a257600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156104ef578581018301518582016040015282016104d3565b81811115610501576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01692909201604001939250505056fea264697066735822122054f38f312cb8439193683a3e493b750493ab68ecebc4fe10790a223a116b143364736f6c634300080d0033";

type UpgradableSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradableSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradableSystem__factory extends ContractFactory {
  constructor(...args: UpgradableSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UpgradableSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<UpgradableSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): UpgradableSystem {
    return super.attach(address) as UpgradableSystem;
  }
  override connect(signer: Signer): UpgradableSystem__factory {
    return super.connect(signer) as UpgradableSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradableSystemInterface {
    return new utils.Interface(_abi) as UpgradableSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradableSystem {
    return new Contract(address, _abi, signerOrProvider) as UpgradableSystem;
  }
}

{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "world",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BareComponent__NotImplemented",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnableWritable__NotWriter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotTransitiveOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "authorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntities",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getRawValue",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSchema",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "keys",
          "type": "string[]"
        },
        {
          "internalType": "enum LibTypes.SchemaValue[]",
          "name": "values",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getValue",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "a",
              "type": "uint256"
            },
            {
              "internalType": "int32",
              "name": "b",
              "type": "int32"
            },
            {
              "internalType": "address",
              "name": "c",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "d",
              "type": "string"
            }
          ],
          "internalType": "struct TestStructBare",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registerIndexer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_world",
          "type": "address"
        }
      ],
      "name": "registerWorld",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "a",
              "type": "uint256"
            },
            {
              "internalType": "int32",
              "name": "b",
              "type": "int32"
            },
            {
              "internalType": "address",
              "name": "c",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "d",
              "type": "string"
            }
          ],
          "internalType": "struct TestStructBare",
          "name": "value",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "unauthorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "world",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "writeAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200189c3803806200189c833981016040819052620000349162000200565b807fb37b5d64788473f0adc4ef64537e77af09c97f23d1de34c1ad392becb4a515c862000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000c551760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000c551760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61165a80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102bd578063cccf7a8e146102d0578063f2fde38b146102e357600080fd5b8063b361be461461028a578063b8bc073d1461029d57600080fd5b80638da5cb5b146102455780639ad6ae981461024d5780639d2c76b414610260578063af640d0f1461027357600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c146101fc578063861eb9051461020f5780638b2829471461023257600080fd5b80634fef6a38146101d35780636b122fe0146101e657600080fd5b80630ff4c9161461013b57806330b67baa1461016457806331b933b9146101a95780634cc82215146101be575b600080fd5b61014e610149366004610f1c565b6102f6565b60405161015b9190610faf565b60405180910390f35b6000546101849073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015b565b6101b1610386565b60405161015b9190611009565b6101d16101cc366004610f1c565b6103ba565b005b6101d16101e136600461106f565b610405565b6101ee6104e3565b60405161015b9291906110c2565b6101d161020a36600461106f565b61079c565b61022261021d36600461106f565b6107ce565b604051901515815260200161015b565b6101d16102403660046112cc565b610859565b6101846108a6565b6101d161025b366004611313565b6108eb565b6101d161026e36600461106f565b610914565b61027c60025481565b60405190815260200161015b565b6101b1610298366004611361565b610386565b6102b06102ab366004610f1c565b610a3d565b60405161015b9190611396565b6101d16102cb36600461106f565b610adf565b6102226102de366004610f1c565b610bba565b6101d16102f136600461106f565b610bdc565b604080516080810182526000808252602082018190529181018290526060808201529080808061032586610a3d565b80602001905181019061033891906113b8565b6040805160808101825263ffffffff95909516855260039390930b602085015273ffffffffffffffffffffffffffffffffffffffff9091169183019190915260608201529695505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103c3336107ce565b6103f9576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040281610c79565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610475576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600480825260a08201909252606091829190816020015b60608152602001906001900390816104fe57505060408051600480825260a08201909252919350602082016080803683370190505090506040518060400160405280600181526020017f61000000000000000000000000000000000000000000000000000000000000008152508260008151811061057e5761057e611473565b6020026020010181905250600d8160008151811061059e5761059e611473565b602002602001019060218111156105b7576105b7611093565b908160218111156105ca576105ca611093565b815250506040518060400160405280600181526020017f62000000000000000000000000000000000000000000000000000000000000008152508260018151811061061757610617611473565b602002602001018190525060038160018151811061063757610637611473565b6020026020010190602181111561065057610650611093565b9081602181111561066357610663611093565b815250506040518060400160405280600181526020017f6300000000000000000000000000000000000000000000000000000000000000815250826002815181106106b0576106b0611473565b60200260200101819052506010816002815181106106d0576106d0611473565b602002602001019060218111156106e9576106e9611093565b908160218111156106fc576106fc611093565b815250506040518060400160405280600181526020017f64000000000000000000000000000000000000000000000000000000000000008152508260038151811061074957610749611473565b6020026020010181905250600f8160038151811061076957610769611473565b6020026020010190602181111561078257610782611093565b9081602181111561079557610795611093565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061085357506108246108a6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610862336107ce565b610898576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108a28282610ce7565b5050565b60006108e67f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6108a2828260405160200161090091906114eb565b604051602081830303815290604052610859565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610984576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610a2257600080fd5b505af1158015610a36573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610a5a906115b8565b80601f0160208091040260200160405190810160405280929190818152602001828054610a86906115b8565b8015610ad35780601f10610aa857610100808354040283529160200191610ad3565b820191906000526020600020905b815481529060010190602001808311610ab657829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b4f576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610bd3906115b8565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c4c576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040281610d95565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610c9091610e49565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610a08565b60008281526001602090815260409091208251610d0692840190610e83565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610d5f908590859060040161160b565b600060405180830381600087803b158015610d7957600080fd5b505af1158015610d8d573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610402928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610e55906115b8565b6000825580601f10610e65575050565b601f0160209004906000526020600020908101906104029190610f07565b828054610e8f906115b8565b90600052602060002090601f016020900481019282610eb15760008555610ef7565b82601f10610eca57805160ff1916838001178555610ef7565b82800160010185558215610ef7579182015b82811115610ef7578251825591602001919060010190610edc565b50610f03929150610f07565b5090565b5b80821115610f035760008155600101610f08565b600060208284031215610f2e57600080fd5b5035919050565b60005b83811015610f50578181015183820152602001610f38565b83811115610f5f576000848401525b50505050565b60008151808452610f7d816020860160208601610f35565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815281516020820152602082015160030b604082015273ffffffffffffffffffffffffffffffffffffffff60408301511660608201526000606083015160808084015261100160a0840182610f65565b949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561104157835183529284019291840191600101611025565b50909695505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461040257600080fd5b60006020828403121561108157600080fd5b813561108c8161104d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611137577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552611125868351610f65565b955093820193908201906001016110eb565b50508584038187015286518085528782019482019350915060005b828110156111a557845160228110611193577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611152565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611228576112286111b2565b604052919050565b600067ffffffffffffffff82111561124a5761124a6111b2565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261128757600080fd5b813561129a61129582611230565b6111e1565b8181528460208386010111156112af57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156112df57600080fd5b82359150602083013567ffffffffffffffff8111156112fd57600080fd5b61130985828601611276565b9150509250929050565b6000806040838503121561132657600080fd5b82359150602083013567ffffffffffffffff81111561134457600080fd5b83016080818603121561135657600080fd5b809150509250929050565b60006020828403121561137357600080fd5b813567ffffffffffffffff81111561138a57600080fd5b61100184828501611276565b60208152600061108c6020830184610f65565b8060030b811461040257600080fd5b600080600080608085870312156113ce57600080fd5b845163ffffffff811681146113e257600080fd5b60208601519094506113f3816113a9565b60408601519093506114048161104d565b606086015190925067ffffffffffffffff81111561142157600080fd5b8501601f8101871361143257600080fd5b805161144061129582611230565b81815288602083850101111561145557600080fd5b611466826020830160208601610f35565b9598949750929550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b602081528135602082015260006020830135611506816113a9565b8060030b604084015250604083013561151e8161104d565b73ffffffffffffffffffffffffffffffffffffffff811660608401525060608301357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261157057600080fd5b8301803567ffffffffffffffff81111561158957600080fd5b80360385131561159857600080fd5b6080808501526115af60a0850182602085016114a2565b95945050505050565b600181811c908216806115cc57607f821691505b602082108103611605577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006110016040830184610f6556fea264697066735822122049ed6ab0d9074e05e47cd74c0d94a2a195b50ad34fac9b404325361d1bcbc0eb64736f6c634300080d0033",
    "sourceMap": "308:935:104:-:0;;;356:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;397:5;194:34;399:21:39;409:10;399:9;:21::i;:::-;1121:2:34;:8;;;-1:-1:-1;;;;;1139:20:34;;;1135:47;;1161:21;1175:6;1161:13;:21::i;:::-;1074:113;;356:54:104;308:935;;1203:207:64;1266:31;1300:23;:21;;;;;:23;;:::i;:::-;1359:7;;1338:38;;1266:57;;-1:-1:-1;;;;;;1338:38:64;;;;1359:7;;;1338:38;;1359:7;;1338:38;1386:17;;-1:-1:-1;;;;;;1386:17:64;-1:-1:-1;;;;;1386:17:64;;;;;;;;;;1203:207::o;1302:137:34:-;436:8:64;:6;:8::i;:::-;-1:-1:-1;;;;;422:22:64;:10;-1:-1:-1;;;;;422:22:64;;418:54;;453:19;;-1:-1:-1;;;453:19:64;;;;;;;;;;;418:54;1364:5:34::1;:14:::0;;-1:-1:-1;;;;;;1364:14:34::1;-1:-1:-1::0;;;;;1364:14:34;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;-1:-1:-1;;;1384:50:34;;1424:4:::1;1384:50;::::0;::::1;483:51:108::0;550:18;;;543:34;;;;1384:31:34::1;::::0;456:18:108;;1384:50:34::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;242:159:65:-;186:49;;242:159::o;647:111:64:-;696:7;722:23;:21;;;;;:23;;:::i;:::-;:29;-1:-1:-1;;;;;722:29:64;;647:111;-1:-1:-1;647:111:64:o;14:290:108:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:108;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:108:o;309:274::-;308:935:104;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102bd578063cccf7a8e146102d0578063f2fde38b146102e357600080fd5b8063b361be461461028a578063b8bc073d1461029d57600080fd5b80638da5cb5b146102455780639ad6ae981461024d5780639d2c76b414610260578063af640d0f1461027357600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c146101fc578063861eb9051461020f5780638b2829471461023257600080fd5b80634fef6a38146101d35780636b122fe0146101e657600080fd5b80630ff4c9161461013b57806330b67baa1461016457806331b933b9146101a95780634cc82215146101be575b600080fd5b61014e610149366004610f1c565b6102f6565b60405161015b9190610faf565b60405180910390f35b6000546101849073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015b565b6101b1610386565b60405161015b9190611009565b6101d16101cc366004610f1c565b6103ba565b005b6101d16101e136600461106f565b610405565b6101ee6104e3565b60405161015b9291906110c2565b6101d161020a36600461106f565b61079c565b61022261021d36600461106f565b6107ce565b604051901515815260200161015b565b6101d16102403660046112cc565b610859565b6101846108a6565b6101d161025b366004611313565b6108eb565b6101d161026e36600461106f565b610914565b61027c60025481565b60405190815260200161015b565b6101b1610298366004611361565b610386565b6102b06102ab366004610f1c565b610a3d565b60405161015b9190611396565b6101d16102cb36600461106f565b610adf565b6102226102de366004610f1c565b610bba565b6101d16102f136600461106f565b610bdc565b604080516080810182526000808252602082018190529181018290526060808201529080808061032586610a3d565b80602001905181019061033891906113b8565b6040805160808101825263ffffffff95909516855260039390930b602085015273ffffffffffffffffffffffffffffffffffffffff9091169183019190915260608201529695505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103c3336107ce565b6103f9576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040281610c79565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610475576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600480825260a08201909252606091829190816020015b60608152602001906001900390816104fe57505060408051600480825260a08201909252919350602082016080803683370190505090506040518060400160405280600181526020017f61000000000000000000000000000000000000000000000000000000000000008152508260008151811061057e5761057e611473565b6020026020010181905250600d8160008151811061059e5761059e611473565b602002602001019060218111156105b7576105b7611093565b908160218111156105ca576105ca611093565b815250506040518060400160405280600181526020017f62000000000000000000000000000000000000000000000000000000000000008152508260018151811061061757610617611473565b602002602001018190525060038160018151811061063757610637611473565b6020026020010190602181111561065057610650611093565b9081602181111561066357610663611093565b815250506040518060400160405280600181526020017f6300000000000000000000000000000000000000000000000000000000000000815250826002815181106106b0576106b0611473565b60200260200101819052506010816002815181106106d0576106d0611473565b602002602001019060218111156106e9576106e9611093565b908160218111156106fc576106fc611093565b815250506040518060400160405280600181526020017f64000000000000000000000000000000000000000000000000000000000000008152508260038151811061074957610749611473565b6020026020010181905250600f8160038151811061076957610769611473565b6020026020010190602181111561078257610782611093565b9081602181111561079557610795611093565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061085357506108246108a6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610862336107ce565b610898576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108a28282610ce7565b5050565b60006108e67f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6108a2828260405160200161090091906114eb565b604051602081830303815290604052610859565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610984576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610a2257600080fd5b505af1158015610a36573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610a5a906115b8565b80601f0160208091040260200160405190810160405280929190818152602001828054610a86906115b8565b8015610ad35780601f10610aa857610100808354040283529160200191610ad3565b820191906000526020600020905b815481529060010190602001808311610ab657829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b4f576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610bd3906115b8565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c4c576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040281610d95565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610c9091610e49565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610a08565b60008281526001602090815260409091208251610d0692840190610e83565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610d5f908590859060040161160b565b600060405180830381600087803b158015610d7957600080fd5b505af1158015610d8d573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610402928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610e55906115b8565b6000825580601f10610e65575050565b601f0160209004906000526020600020908101906104029190610f07565b828054610e8f906115b8565b90600052602060002090601f016020900481019282610eb15760008555610ef7565b82601f10610eca57805160ff1916838001178555610ef7565b82800160010185558215610ef7579182015b82811115610ef7578251825591602001919060010190610edc565b50610f03929150610f07565b5090565b5b80821115610f035760008155600101610f08565b600060208284031215610f2e57600080fd5b5035919050565b60005b83811015610f50578181015183820152602001610f38565b83811115610f5f576000848401525b50505050565b60008151808452610f7d816020860160208601610f35565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815281516020820152602082015160030b604082015273ffffffffffffffffffffffffffffffffffffffff60408301511660608201526000606083015160808084015261100160a0840182610f65565b949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561104157835183529284019291840191600101611025565b50909695505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461040257600080fd5b60006020828403121561108157600080fd5b813561108c8161104d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611137577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552611125868351610f65565b955093820193908201906001016110eb565b50508584038187015286518085528782019482019350915060005b828110156111a557845160228110611193577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611152565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611228576112286111b2565b604052919050565b600067ffffffffffffffff82111561124a5761124a6111b2565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261128757600080fd5b813561129a61129582611230565b6111e1565b8181528460208386010111156112af57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156112df57600080fd5b82359150602083013567ffffffffffffffff8111156112fd57600080fd5b61130985828601611276565b9150509250929050565b6000806040838503121561132657600080fd5b82359150602083013567ffffffffffffffff81111561134457600080fd5b83016080818603121561135657600080fd5b809150509250929050565b60006020828403121561137357600080fd5b813567ffffffffffffffff81111561138a57600080fd5b61100184828501611276565b60208152600061108c6020830184610f65565b8060030b811461040257600080fd5b600080600080608085870312156113ce57600080fd5b845163ffffffff811681146113e257600080fd5b60208601519094506113f3816113a9565b60408601519093506114048161104d565b606086015190925067ffffffffffffffff81111561142157600080fd5b8501601f8101871361143257600080fd5b805161144061129582611230565b81815288602083850101111561145557600080fd5b611466826020830160208601610f35565b9598949750929550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b602081528135602082015260006020830135611506816113a9565b8060030b604084015250604083013561151e8161104d565b73ffffffffffffffffffffffffffffffffffffffff811660608401525060608301357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261157057600080fd5b8301803567ffffffffffffffff81111561158957600080fd5b80360385131561159857600080fd5b6080808501526115af60a0850182602085016114a2565b95945050505050565b600181811c908216806115cc57607f821691505b602082108103611605577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006110016040830184610f6556fea264697066735822122049ed6ab0d9074e05e47cd74c0d94a2a195b50ad34fac9b404325361d1bcbc0eb64736f6c634300080d0033",
    "sourceMap": "308:935:104:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;979:262;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;870:20:34;;;;;;;;;;;;1564:42:108;1552:55;;;1534:74;;1522:2;1507:18;870:20:34;1388:226:108;2840:128:34;;;:::i;:::-;;;;;;;:::i;2088:85::-;;;;;;:::i;:::-;;:::i;:::-;;955:144:40;;;;;;:::i;:::-;;:::i;414:449:104:-;;;:::i;:::-;;;;;;;;:::i;3209:109:34:-;;;;;;:::i;:::-;;:::i;440:168:40:-;;;;;;:::i;:::-;;:::i;:::-;;;4687:14:108;;4680:22;4662:41;;4650:2;4635:18;440:168:40;4522:187:108;1736:106:34;;;;;;:::i;:::-;;:::i;378:87:63:-;;;:::i;867:108:104:-;;;;;;:::i;:::-;;:::i;1302:137:34:-;;;;;;:::i;:::-;;:::i;1052:17::-;;;;;;;;;6966:25:108;;;6954:2;6939:18;1052:17:34;6820:177:108;3014:149:34;;;;;;:::i;:::-;;:::i;2623:171::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1253:146:40:-;;;;;;:::i;:::-;;:::i;2337:124:34:-;;;;;;:::i;:::-;;:::i;514:113:63:-;;;;;;:::i;:::-;;:::i;979:262:104:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1132:19:104;1144:6;1132:11;:19::i;:::-;1114:83;;;;;;;;;;;;:::i;:::-;1210:26;;;;;;;;1063:134;;;;;1210:26;;;;;;;;;;;;;;;;;;;;;;;;;;;979:262;-1:-1:-1;;;;;;979:262:104:o;2840:128:34:-;2901:16;2932:31;;;;;;;;;;;;;;2088:85;716:23:40;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;2153:15:34::1;2161:6;2153:7;:15::i;:::-;2088:85:::0;:::o;955:144:40:-;186:49:65;722:29:64;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1036:51:40::1;;:43;:51:::0;;;238:53:41;1036:51:40::1;::::0;;;;:58;;;::::1;1090:4;1036:58;::::0;;955:144::o;414:449:104:-;538:15;;;551:1;538:15;;;;;;;;;465:20;;;;538:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;568:29:104;;;595:1;568:29;;;;;;;;;531:22;;-1:-1:-1;568:29:104;;;;;;;;;;-1:-1:-1;568:29:104;559:38;;604:13;;;;;;;;;;;;;;;;;:4;609:1;604:7;;;;;;;;:::i;:::-;;;;;;:13;;;;635:28;623:6;630:1;623:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;670:13;;;;;;;;;;;;;;;;;:4;675:1;670:7;;;;;;;;:::i;:::-;;;;;;:13;;;;701:26;689:6;696:1;689:9;;;;;;;;:::i;:::-;;;;;;:38;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;734:13;;;;;;;;;;;;;;;;;:4;739:1;734:7;;;;;;;;:::i;:::-;;;;;;:13;;;;765:28;753:6;760:1;753:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;800:13;;;;;;;;;;;;;;;;;:4;805:1;800:7;;;;;;;;:::i;:::-;;;;;;:13;;;;831:27;819:6;826:1;819:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;414:449:104;;:::o;3209:109:34:-;3282:31;;;;;;;;;;;;;;440:168:40;527:53;;;508:4;527:53;;;238::41;527::40;;;;;;;;;:76;;;596:7;:5;:7::i;:::-;584:19;;:8;:19;;;527:76;520:83;440:168;-1:-1:-1;;440:168:40:o;1736:106:34:-;716:23:40;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;1818:19:34::1;1823:6;1831:5;1818:4;:19::i;:::-;1736:106:::0;;:::o;378:87:63:-;424:7;450:8;186:49:65;722:29:64;;;;647:111;450:8:63;443:15;;378:87;:::o;867:108:104:-;940:30;944:6;963:5;952:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;940:3;:30::i;1302:137:34:-;186:49:65;722:29:64;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1364:5:34::1;:14:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;;;;1424:4:::1;1384:50;::::0;::::1;10625:74:108::0;10715:18;;;10708:34;;;;1384:31:34::1;::::0;10598:18:108;;1384:50:34::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;2623:171::-;2768:21;;;;:13;:21;;;;;2761:28;;2698:12;;2768:21;2761:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2623:171;;;:::o;1253:146:40:-;186:49:65;722:29:64;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1343:51:40::1;;:43;:51:::0;;;238:53:41;1343:51:40::1;::::0;;;;1336:58;;;::::1;::::0;;1253:146::o;2337:124:34:-;2404:4;2423:21;;;:13;:21;;;;;:28;;;;;:::i;:::-;:33;;;2337:124;-1:-1:-1;;;2337:124:34:o;514:113:63:-;186:49:65;722:29:64;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;593:27:63::1;612:7;593:18;:27::i;242:159:65:-:0;186:49;;242:159::o;4201:214:34:-;4306:21;;;;:13;:21;;;;;4299:28;;;:::i;:::-;4366:5;;4359:51;;;;;;;;6966:25:108;;;4366:5:34;;;;;4359:43;;6939:18:108;;4359:51:34;6820:177:108;3672:226:34;3778:21;;;;:13;:21;;;;;;;;:29;;;;;;;;:::i;:::-;-1:-1:-1;3846:5:34;;3839:54;;;;;3846:5;;;;;3839:39;;:54;;3879:6;;3887:5;;3839:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3672:226;;:::o;1100:97:64:-;186:49:65;1359:7:64;;1338:38;;1172:18;;1182:7;;186:49:65;;1338:38:64;;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;;;;;;;;;;;;;;1203:207::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:108;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:108;;14:180;-1:-1:-1;14:180:108:o;199:258::-;271:1;281:113;295:6;292:1;289:13;281:113;;;371:11;;;365:18;352:11;;;345:39;317:2;310:10;281:113;;;412:6;409:1;406:13;403:48;;;447:1;438:6;433:3;429:16;422:27;403:48;;199:258;;;:::o;462:317::-;504:3;542:5;536:12;569:6;564:3;557:19;585:63;641:6;634:4;629:3;625:14;618:4;611:5;607:16;585:63;:::i;:::-;693:2;681:15;698:66;677:88;668:98;;;;768:4;664:109;;462:317;-1:-1:-1;;462:317:108:o;784:599::-;979:2;968:9;961:21;1024:6;1018:13;1013:2;1002:9;998:18;991:41;1100:2;1092:6;1088:15;1082:22;1079:1;1068:37;1063:2;1052:9;1048:18;1041:65;1170:42;1164:2;1156:6;1152:15;1146:22;1142:71;1137:2;1126:9;1122:18;1115:99;942:4;1261:2;1253:6;1249:15;1243:22;1303:4;1296;1285:9;1281:20;1274:34;1325:52;1372:3;1361:9;1357:19;1343:12;1325:52;:::i;:::-;1317:60;784:599;-1:-1:-1;;;;784:599:108:o;1619:632::-;1790:2;1842:21;;;1912:13;;1815:18;;;1934:22;;;1761:4;;1790:2;2013:15;;;;1987:2;1972:18;;;1761:4;2056:169;2070:6;2067:1;2064:13;2056:169;;;2131:13;;2119:26;;2200:15;;;;2165:12;;;;2092:1;2085:9;2056:169;;;-1:-1:-1;2242:3:108;;1619:632;-1:-1:-1;;;;;;1619:632:108:o;2256:154::-;2342:42;2335:5;2331:54;2324:5;2321:65;2311:93;;2400:1;2397;2390:12;2415:247;2474:6;2527:2;2515:9;2506:7;2502:23;2498:32;2495:52;;;2543:1;2540;2533:12;2495:52;2582:9;2569:23;2601:31;2626:5;2601:31;:::i;:::-;2651:5;2415:247;-1:-1:-1;;;2415:247:108:o;2667:184::-;2719:77;2716:1;2709:88;2816:4;2813:1;2806:15;2840:4;2837:1;2830:15;2856:1661;3110:4;3158:2;3147:9;3143:18;3188:2;3177:9;3170:21;3211:6;3246;3240:13;3277:6;3269;3262:22;3315:2;3304:9;3300:18;3293:25;;3377:2;3367:6;3364:1;3360:14;3349:9;3345:30;3341:39;3327:53;;3399:4;3438:2;3430:6;3426:15;3459:1;3469:314;3483:6;3480:1;3477:13;3469:314;;;3572:66;3560:9;3552:6;3548:22;3544:95;3539:3;3532:108;3663:40;3696:6;3687;3681:13;3663:40;:::i;:::-;3653:50;-1:-1:-1;3761:12:108;;;;3726:15;;;;3505:1;3498:9;3469:314;;;-1:-1:-1;;3819:22:108;;;3799:18;;;3792:50;3895:13;;3917:24;;;3999:15;;;;3959;;;-1:-1:-1;3895:13:108;-1:-1:-1;4034:1:108;4044:445;4060:8;4055:3;4052:17;4044:445;;;4131:8;4125:15;4170:2;4166;4163:10;4153:218;;4215:77;4212:1;4205:88;4320:4;4317:1;4310:15;4352:4;4349:1;4342:15;4153:218;4384:17;;4462;;;;4423:14;;;;4088:1;4079:11;4044:445;;;-1:-1:-1;4506:5:108;;2856:1661;-1:-1:-1;;;;;;;2856:1661:108:o;4714:184::-;4766:77;4763:1;4756:88;4863:4;4860:1;4853:15;4887:4;4884:1;4877:15;4903:334;4974:2;4968:9;5030:2;5020:13;;5035:66;5016:86;5004:99;;5133:18;5118:34;;5154:22;;;5115:62;5112:88;;;5180:18;;:::i;:::-;5216:2;5209:22;4903:334;;-1:-1:-1;4903:334:108:o;5242:245::-;5290:4;5323:18;5315:6;5312:30;5309:56;;;5345:18;;:::i;:::-;-1:-1:-1;5402:2:108;5390:15;5407:66;5386:88;5476:4;5382:99;;5242:245::o;5492:462::-;5534:5;5587:3;5580:4;5572:6;5568:17;5564:27;5554:55;;5605:1;5602;5595:12;5554:55;5641:6;5628:20;5672:48;5688:31;5716:2;5688:31;:::i;:::-;5672:48;:::i;:::-;5745:2;5736:7;5729:19;5791:3;5784:4;5779:2;5771:6;5767:15;5763:26;5760:35;5757:55;;;5808:1;5805;5798:12;5757:55;5873:2;5866:4;5858:6;5854:17;5847:4;5838:7;5834:18;5821:55;5921:1;5896:16;;;5914:4;5892:27;5885:38;;;;5900:7;5492:462;-1:-1:-1;;;5492:462:108:o;5959:388::-;6036:6;6044;6097:2;6085:9;6076:7;6072:23;6068:32;6065:52;;;6113:1;6110;6103:12;6065:52;6149:9;6136:23;6126:33;;6210:2;6199:9;6195:18;6182:32;6237:18;6229:6;6226:30;6223:50;;;6269:1;6266;6259:12;6223:50;6292:49;6333:7;6324:6;6313:9;6309:22;6292:49;:::i;:::-;6282:59;;;5959:388;;;;;:::o;6352:463::-;6455:6;6463;6516:2;6504:9;6495:7;6491:23;6487:32;6484:52;;;6532:1;6529;6522:12;6484:52;6568:9;6555:23;6545:33;;6629:2;6618:9;6614:18;6601:32;6656:18;6648:6;6645:30;6642:50;;;6688:1;6685;6678:12;6642:50;6711:22;;6767:3;6749:16;;;6745:26;6742:46;;;6784:1;6781;6774:12;6742:46;6807:2;6797:12;;;6352:463;;;;;:::o;7002:320::-;7070:6;7123:2;7111:9;7102:7;7098:23;7094:32;7091:52;;;7139:1;7136;7129:12;7091:52;7179:9;7166:23;7212:18;7204:6;7201:30;7198:50;;;7244:1;7241;7234:12;7198:50;7267:49;7308:7;7299:6;7288:9;7284:22;7267:49;:::i;7327:218::-;7474:2;7463:9;7456:21;7437:4;7494:45;7535:2;7524:9;7520:18;7512:6;7494:45;:::i;7550:118::-;7637:5;7634:1;7623:20;7616:5;7613:31;7603:59;;7658:1;7655;7648:12;7673:1065;7785:6;7793;7801;7809;7862:3;7850:9;7841:7;7837:23;7833:33;7830:53;;;7879:1;7876;7869:12;7830:53;7911:9;7905:16;7961:10;7954:5;7950:22;7943:5;7940:33;7930:61;;7987:1;7984;7977:12;7930:61;8060:2;8045:18;;8039:25;8010:5;;-1:-1:-1;8073:31:108;8039:25;8073:31;:::i;:::-;8175:2;8160:18;;8154:25;8123:7;;-1:-1:-1;8188:33:108;8154:25;8188:33;:::i;:::-;8291:2;8276:18;;8270:25;8240:7;;-1:-1:-1;8318:18:108;8307:30;;8304:50;;;8350:1;8347;8340:12;8304:50;8373:22;;8426:4;8418:13;;8414:27;-1:-1:-1;8404:55:108;;8455:1;8452;8445:12;8404:55;8484:2;8478:9;8509:48;8525:31;8553:2;8525:31;:::i;8509:48::-;8580:2;8573:5;8566:17;8620:7;8615:2;8610;8606;8602:11;8598:20;8595:33;8592:53;;;8641:1;8638;8631:12;8592:53;8654:54;8705:2;8700;8693:5;8689:14;8684:2;8680;8676:11;8654:54;:::i;:::-;7673:1065;;;;-1:-1:-1;7673:1065:108;;-1:-1:-1;;;;7673:1065:108:o;8743:184::-;8795:77;8792:1;8785:88;8892:4;8889:1;8882:15;8916:4;8913:1;8906:15;8932:326;9021:6;9016:3;9009:19;9073:6;9066:5;9059:4;9054:3;9050:14;9037:43;;9125:1;9118:4;9109:6;9104:3;9100:16;9096:27;9089:38;8991:3;9247:4;9177:66;9172:2;9164:6;9160:15;9156:88;9151:3;9147:98;9143:109;9136:116;;8932:326;;;;:::o;9263:1183::-;9460:2;9449:9;9442:21;9512:6;9499:20;9494:2;9483:9;9479:18;9472:48;9423:4;9567:2;9559:6;9555:15;9542:29;9580;9603:5;9580:29;:::i;:::-;9659:5;9656:1;9645:20;9640:2;9629:9;9625:18;9618:48;;9715:2;9707:6;9703:15;9690:29;9728:33;9753:7;9728:33;:::i;:::-;9810:42;9801:7;9797:56;9792:2;9781:9;9777:18;9770:84;;9914:2;9906:6;9902:15;9889:29;9994:66;9985:6;9969:14;9965:27;9961:100;9941:18;9937:125;9927:153;;10076:1;10073;10066:12;9927:153;10104:31;;10158:21;;10202:18;10191:30;;10188:50;;;10234:1;10231;10224:12;10188:50;10282:6;10266:14;10262:27;10254:6;10250:40;10247:60;;;10303:1;10300;10293:12;10247:60;10345:4;10338;10327:9;10323:20;10316:34;10367:73;10435:3;10424:9;10420:19;10412:6;10407:2;10398:7;10394:16;10367:73;:::i;:::-;10359:81;9263:1183;-1:-1:-1;;;;;9263:1183:108:o;10753:437::-;10832:1;10828:12;;;;10875;;;10896:61;;10950:4;10942:6;10938:17;10928:27;;10896:61;11003:2;10995:6;10992:14;10972:18;10969:38;10966:218;;11040:77;11037:1;11030:88;11141:4;11138:1;11131:15;11169:4;11166:1;11159:15;10966:218;;10753:437;;;:::o;11195:289::-;11370:6;11359:9;11352:25;11413:2;11408;11397:9;11393:18;11386:30;11333:4;11433:45;11474:2;11463:9;11459:18;11451:6;11433:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeWriter(address)": "4fef6a38",
    "getEntities()": "31b933b9",
    "getEntitiesWithValue(bytes)": "b361be46",
    "getRawValue(uint256)": "b8bc073d",
    "getSchema()": "6b122fe0",
    "getValue(uint256)": "0ff4c916",
    "has(uint256)": "cccf7a8e",
    "id()": "af640d0f",
    "owner()": "8da5cb5b",
    "registerIndexer(address)": "75c0669c",
    "registerWorld(address)": "9d2c76b4",
    "remove(uint256)": "4cc82215",
    "set(uint256,(uint256,int32,address,string))": "9ad6ae98",
    "set(uint256,bytes)": "8b282947",
    "transferOwnership(address)": "f2fde38b",
    "unauthorizeWriter(address)": "bf4fe57e",
    "world()": "30b67baa",
    "writeAccess(address)": "861eb905"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"world\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BareComponent__NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableWritable__NotWriter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"authorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntities\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getRawValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"enum LibTypes.SchemaValue[]\",\"name\":\"values\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getValue\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"int32\",\"name\":\"b\",\"type\":\"int32\"},{\"internalType\":\"address\",\"name\":\"c\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"d\",\"type\":\"string\"}],\"internalType\":\"struct TestStructBare\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registerIndexer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_world\",\"type\":\"address\"}],\"name\":\"registerWorld\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"int32\",\"name\":\"b\",\"type\":\"int32\"},{\"internalType\":\"address\",\"name\":\"c\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"d\",\"type\":\"string\"}],\"internalType\":\"struct TestStructBare\",\"name\":\"value\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"unauthorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"writeAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeWriter(address)\":{\"params\":{\"writer\":\"Address to grant write access to.\"}},\"getRawValue(uint256)\":{\"params\":{\"entity\":\"Entity to get the raw value in this component for.\"}},\"has(uint256)\":{\"params\":{\"entity\":\"Entity to check whether it has a value in this component for.\"}},\"owner()\":{\"returns\":{\"_0\":\"conrtact owner\"}},\"registerWorld(address)\":{\"params\":{\"_world\":\"Address of the World contract.\"}},\"remove(uint256)\":{\"params\":{\"entity\":\"Entity to remove from this component.\"}},\"set(uint256,bytes)\":{\"params\":{\"entity\":\"Entity to set the value for.\",\"value\":\"Value to set for the given entity.\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}},\"unauthorizeWriter(address)\":{\"params\":{\"writer\":\"Address to revoke write access.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeWriter(address)\":{\"notice\":\"Grant write access to the given address. Can only be called by the owner.\"},\"getEntities()\":{\"notice\":\"Not implemented in BareComponent \"},\"getEntitiesWithValue(bytes)\":{\"notice\":\"Not implemented in BareComponent \"},\"getRawValue(uint256)\":{\"notice\":\"Get the raw (abi-encoded) value of the given entity in this component.\"},\"getSchema()\":{\"notice\":\"Return the keys and value types of the schema of this component. \"},\"has(uint256)\":{\"notice\":\"Check whether the given entity has a value in this component.\"},\"id()\":{\"notice\":\"Public identifier of this component \"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"registerIndexer(address)\":{\"notice\":\"Not implemented in BareComponent \"},\"registerWorld(address)\":{\"notice\":\"Register this component in the given world.\"},\"remove(uint256)\":{\"notice\":\"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"set(uint256,bytes)\":{\"notice\":\"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"},\"unauthorizeWriter(address)\":{\"notice\":\"Revoke write access from the given address. Can only be called by the owner.\"},\"world()\":{\"notice\":\"Reference to the World contract this component is registered in \"},\"writeAccess(address)\":{\"notice\":\"Whether given operator has write access \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/TestBareComponent.sol\":\"TestBareComponent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@solidstate/=node_modules/@solidstate/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":memmove/=node_modules/memmove/src/\",\":solecs/=node_modules/@latticexyz/solecs/src/\",\":solmate/=node_modules/solmate/src/\"]},\"sources\":{\"node_modules/@latticexyz/solecs/src/BareComponent.sol\":{\"keccak256\":\"0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a\",\"dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA\"]},\"node_modules/@latticexyz/solecs/src/LibTypes.sol\":{\"keccak256\":\"0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798\",\"dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH\"]},\"node_modules/@latticexyz/solecs/src/MapSet.sol\":{\"keccak256\":\"0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288\",\"dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9\"]},\"node_modules/@latticexyz/solecs/src/Ownable.sol\":{\"keccak256\":\"0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4\",\"dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza\"]},\"node_modules/@latticexyz/solecs/src/OwnableWritable.sol\":{\"keccak256\":\"0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c\",\"dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A\"]},\"node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol\":{\"keccak256\":\"0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4\",\"dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW\"]},\"node_modules/@latticexyz/solecs/src/Set.sol\":{\"keccak256\":\"0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46\",\"dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME\"]},\"node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol\":{\"keccak256\":\"0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629\",\"dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW\"]},\"node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol\":{\"keccak256\":\"0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e\",\"dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi\"]},\"node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol\":{\"keccak256\":\"0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78\",\"dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY\"]},\"node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol\":{\"keccak256\":\"0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f\",\"dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9\"]},\"node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol\":{\"keccak256\":\"0xd4e257a8c2c2ddceba671d791df0556d40b15b06f6ca479784afb143d2919adf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcf752a88f0679992ebea18e93de0c13bf0d840c222b764865c889c72349d9e1\",\"dweb:/ipfs/QmaSpUThcJGNkZnz4uAHLJKdhYTeQQCSCKagDaTF8h9DJ7\"]},\"node_modules/@latticexyz/solecs/src/interfaces/Query.sol\":{\"keccak256\":\"0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059\",\"dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP\"]},\"node_modules/@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\",\"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\"]},\"node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"node_modules/@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"node_modules/@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\",\"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\"]},\"node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"node_modules/@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"node_modules/@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]},\"node_modules/memmove/src/Array.sol\":{\"keccak256\":\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"]},\"node_modules/memmove/src/LinkedList.sol\":{\"keccak256\":\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"]},\"src/test/TestBareComponent.sol\":{\"keccak256\":\"0xfe506e9240a605e8916abbbf16ba0f38c4f8e43caa0f3e209d036e0113604a3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c061c91a498dd1e3a21d1bc562ee06424bbed7834d8b7b340f7bbfc2dfd16086\",\"dweb:/ipfs/Qmb8MRh2QUzvYzexNwQ2g3jcU3iVbTye2FqUkb7ugzV9dc\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BareComponent__NotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnableWritable__NotWriter"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotTransitiveOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntities",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRawValue",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "keys",
              "type": "string[]"
            },
            {
              "internalType": "enum LibTypes.SchemaValue[]",
              "name": "values",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getValue",
          "outputs": [
            {
              "internalType": "struct TestStructBare",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "a",
                  "type": "uint256"
                },
                {
                  "internalType": "int32",
                  "name": "b",
                  "type": "int32"
                },
                {
                  "internalType": "address",
                  "name": "c",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "d",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "has",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "id",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerIndexer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerWorld"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "struct TestStructBare",
              "name": "value",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "a",
                  "type": "uint256"
                },
                {
                  "internalType": "int32",
                  "name": "b",
                  "type": "int32"
                },
                {
                  "internalType": "address",
                  "name": "c",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "d",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unauthorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "world",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "writeAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeWriter(address)": {
            "params": {
              "writer": "Address to grant write access to."
            }
          },
          "getRawValue(uint256)": {
            "params": {
              "entity": "Entity to get the raw value in this component for."
            }
          },
          "has(uint256)": {
            "params": {
              "entity": "Entity to check whether it has a value in this component for."
            }
          },
          "owner()": {
            "returns": {
              "_0": "conrtact owner"
            }
          },
          "registerWorld(address)": {
            "params": {
              "_world": "Address of the World contract."
            }
          },
          "remove(uint256)": {
            "params": {
              "entity": "Entity to remove from this component."
            }
          },
          "set(uint256,bytes)": {
            "params": {
              "entity": "Entity to set the value for.",
              "value": "Value to set for the given entity."
            }
          },
          "transferOwnership(address)": {
            "params": {
              "account": "address of new owner"
            }
          },
          "unauthorizeWriter(address)": {
            "params": {
              "writer": "Address to revoke write access."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorizeWriter(address)": {
            "notice": "Grant write access to the given address. Can only be called by the owner."
          },
          "getEntities()": {
            "notice": "Not implemented in BareComponent "
          },
          "getEntitiesWithValue(bytes)": {
            "notice": "Not implemented in BareComponent "
          },
          "getRawValue(uint256)": {
            "notice": "Get the raw (abi-encoded) value of the given entity in this component."
          },
          "getSchema()": {
            "notice": "Return the keys and value types of the schema of this component. "
          },
          "has(uint256)": {
            "notice": "Check whether the given entity has a value in this component."
          },
          "id()": {
            "notice": "Public identifier of this component "
          },
          "owner()": {
            "notice": "get the ERC173 contract owner"
          },
          "registerIndexer(address)": {
            "notice": "Not implemented in BareComponent "
          },
          "registerWorld(address)": {
            "notice": "Register this component in the given world."
          },
          "remove(uint256)": {
            "notice": "Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "set(uint256,bytes)": {
            "notice": "Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "transferOwnership(address)": {
            "notice": "transfer contract ownership to new account"
          },
          "unauthorizeWriter(address)": {
            "notice": "Revoke write access from the given address. Can only be called by the owner."
          },
          "world()": {
            "notice": "Reference to the World contract this component is registered in "
          },
          "writeAccess(address)": {
            "notice": "Whether given operator has write access "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@solidstate/=node_modules/@solidstate/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "memmove/=node_modules/memmove/src/",
        "solecs/=node_modules/@latticexyz/solecs/src/",
        "solmate/=node_modules/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/TestBareComponent.sol": "TestBareComponent"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@latticexyz/solecs/src/BareComponent.sol": {
        "keccak256": "0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a",
        "urls": [
          "bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a",
          "dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/LibTypes.sol": {
        "keccak256": "0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102",
        "urls": [
          "bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798",
          "dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/MapSet.sol": {
        "keccak256": "0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db",
        "urls": [
          "bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288",
          "dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/Ownable.sol": {
        "keccak256": "0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209",
        "urls": [
          "bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4",
          "dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/OwnableWritable.sol": {
        "keccak256": "0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf",
        "urls": [
          "bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c",
          "dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol": {
        "keccak256": "0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5",
        "urls": [
          "bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4",
          "dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/Set.sol": {
        "keccak256": "0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344",
        "urls": [
          "bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46",
          "dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol": {
        "keccak256": "0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4",
        "urls": [
          "bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629",
          "dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol": {
        "keccak256": "0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9",
        "urls": [
          "bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e",
          "dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol": {
        "keccak256": "0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77",
        "urls": [
          "bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78",
          "dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol": {
        "keccak256": "0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9",
        "urls": [
          "bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f",
          "dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol": {
        "keccak256": "0xd4e257a8c2c2ddceba671d791df0556d40b15b06f6ca479784afb143d2919adf",
        "urls": [
          "bzz-raw://dcf752a88f0679992ebea18e93de0c13bf0d840c222b764865c889c72349d9e1",
          "dweb:/ipfs/QmaSpUThcJGNkZnz4uAHLJKdhYTeQQCSCKagDaTF8h9DJ7"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/interfaces/Query.sol": {
        "keccak256": "0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c",
        "urls": [
          "bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059",
          "dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/access/ownable/IOwnable.sol": {
        "keccak256": "0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1",
        "urls": [
          "bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38",
          "dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol": {
        "keccak256": "0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60",
        "urls": [
          "bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3",
          "dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/access/ownable/Ownable.sol": {
        "keccak256": "0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f",
        "urls": [
          "bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc",
          "dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol": {
        "keccak256": "0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9",
        "urls": [
          "bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52",
          "dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol": {
        "keccak256": "0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73",
        "urls": [
          "bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995",
          "dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6",
        "urls": [
          "bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555",
          "dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol": {
        "keccak256": "0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89",
        "urls": [
          "bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75",
          "dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/utils/AddressUtils.sol": {
        "keccak256": "0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf",
        "urls": [
          "bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929",
          "dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/utils/UintUtils.sol": {
        "keccak256": "0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8",
        "urls": [
          "bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2",
          "dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza"
        ],
        "license": "MIT"
      },
      "node_modules/memmove/src/Array.sol": {
        "keccak256": "0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515",
        "urls": [
          "bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1",
          "dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ"
        ],
        "license": "MIT"
      },
      "node_modules/memmove/src/LinkedList.sol": {
        "keccak256": "0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1",
        "urls": [
          "bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598",
          "dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc"
        ],
        "license": "MIT"
      },
      "src/test/TestBareComponent.sol": {
        "keccak256": "0xfe506e9240a605e8916abbbf16ba0f38c4f8e43caa0f3e209d036e0113604a3b",
        "urls": [
          "bzz-raw://c061c91a498dd1e3a21d1bc562ee06424bbed7834d8b7b340f7bbfc2dfd16086",
          "dweb:/ipfs/Qmb8MRh2QUzvYzexNwQ2g3jcU3iVbTye2FqUkb7ugzV9dc"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/TestBareComponent.sol",
    "id": 15928,
    "exportedSymbols": {
      "BareComponent": [
        4708
      ],
      "ID": [
        15763
      ],
      "LibTypes": [
        6298
      ],
      "TestBareComponent": [
        15927
      ],
      "TestStructBare": [
        15772
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1212:104",
    "nodes": [
      {
        "id": 15751,
        "nodeType": "PragmaDirective",
        "src": "32:24:104",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 15753,
        "nodeType": "ImportDirective",
        "src": "57:57:104",
        "nodes": [],
        "absolutePath": "node_modules/@latticexyz/solecs/src/BareComponent.sol",
        "file": "solecs/BareComponent.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15928,
        "sourceUnit": 4709,
        "symbolAliases": [
          {
            "foreign": {
              "id": 15752,
              "name": "BareComponent",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4708,
              "src": "66:13:104",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 15755,
        "nodeType": "ImportDirective",
        "src": "115:47:104",
        "nodes": [],
        "absolutePath": "node_modules/@latticexyz/solecs/src/LibTypes.sol",
        "file": "solecs/LibTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15928,
        "sourceUnit": 6299,
        "symbolAliases": [
          {
            "foreign": {
              "id": 15754,
              "name": "LibTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6298,
              "src": "124:8:104",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 15763,
        "nodeType": "VariableDeclaration",
        "src": "164:65:104",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "ID",
        "nameLocation": "181:2:104",
        "scope": 15928,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 15756,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "164:7:104",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "arguments": [
            {
              "arguments": [
                {
                  "hexValue": "6c69622e74657374436f6d706f6e656e7442617265",
                  "id": 15760,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "204:23:104",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_b37b5d64788473f0adc4ef64537e77af09c97f23d1de34c1ad392becb4a515c8",
                    "typeString": "literal_string \"lib.testComponentBare\""
                  },
                  "value": "lib.testComponentBare"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_b37b5d64788473f0adc4ef64537e77af09c97f23d1de34c1ad392becb4a515c8",
                    "typeString": "literal_string \"lib.testComponentBare\""
                  }
                ],
                "id": 15759,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "194:9:104",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 15761,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "194:34:104",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            ],
            "id": 15758,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "186:7:104",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_uint256_$",
              "typeString": "type(uint256)"
            },
            "typeName": {
              "id": 15757,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "186:7:104",
              "typeDescriptions": {}
            }
          },
          "id": 15762,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "names": [],
          "nodeType": "FunctionCall",
          "src": "186:43:104",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 15772,
        "nodeType": "StructDefinition",
        "src": "232:74:104",
        "nodes": [],
        "canonicalName": "TestStructBare",
        "members": [
          {
            "constant": false,
            "id": 15765,
            "mutability": "mutable",
            "name": "a",
            "nameLocation": "266:1:104",
            "nodeType": "VariableDeclaration",
            "scope": 15772,
            "src": "258:9:104",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15764,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "258:7:104",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15767,
            "mutability": "mutable",
            "name": "b",
            "nameLocation": "277:1:104",
            "nodeType": "VariableDeclaration",
            "scope": 15772,
            "src": "271:7:104",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int32",
              "typeString": "int32"
            },
            "typeName": {
              "id": 15766,
              "name": "int32",
              "nodeType": "ElementaryTypeName",
              "src": "271:5:104",
              "typeDescriptions": {
                "typeIdentifier": "t_int32",
                "typeString": "int32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15769,
            "mutability": "mutable",
            "name": "c",
            "nameLocation": "290:1:104",
            "nodeType": "VariableDeclaration",
            "scope": 15772,
            "src": "282:9:104",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15768,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "282:7:104",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15771,
            "mutability": "mutable",
            "name": "d",
            "nameLocation": "302:1:104",
            "nodeType": "VariableDeclaration",
            "scope": 15772,
            "src": "295:8:104",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 15770,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "295:6:104",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "TestStructBare",
        "nameLocation": "239:14:104",
        "scope": 15928,
        "visibility": "public"
      },
      {
        "id": 15927,
        "nodeType": "ContractDefinition",
        "src": "308:935:104",
        "nodes": [
          {
            "id": 15784,
            "nodeType": "FunctionDefinition",
            "src": "356:54:104",
            "nodes": [],
            "body": {
              "id": 15783,
              "nodeType": "Block",
              "src": "408:2:104",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 15779,
                    "name": "world",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15776,
                    "src": "397:5:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 15780,
                    "name": "ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15763,
                    "src": "404:2:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 15781,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 15778,
                  "name": "BareComponent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4708,
                  "src": "383:13:104"
                },
                "nodeType": "ModifierInvocation",
                "src": "383:24:104"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 15777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15776,
                  "mutability": "mutable",
                  "name": "world",
                  "nameLocation": "376:5:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 15784,
                  "src": "368:13:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "368:7:104",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "367:15:104"
            },
            "returnParameters": {
              "id": 15782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:0:104"
            },
            "scope": 15927,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 15869,
            "nodeType": "FunctionDefinition",
            "src": "414:449:104",
            "nodes": [],
            "body": {
              "id": 15868,
              "nodeType": "Block",
              "src": "525:338:104",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 15801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15795,
                      "name": "keys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15789,
                      "src": "531:4:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "34",
                          "id": 15799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "551:1:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          }
                        ],
                        "id": 15798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "538:12:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (string memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 15796,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "542:6:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 15797,
                          "nodeType": "ArrayTypeName",
                          "src": "542:8:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        }
                      },
                      "id": 15800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "538:15:104",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "531:22:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 15802,
                  "nodeType": "ExpressionStatement",
                  "src": "531:22:104"
                },
                {
                  "expression": {
                    "id": 15810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15803,
                      "name": "values",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15793,
                      "src": "559:6:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "34",
                          "id": 15808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "595:1:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          }
                        ],
                        "id": 15807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "568:26:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (enum LibTypes.SchemaValue[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 15805,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 15804,
                              "name": "LibTypes.SchemaValue",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 6297,
                              "src": "572:20:104"
                            },
                            "referencedDeclaration": 6297,
                            "src": "572:20:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SchemaValue_$6297",
                              "typeString": "enum LibTypes.SchemaValue"
                            }
                          },
                          "id": 15806,
                          "nodeType": "ArrayTypeName",
                          "src": "572:22:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_storage_ptr",
                            "typeString": "enum LibTypes.SchemaValue[]"
                          }
                        }
                      },
                      "id": 15809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "568:29:104",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "src": "559:38:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                      "typeString": "enum LibTypes.SchemaValue[] memory"
                    }
                  },
                  "id": 15811,
                  "nodeType": "ExpressionStatement",
                  "src": "559:38:104"
                },
                {
                  "expression": {
                    "id": 15816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15812,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15789,
                        "src": "604:4:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 15814,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 15813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "609:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "604:7:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "61",
                      "id": 15815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "614:3:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
                        "typeString": "literal_string \"a\""
                      },
                      "value": "a"
                    },
                    "src": "604:13:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 15817,
                  "nodeType": "ExpressionStatement",
                  "src": "604:13:104"
                },
                {
                  "expression": {
                    "id": 15824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15818,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15793,
                        "src": "623:6:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 15820,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 15819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "630:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "623:9:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 15821,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6298,
                          "src": "635:8:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$6298_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 15822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6297,
                        "src": "635:20:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$6297_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 15823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "UINT256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6276,
                      "src": "635:28:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "623:40:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$6297",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 15825,
                  "nodeType": "ExpressionStatement",
                  "src": "623:40:104"
                },
                {
                  "expression": {
                    "id": 15830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15826,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15789,
                        "src": "670:4:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 15828,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 15827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "675:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "670:7:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "62",
                      "id": 15829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "680:3:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510",
                        "typeString": "literal_string \"b\""
                      },
                      "value": "b"
                    },
                    "src": "670:13:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 15831,
                  "nodeType": "ExpressionStatement",
                  "src": "670:13:104"
                },
                {
                  "expression": {
                    "id": 15838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15832,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15793,
                        "src": "689:6:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 15834,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 15833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "696:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "689:9:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 15835,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6298,
                          "src": "701:8:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$6298_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 15836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6297,
                        "src": "701:20:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$6297_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 15837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "INT32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6266,
                      "src": "701:26:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "689:38:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$6297",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 15839,
                  "nodeType": "ExpressionStatement",
                  "src": "689:38:104"
                },
                {
                  "expression": {
                    "id": 15844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15840,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15789,
                        "src": "734:4:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 15842,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 15841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "739:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "734:7:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "63",
                      "id": 15843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "744:3:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_0b42b6393c1f53060fe3ddbfcd7aadcca894465a5a438f69c87d790b2299b9b2",
                        "typeString": "literal_string \"c\""
                      },
                      "value": "c"
                    },
                    "src": "734:13:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 15845,
                  "nodeType": "ExpressionStatement",
                  "src": "734:13:104"
                },
                {
                  "expression": {
                    "id": 15852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15846,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15793,
                        "src": "753:6:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 15848,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 15847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "760:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "753:9:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 15849,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6298,
                          "src": "765:8:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$6298_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 15850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6297,
                        "src": "765:20:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$6297_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 15851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6279,
                      "src": "765:28:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "753:40:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$6297",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 15853,
                  "nodeType": "ExpressionStatement",
                  "src": "753:40:104"
                },
                {
                  "expression": {
                    "id": 15858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15854,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15789,
                        "src": "800:4:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 15856,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 15855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "805:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "800:7:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "64",
                      "id": 15857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "810:3:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_f1918e8562236eb17adc8502332f4c9c82bc14e19bfc0aa10ab674ff75b3d2f3",
                        "typeString": "literal_string \"d\""
                      },
                      "value": "d"
                    },
                    "src": "800:13:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 15859,
                  "nodeType": "ExpressionStatement",
                  "src": "800:13:104"
                },
                {
                  "expression": {
                    "id": 15866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15860,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15793,
                        "src": "819:6:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 15862,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 15861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "826:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "819:9:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 15863,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6298,
                          "src": "831:8:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$6298_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 15864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6297,
                        "src": "831:20:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$6297_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 15865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STRING",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6278,
                      "src": "831:27:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "819:39:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$6297",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 15867,
                  "nodeType": "ExpressionStatement",
                  "src": "819:39:104"
                }
              ]
            },
            "baseFunctions": [
              7089
            ],
            "functionSelector": "6b122fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "423:9:104",
            "overrides": {
              "id": 15786,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "447:8:104"
            },
            "parameters": {
              "id": 15785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "432:2:104"
            },
            "returnParameters": {
              "id": 15794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15789,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "481:4:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 15869,
                  "src": "465:20:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15787,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "465:6:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 15788,
                    "nodeType": "ArrayTypeName",
                    "src": "465:8:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15793,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "517:6:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 15869,
                  "src": "487:36:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                    "typeString": "enum LibTypes.SchemaValue[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15791,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 15790,
                        "name": "LibTypes.SchemaValue",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6297,
                        "src": "487:20:104"
                      },
                      "referencedDeclaration": 6297,
                      "src": "487:20:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "id": 15792,
                    "nodeType": "ArrayTypeName",
                    "src": "487:22:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_storage_ptr",
                      "typeString": "enum LibTypes.SchemaValue[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "464:60:104"
            },
            "scope": 15927,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 15886,
            "nodeType": "FunctionDefinition",
            "src": "867:108:104",
            "nodes": [],
            "body": {
              "id": 15885,
              "nodeType": "Block",
              "src": "934:41:104",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15878,
                        "name": "entity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15871,
                        "src": "944:6:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 15881,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15874,
                            "src": "963:5:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestStructBare_$15772_calldata_ptr",
                              "typeString": "struct TestStructBare calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_TestStructBare_$15772_calldata_ptr",
                              "typeString": "struct TestStructBare calldata"
                            }
                          ],
                          "expression": {
                            "id": 15879,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "952:3:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 15880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "952:10:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 15882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "952:17:104",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 15877,
                      "name": "set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15886,
                        4583
                      ],
                      "referencedDeclaration": 4583,
                      "src": "940:3:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 15883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:30:104",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15884,
                  "nodeType": "ExpressionStatement",
                  "src": "940:30:104"
                }
              ]
            },
            "functionSelector": "9ad6ae98",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "876:3:104",
            "parameters": {
              "id": 15875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15871,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "888:6:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 15886,
                  "src": "880:14:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15874,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "920:5:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 15886,
                  "src": "896:29:104",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TestStructBare_$15772_calldata_ptr",
                    "typeString": "struct TestStructBare"
                  },
                  "typeName": {
                    "id": 15873,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15872,
                      "name": "TestStructBare",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15772,
                      "src": "896:14:104"
                    },
                    "referencedDeclaration": 15772,
                    "src": "896:14:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TestStructBare_$15772_storage_ptr",
                      "typeString": "struct TestStructBare"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "879:47:104"
            },
            "returnParameters": {
              "id": 15876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "934:0:104"
            },
            "scope": 15927,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 15926,
            "nodeType": "FunctionDefinition",
            "src": "979:262:104",
            "nodes": [],
            "body": {
              "id": 15925,
              "nodeType": "Block",
              "src": "1057:184:104",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    15895,
                    15897,
                    15899,
                    15901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15895,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "1072:1:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 15925,
                      "src": "1064:9:104",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15894,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1064:7:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 15897,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "1081:1:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 15925,
                      "src": "1075:7:104",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      },
                      "typeName": {
                        "id": 15896,
                        "name": "int32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1075:5:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int32",
                          "typeString": "int32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 15899,
                      "mutability": "mutable",
                      "name": "c",
                      "nameLocation": "1092:1:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 15925,
                      "src": "1084:9:104",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 15898,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1084:7:104",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 15901,
                      "mutability": "mutable",
                      "name": "d",
                      "nameLocation": "1109:1:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 15925,
                      "src": "1095:15:104",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 15900,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1095:6:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15917,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15905,
                            "name": "entity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15888,
                            "src": "1144:6:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 15904,
                          "name": "getRawValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4628,
                          "src": "1132:11:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) view returns (bytes memory)"
                          }
                        },
                        "id": 15906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1132:19:104",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 15908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1160:6:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 15907,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1160:6:104",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 15910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1168:5:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int32_$",
                              "typeString": "type(int32)"
                            },
                            "typeName": {
                              "id": 15909,
                              "name": "int32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1168:5:104",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 15912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1175:7:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 15911,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1175:7:104",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 15914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1184:6:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 15913,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1184:6:104",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 15915,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1159:32:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint32_$_$_t_type$_t_int32_$_$_t_type$_t_address_$_$_t_type$_t_string_storage_ptr_$_$",
                          "typeString": "tuple(type(uint32),type(int32),type(address),type(string storage pointer))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint32_$_$_t_type$_t_int32_$_$_t_type$_t_address_$_$_t_type$_t_string_storage_ptr_$_$",
                          "typeString": "tuple(type(uint32),type(int32),type(address),type(string storage pointer))"
                        }
                      ],
                      "expression": {
                        "id": 15902,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1114:3:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 15903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1114:10:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 15916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1114:83:104",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint32_$_t_int32_$_t_address_payable_$_t_string_memory_ptr_$",
                      "typeString": "tuple(uint32,int32,address payable,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1063:134:104"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15919,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15895,
                        "src": "1225:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 15920,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15897,
                        "src": "1228:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int32",
                          "typeString": "int32"
                        }
                      },
                      {
                        "id": 15921,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15899,
                        "src": "1231:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15922,
                        "name": "d",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15901,
                        "src": "1234:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int32",
                          "typeString": "int32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 15918,
                      "name": "TestStructBare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15772,
                      "src": "1210:14:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TestStructBare_$15772_storage_ptr_$",
                        "typeString": "type(struct TestStructBare storage pointer)"
                      }
                    },
                    "id": 15923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1210:26:104",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TestStructBare_$15772_memory_ptr",
                      "typeString": "struct TestStructBare memory"
                    }
                  },
                  "functionReturnParameters": 15893,
                  "id": 15924,
                  "nodeType": "Return",
                  "src": "1203:33:104"
                }
              ]
            },
            "functionSelector": "0ff4c916",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "988:8:104",
            "parameters": {
              "id": 15889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15888,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "1005:6:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 15926,
                  "src": "997:14:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15887,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "996:16:104"
            },
            "returnParameters": {
              "id": 15893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15892,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15926,
                  "src": "1034:21:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TestStructBare_$15772_memory_ptr",
                    "typeString": "struct TestStructBare"
                  },
                  "typeName": {
                    "id": 15891,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15890,
                      "name": "TestStructBare",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15772,
                      "src": "1034:14:104"
                    },
                    "referencedDeclaration": 15772,
                    "src": "1034:14:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TestStructBare_$15772_storage_ptr",
                      "typeString": "struct TestStructBare"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1033:23:104"
            },
            "scope": 15927,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15773,
              "name": "BareComponent",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4708,
              "src": "338:13:104"
            },
            "id": 15774,
            "nodeType": "InheritanceSpecifier",
            "src": "338:13:104"
          }
        ],
        "canonicalName": "TestBareComponent",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          15927,
          4708,
          16660,
          16886,
          7600,
          17429,
          17844,
          17305,
          7140,
          17294,
          7643,
          17439
        ],
        "name": "TestBareComponent",
        "nameLocation": "317:17:104",
        "scope": 15928,
        "usedErrors": [
          4508,
          16585,
          17841,
          17843
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 104
}
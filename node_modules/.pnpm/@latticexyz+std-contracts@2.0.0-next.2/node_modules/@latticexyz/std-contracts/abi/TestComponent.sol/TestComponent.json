{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "world",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BareComponent__NotImplemented",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnableWritable__NotWriter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotTransitiveOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "authorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntities",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "a",
              "type": "uint256"
            },
            {
              "internalType": "int32",
              "name": "b",
              "type": "int32"
            },
            {
              "internalType": "address",
              "name": "c",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "d",
              "type": "string"
            }
          ],
          "internalType": "struct TestStruct",
          "name": "test",
          "type": "tuple"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getRawValue",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSchema",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "keys",
          "type": "string[]"
        },
        {
          "internalType": "enum LibTypes.SchemaValue[]",
          "name": "values",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getValue",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "a",
              "type": "uint256"
            },
            {
              "internalType": "int32",
              "name": "b",
              "type": "int32"
            },
            {
              "internalType": "address",
              "name": "c",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "d",
              "type": "string"
            }
          ],
          "internalType": "struct TestStruct",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "indexer",
          "type": "address"
        }
      ],
      "name": "registerIndexer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_world",
          "type": "address"
        }
      ],
      "name": "registerWorld",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "a",
              "type": "uint256"
            },
            {
              "internalType": "int32",
              "name": "b",
              "type": "int32"
            },
            {
              "internalType": "address",
              "name": "c",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "d",
              "type": "string"
            }
          ],
          "internalType": "struct TestStruct",
          "name": "value",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "unauthorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "world",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "writeAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200345d3803806200345d8339810160408190526200003491620002b9565b807f3e8d66466117807be104d072ef802820dff472f0909aaa1ee20fd390b8c87bd38181620000633362000127565b60028190556001600160a01b03821615620000835762000083826200019b565b505060405162000093906200029d565b604051809103906000f080158015620000b0573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055604051620000df90620002ab565b604051809103906000f080158015620000fc573d6000803e3d6000fd5b50600480546001600160a01b0319166001600160a01b039290921691909117905550620002eb915050565b60006200013e6200025360201b62000ee21760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b620001a562000277565b6001600160a01b0316336001600160a01b031614620001d757604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200023757600080fd5b505af11580156200024c573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b60006200028e6200025360201b62000ee21760201c565b546001600160a01b0316919050565b61084a806200238183390190565b6108928062002bcb83390190565b600060208284031215620002cc57600080fd5b81516001600160a01b0381168114620002e457600080fd5b9392505050565b61208680620002fb6000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80638da5cb5b116100cd578063b8bc073d11610081578063c241204e11610066578063c241204e146102eb578063cccf7a8e146102fe578063f2fde38b1461031157600080fd5b8063b8bc073d146102b8578063bf4fe57e146102d857600080fd5b80639d2c76b4116100b25780639d2c76b41461027b578063af640d0f1461028e578063b361be46146102a557600080fd5b80638da5cb5b146102605780639ad6ae981461026857600080fd5b80634fef6a381161012457806375c0669c1161010957806375c0669c14610217578063861eb9051461022a5780638b2829471461024d57600080fd5b80634fef6a38146101ee5780636b122fe01461020157600080fd5b80630ff4c9161461015657806330b67baa1461017f57806331b933b9146101c45780634cc82215146101d9575b600080fd5b610169610164366004611700565b610324565b6040516101769190611793565b60405180910390f35b60005461019f9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610176565b6101cc6103b4565b60405161017691906117ed565b6101ec6101e7366004611700565b61046f565b005b6101ec6101fc366004611853565b6104ba565b610209610598565b6040516101769291906118a6565b6101ec610225366004611853565b610851565b61023d610238366004611853565b610907565b6040519015158152602001610176565b6101ec61025b366004611ab0565b610992565b61019f6109df565b6101ec610276366004611b0f565b610a1f565b6101ec610289366004611853565b610a48565b61029760025481565b604051908152602001610176565b6101cc6102b3366004611b4c565b610b71565b6102cb6102c6366004611700565b610c2e565b6040516101769190611b81565b6101ec6102e6366004611853565b610cd0565b6101cc6102f9366004611b94565b610dab565b61023d61030c366004611700565b610dd5565b6101ec61031f366004611853565b610e69565b604080516080810182526000808252602082018190529181018290526060808201529080808061035386610c2e565b8060200190518101906103669190611bd8565b6040805160808101825263ffffffff95909516855260039390930b602085015273ffffffffffffffffffffffffffffffffffffffff9091169183019190915260608201529695505050505050565b600354604080517f410d59cc000000000000000000000000000000000000000000000000000000008152905160609273ffffffffffffffffffffffffffffffffffffffff169163410d59cc9160048083019260009291908290030181865afa158015610424573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261046a9190810190611c93565b905090565b61047833610907565b6104ae576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104b781610f06565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461052a576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600480825260a08201909252606091829190816020015b60608152602001906001900390816105b357505060408051600480825260a08201909252919350602082016080803683370190505090506040518060400160405280600181526020017f61000000000000000000000000000000000000000000000000000000000000008152508260008151811061063357610633611d39565b6020026020010181905250600d8160008151811061065357610653611d39565b6020026020010190602181111561066c5761066c611877565b9081602181111561067f5761067f611877565b815250506040518060400160405280600181526020017f6200000000000000000000000000000000000000000000000000000000000000815250826001815181106106cc576106cc611d39565b60200260200101819052506003816001815181106106ec576106ec611d39565b6020026020010190602181111561070557610705611877565b9081602181111561071857610718611877565b815250506040518060400160405280600181526020017f63000000000000000000000000000000000000000000000000000000000000008152508260028151811061076557610765611d39565b602002602001018190525060108160028151811061078557610785611d39565b6020026020010190602181111561079e5761079e611877565b908160218111156107b1576107b1611877565b815250506040518060400160405280600181526020017f6400000000000000000000000000000000000000000000000000000000000000815250826003815181106107fe576107fe611d39565b6020026020010181905250600f8160038151811061081e5761081e611d39565b6020026020010190602181111561083757610837611877565b9081602181111561084a5761084a611877565b9052509091565b61085a33610907565b610890576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061098c575061095d6109df565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b61099b33610907565b6109d1576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109db82826111c5565b5050565b600061046a7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b6109db8282604051602001610a349190611db1565b604051602081830303815290604052610992565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ab8576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610b5657600080fd5b505af1158015610b6a573d6000803e3d6000fd5b5050505050565b60048054825160208401206040517f796c5e940000000000000000000000000000000000000000000000000000000081529283015260609173ffffffffffffffffffffffffffffffffffffffff9091169063796c5e9490602401600060405180830381865afa158015610be8573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261098c9190810190611c93565b6000818152600160205260409020805460609190610c4b90611e7e565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7790611e7e565b8015610cc45780601f10610c9957610100808354040283529160200191610cc4565b820191906000526020600020905b815481529060010190602001808311610ca757829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d40576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b606061098c82604051602001610dc19190611db1565b604051602081830303815290604052610b71565b6003546040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063cccf7a8e90602401602060405180830381865afa158015610e45573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098c9190611ecb565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ed9576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104b78161145c565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff909216916385edea1391610f4391611eed565b60405190819003812060e083901b7fffffffff000000000000000000000000000000000000000000000000000000001682526004820152602401602060405180830381865afa158015610f9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbe9190611fbf565b600003610fc85750565b60045460008281526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff90921691636526db7a9161100591611eed565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101849052604401600060405180830381600087803b15801561106057600080fd5b505af1158015611074573d6000803e3d6000fd5b50506003546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169250634cc822159150602401600060405180830381600087803b1580156110e457600080fd5b505af11580156110f8573d6000803e3d6000fd5b5050505061110581611465565b60005b6005548110156109db576005818154811061112557611125611d39565b6000918252602090912001546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690634cc8221590602401600060405180830381600087803b15801561119a57600080fd5b505af11580156111ae573d6000803e3d6000fd5b5050505080806111bd90611fd8565b915050611108565b6003546040517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690631003e2d290602401600060405180830381600087803b15801561123157600080fd5b505af1158015611245573d6000803e3d6000fd5b505060045460008581526001602052604090819020905173ffffffffffffffffffffffffffffffffffffffff9092169350636526db7a925061128691611eed565b60405190819003812060e083901b7fffffffff00000000000000000000000000000000000000000000000000000000168252600482015260248101859052604401600060405180830381600087803b1580156112e157600080fd5b505af11580156112f5573d6000803e3d6000fd5b505060048054845160208601206040517f771602f7000000000000000000000000000000000000000000000000000000008152928301526024820186905273ffffffffffffffffffffffffffffffffffffffff16925063771602f79150604401600060405180830381600087803b15801561136f57600080fd5b505af1158015611383573d6000803e3d6000fd5b5050505061139182826114d3565b60005b60055481101561145757600581815481106113b1576113b1611d39565b6000918252602090912001546040517f0216b83800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630216b838906114129086908690600401612037565b600060405180830381600087803b15801561142c57600080fd5b505af1158015611440573d6000803e3d6000fd5b50505050808061144f90611fd8565b915050611394565b505050565b6104b781611581565b600081815260016020526040812061147c9161162d565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610b3c565b600082815260016020908152604090912082516114f292840190611667565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f9061154b9085908590600401612037565b600060405180830381600087803b15801561156557600080fd5b505af1158015611579573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461163990611e7e565b6000825580601f10611649575050565b601f0160209004906000526020600020908101906104b791906116eb565b82805461167390611e7e565b90600052602060002090601f01602090048101928261169557600085556116db565b82601f106116ae57805160ff19168380011785556116db565b828001600101855582156116db579182015b828111156116db5782518255916020019190600101906116c0565b506116e79291506116eb565b5090565b5b808211156116e757600081556001016116ec565b60006020828403121561171257600080fd5b5035919050565b60005b8381101561173457818101518382015260200161171c565b83811115611743576000848401525b50505050565b60008151808452611761816020860160208601611719565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815281516020820152602082015160030b604082015273ffffffffffffffffffffffffffffffffffffffff6040830151166060820152600060608301516080808401526117e560a0840182611749565b949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561182557835183529284019291840191600101611809565b50909695505050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146104b757600080fd5b60006020828403121561186557600080fd5b813561187081611831565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561191b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552611909868351611749565b955093820193908201906001016118cf565b50508584038187015286518085528782019482019350915060005b8281101561198957845160228110611977577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611936565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611a0c57611a0c611996565b604052919050565b600067ffffffffffffffff821115611a2e57611a2e611996565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112611a6b57600080fd5b8135611a7e611a7982611a14565b6119c5565b818152846020838601011115611a9357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611ac357600080fd5b82359150602083013567ffffffffffffffff811115611ae157600080fd5b611aed85828601611a5a565b9150509250929050565b600060808284031215611b0957600080fd5b50919050565b60008060408385031215611b2257600080fd5b82359150602083013567ffffffffffffffff811115611b4057600080fd5b611aed85828601611af7565b600060208284031215611b5e57600080fd5b813567ffffffffffffffff811115611b7557600080fd5b6117e584828501611a5a565b6020815260006118706020830184611749565b600060208284031215611ba657600080fd5b813567ffffffffffffffff811115611bbd57600080fd5b6117e584828501611af7565b8060030b81146104b757600080fd5b60008060008060808587031215611bee57600080fd5b845163ffffffff81168114611c0257600080fd5b6020860151909450611c1381611bc9565b6040860151909350611c2481611831565b606086015190925067ffffffffffffffff811115611c4157600080fd5b8501601f81018713611c5257600080fd5b8051611c60611a7982611a14565b818152886020838501011115611c7557600080fd5b611c86826020830160208601611719565b9598949750929550505050565b60006020808385031215611ca657600080fd5b825167ffffffffffffffff80821115611cbe57600080fd5b818501915085601f830112611cd257600080fd5b815181811115611ce457611ce4611996565b8060051b9150611cf58483016119c5565b8181529183018401918481019088841115611d0f57600080fd5b938501935b83851015611d2d57845182529385019390850190611d14565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b602081528135602082015260006020830135611dcc81611bc9565b8060030b6040840152506040830135611de481611831565b73ffffffffffffffffffffffffffffffffffffffff811660608401525060608301357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611e3657600080fd5b8301803567ffffffffffffffff811115611e4f57600080fd5b803603851315611e5e57600080fd5b608080850152611e7560a085018260208501611d68565b95945050505050565b600181811c90821680611e9257607f821691505b602082108103611b09577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060208284031215611edd57600080fd5b8151801515811461187057600080fd5b600080835481600182811c915080831680611f0957607f831692505b60208084108203611f41577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015611f555760018114611f8457611fb1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00861689528489019650611fb1565b60008a81526020902060005b86811015611fa95781548b820152908501908301611f90565b505084890196505b509498975050505050505050565b600060208284031215611fd157600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612030577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b8281526040602082015260006117e5604083018461174956fea264697066735822122064af1172ac82b320a6270bd92ec3aa811d08d8ed4598af308eeb4779ffd257b764736f6c634300080d0033608060405234801561001057600080fd5b5061001a3361001f565b6100b4565b600061003361009060201b6105431760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b610787806100c36000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638e7cb6e11161005b5780638e7cb6e114610100578063949d225d1461012a578063cccf7a8e1461013b578063f2fde38b1461015e57600080fd5b80631003e2d21461008d578063410d59cc146100a25780634cc82215146100c05780638da5cb5b146100d3575b600080fd5b6100a061009b36600461061b565b610171565b005b6100aa610233565b6040516100b79190610634565b60405180910390f35b6100a06100ce36600461061b565b61028b565b6100db6103ef565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b7565b61011361010e36600461061b565b610434565b6040805192151583526020830191909152016100b7565b6000546040519081526020016100b7565b61014e61014936600461061b565b610467565b60405190151581526020016100b7565b6100a061016c366004610678565b6104ca565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146101e1576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101ea81610467565b61023057600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018190555b50565b6060600080548060200260200160405190810160405280929190818152602001828054801561028157602002820191906000526020600020905b81548152602001906001019080831161026d575b5050505050905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146102fb576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61030481610467565b156102305760008054610319906001906106b5565b81548110610329576103296106f3565b9060005260206000200154600060016000848152602001908152602001600020548154811061035a5761035a6106f3565b60009182526020808320909101929092558281526001918290526040812054815490929190819084908110610391576103916106f3565b9060005260206000200154815260200190815260200160002081905550600160008281526020019081526020016000206000905560008054806103d6576103d6610722565b6001900381819060005260206000200160009055905550565b600061042f7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60008061044083610467565b61044f57506000928392509050565b50506000908152600160208190526040909120549091565b60008054810361047957506000919050565b60008281526001602052604081205490036104b55781600080815481106104a2576104a26106f3565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461053a576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61023081610567565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610230928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006020828403121561062d57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561066c57835183529284019291840191600101610650565b50909695505050505050565b60006020828403121561068a57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106ae57600080fd5b9392505050565b6000828210156106ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220c147fe9d375839842a60b6e353fbf54ccdf2be51cec6c48f280257f98aa8724264736f6c634300080d0033608060405234801561001057600080fd5b5061001a3361001f565b6100b4565b600061003361009060201b6105691760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6107cf806100c36000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806385edea131161005b57806385edea13146100d35780638da5cb5b14610101578063a0265ff81461012e578063f2fde38b1461015157600080fd5b80636526db7a14610082578063771602f714610097578063796c5e94146100aa575b600080fd5b610095610090366004610641565b610164565b005b6100956100a5366004610641565b610301565b6100bd6100b8366004610663565b6103b5565b6040516100ca919061067c565b60405180910390f35b6100f36100e1366004610663565b60009081526020819052604090205490565b6040519081526020016100ca565b610109610415565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ca565b61014161013c366004610641565b61045a565b60405190151581526020016100ca565b61009561015f3660046106c0565b6104ed565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146101d4576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101de828261045a565b156102fd57600082815260208190526040902080546101ff906001906106fd565b8154811061020f5761020f61073b565b600091825260208083209091015484835282825260408084206001845281852086865290935290922054815481106102495761024961073b565b6000918252602080832090910192909255838152600182526040808220848352808452818320548684528385529183208584529381905283549193909291849081106102975761029761073b565b600091825260208083209091015483528281019390935260409182018120939093558483526001825280832084845282528083208390558483529082905290208054806102e6576102e661076a565b600190038181906000526020600020016000905590555b5050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610371576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61037b828261045a565b6102fd5760009182526020828152604080842080546001808552838720868852855292862081905585845291820181558452922090910155565b6000818152602081815260409182902080548351818402810184019094528084526060939283018282801561040957602002820191906000526020600020905b8154815260200190600101908083116103f5575b50505050509050919050565b60006104557f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6000828152602081905260408120548103610477575060006104e7565b600083815260016020908152604080832085845290915281205490036104c957600083815260208190526040812080548492906104b6576104b661073b565b90600052602060002001541490506104e7565b50600082815260016020908152604080832084845290915290205415155b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461055d576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105668161058d565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610566928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000806040838503121561065457600080fd5b50508035926020909101359150565b60006020828403121561067557600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156106b457835183529284019291840191600101610698565b50909695505050505050565b6000602082840312156106d257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106f657600080fd5b9392505050565b600082821015610736577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212205075ee04a55006f7c2f4ac9e1dcd4d1823c68da532c74ffb7267527bfc04459a64736f6c634300080d0033",
    "sourceMap": "292:1066:105:-:0;;;332:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;369:5;186:30;369:5;186:30;399:21:39;409:10;399:9;:21::i;:::-;1121:2:34;:8;;;-1:-1:-1;;;;;1139:20:34;;;1135:47;;1161:21;1175:6;1161:13;:21::i;:::-;1074:113;;1107:9:35::1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1096:8:35::1;:20:::0;;-1:-1:-1;;;;;;1096:20:35::1;-1:-1:-1::0;;;;;1096:20:35;;;::::1;::::0;;;::::1;::::0;;1140:12:::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1122:15:35::1;:30:::0;;-1:-1:-1;;;;;;1122:30:35::1;-1:-1:-1::0;;;;;1122:30:35;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;292:1066:105;;-1:-1:-1;;292:1066:105;1203:207:64;1266:31;1300:23;:21;;;;;:23;;:::i;:::-;1359:7;;1338:38;;1266:57;;-1:-1:-1;;;;;;1338:38:64;;;;1359:7;;;1338:38;;1359:7;;1338:38;1386:17;;-1:-1:-1;;;;;;1386:17:64;-1:-1:-1;;;;;1386:17:64;;;;;;;;;;1203:207::o;1302:137:34:-;436:8:64;:6;:8::i;:::-;-1:-1:-1;;;;;422:22:64;:10;-1:-1:-1;;;;;422:22:64;;418:54;;453:19;;-1:-1:-1;;;453:19:64;;;;;;;;;;;418:54;1364:5:34::1;:14:::0;;-1:-1:-1;;;;;;1364:14:34::1;-1:-1:-1::0;;;;;1364:14:34;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;-1:-1:-1;;;1384:50:34;;1424:4:::1;1384:50;::::0;::::1;483:51:108::0;550:18;;;543:34;;;;1384:31:34::1;::::0;456:18:108;;1384:50:34::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;242:159:65:-;186:49;;242:159::o;647:111:64:-;696:7;722:23;:21;;;;;:23;;:::i;:::-;:29;-1:-1:-1;;;;;722:29:64;;647:111;-1:-1:-1;647:111:64:o;292:1066:105:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:290:108:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:108;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:108:o;309:274::-;292:1066:105;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "292:1066:105:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:254;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;870:20:34;;;;;;;;;;;;1556:42:108;1544:55;;;1526:74;;1514:2;1499:18;870:20:34;1380:226:108;1400:116:35;;;:::i;:::-;;;;;;;:::i;2088:85:34:-;;;;;;:::i;:::-;;:::i;:::-;;955:144:40;;;;;;:::i;:::-;;:::i;386:449:105:-;;;:::i;:::-;;;;;;;;:::i;2104:128:35:-;;;;;;:::i;:::-;;:::i;440:168:40:-;;;;;;:::i;:::-;;:::i;:::-;;;4679:14:108;;4672:22;4654:41;;4642:2;4627:18;440:168:40;4514:187:108;1736:106:34;;;;;;:::i;:::-;;:::i;378:87:63:-;;;:::i;839:104:105:-;;;;;;:::i;:::-;;:::i;1302:137:34:-;;;;;;:::i;:::-;;:::i;1052:17::-;;;;;;;;;7090:25:108;;;7078:2;7063:18;1052:17:34;6944:177:108;1698:228:35;;;;;;:::i;:::-;;:::i;2623:171:34:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1253:146:40:-;;;;;;:::i;:::-;;:::i;1205:151:105:-;;;;;;:::i;:::-;;:::i;1204:111:35:-;;;;;;:::i;:::-;;:::i;514:113:63:-;;;;;;:::i;:::-;;:::i;947:254:105:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1096:19:105;1108:6;1096:11;:19::i;:::-;1078:83;;;;;;;;;;;;:::i;:::-;1174:22;;;;;;;;1027:134;;;;;1174:22;;;;;;;;;;;;;;;;;;;;;;;;;;;947:254;-1:-1:-1;;;;;;947:254:105:o;1400:116:35:-;1492:8;;:19;;;;;;;;1461:16;;1492:8;;;:17;;:19;;;;;:8;;:19;;;;;;;:8;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1485:26;;1400:116;:::o;2088:85:34:-;716:23:40;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;2153:15:34::1;2161:6;2153:7;:15::i;:::-;2088:85:::0;:::o;955:144:40:-;186:49:65;722:29:64;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1036:51:40::1;;:43;:51:::0;;;238:53:41;1036:51:40::1;::::0;;;;:58;;;::::1;1090:4;1036:58;::::0;;955:144::o;386:449:105:-;510:15;;;523:1;510:15;;;;;;;;;437:20;;;;510:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;540:29:105;;;567:1;540:29;;;;;;;;;503:22;;-1:-1:-1;540:29:105;;;;;;;;;;-1:-1:-1;540:29:105;531:38;;576:13;;;;;;;;;;;;;;;;;:4;581:1;576:7;;;;;;;;:::i;:::-;;;;;;:13;;;;607:28;595:6;602:1;595:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;642:13;;;;;;;;;;;;;;;;;:4;647:1;642:7;;;;;;;;:::i;:::-;;;;;;:13;;;;673:26;661:6;668:1;661:9;;;;;;;;:::i;:::-;;;;;;:38;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;706:13;;;;;;;;;;;;;;;;;:4;711:1;706:7;;;;;;;;:::i;:::-;;;;;;:13;;;;737:28;725:6;732:1;725:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;772:13;;;;;;;;;;;;;;;;;:4;777:1;772:7;;;;;;;;:::i;:::-;;;;;;:13;;;;803:27;791:6;798:1;791:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;386:449:105;;:::o;2104:128:35:-;716:23:40;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;2189:8:35::1;:38:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;2189:38:35;;;;;::::1;::::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;2104:128::o;440:168:40:-;527:53;;;508:4;527:53;;;238::41;527::40;;;;;;;;;:76;;;596:7;:5;:7::i;:::-;584:19;;:8;:19;;;527:76;520:83;440:168;-1:-1:-1;;440:168:40:o;1736:106:34:-;716:23:40;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;1818:19:34::1;1823:6;1831:5;1818:4;:19::i;:::-;1736:106:::0;;:::o;378:87:63:-;424:7;450:8;186:49:65;722:29:64;;;;647:111;839:104:105;908:30;912:6;931:5;920:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;908:3;:30::i;1302:137:34:-;186:49:65;722:29:64;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1364:5:34::1;:14:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;;;;1424:4:::1;1384:50;::::0;::::1;12050:74:108::0;12140:18;;;12133:34;;;;1384:31:34::1;::::0;12023:18:108;;1384:50:34::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;1698:228:35:-;1870:15;;;1903:16;;;;;;1870:51;;;;;;;;7090:25:108;1786:16:35;;1870:15;;;;;:24;;7063:18:108;;1870:51:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2623:171:34:-;2768:21;;;;:13;:21;;;;;2761:28;;2698:12;;2768:21;2761:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2623:171;;;:::o;1253:146:40:-;186:49:65;722:29:64;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1343:51:40::1;;:43;:51:::0;;;238:53:41;1343:51:40::1;::::0;;;;1336:58;;;::::1;::::0;;1253:146::o;1205:151:105:-;1282:16;1313:38;1345:4;1334:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;1313:20;:38::i;1204:111:35:-;1290:8;;:20;;;;;;;;7090:25:108;;;1271:4:35;;1290:8;;;:12;;7063:18:108;;1290:20:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;514:113:63:-;186:49:65;722:29:64;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;593:27:63::1;612:7;593:18;:27::i;242:159:65:-:0;186:49;;242:159::o;2905:591:35:-;3027:15;;;3066:21;;;3027:15;3066:21;;;;;;;3056:32;;3027:15;;;;;:20;;3056:32;;;:::i;:::-;;;;;;;;;3027:63;;;;;;;;;;;7090:25:108;7063:18;;3027:63:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3094:1;3027:68;3023:81;;2905:591;:::o;3023:81::-;3160:15;;;3201:21;;;3160:15;3201:21;;;;;;;3191:32;;3160:15;;;;;:22;;3191:32;;;:::i;:::-;;;;;;;;;3160:73;;;;;;;;;;;14606:25:108;14647:18;;;14640:34;;;14579:18;;3160:73:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3286:8:35;;:23;;;;;;;;7090:25:108;;;3286:8:35;;;;;-1:-1:-1;3286:15:35;;-1:-1:-1;7063:18:108;;3286:23:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3377:21;3391:6;3377:13;:21::i;:::-;3410:9;3405:87;3429:8;:15;3425:19;;3405:87;;;3459:8;3468:1;3459:11;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;;;;;;7090:25:108;;;3459:11:35;;;;;:18;;7063::108;;3459:26:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3446:3;;;;;:::i;:::-;;;;3405:87;;2279:579;2385:8;;:20;;;;;;;;7090:25:108;;;2385:8:35;;;;;:12;;7063:18:108;;2385:20:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2487:15:35;;;2528:21;;;2487:15;2528:21;;;;;;;2518:32;;2487:15;;;;;-1:-1:-1;2487:22:35;;-1:-1:-1;2518:32:35;;;:::i;:::-;;;;;;;;;2487:73;;;;;;;;;;;14606:25:108;14647:18;;;14640:34;;;14579:18;;2487:73:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2616:15:35;;;2644:16;;;;;;2616:54;;;;;;;;14606:25:108;14647:18;;;14640:34;;;2616:15:35;;;-1:-1:-1;2616:19:35;;-1:-1:-1;14579:18:108;;2616:54:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2728:25;2739:6;2747:5;2728:10;:25::i;:::-;2765:9;2760:94;2784:8;:15;2780:19;;2760:94;;;2814:8;2823:1;2814:11;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;;;:11;;;;;:18;;:33;;2833:6;;2841:5;;2814:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2801:3;;;;;:::i;:::-;;;;2760:94;;;;2279:579;;:::o;1100:97:64:-;1172:18;1182:7;1172:9;:18::i;4201:214:34:-;4306:21;;;;:13;:21;;;;;4299:28;;;:::i;:::-;4366:5;;4359:51;;;;;;;;7090:25:108;;;4366:5:34;;;;;4359:43;;7063:18:108;;4359:51:34;6944:177:108;3672:226:34;3778:21;;;;:13;:21;;;;;;;;:29;;;;;;;;:::i;:::-;-1:-1:-1;3846:5:34;;3839:54;;;;;3846:5;;;;;3839:39;;:54;;3879:6;;3887:5;;3839:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3672:226;;:::o;1203:207:64:-;186:49:65;1359:7:64;;1338:38;;;;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;;;;;;;;;;;;;;1203:207::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:108;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:108;;14:180;-1:-1:-1;14:180:108:o;199:258::-;271:1;281:113;295:6;292:1;289:13;281:113;;;371:11;;;365:18;352:11;;;345:39;317:2;310:10;281:113;;;412:6;409:1;406:13;403:48;;;447:1;438:6;433:3;429:16;422:27;403:48;;199:258;;;:::o;462:317::-;504:3;542:5;536:12;569:6;564:3;557:19;585:63;641:6;634:4;629:3;625:14;618:4;611:5;607:16;585:63;:::i;:::-;693:2;681:15;698:66;677:88;668:98;;;;768:4;664:109;;462:317;-1:-1:-1;;462:317:108:o;784:591::-;971:2;960:9;953:21;1016:6;1010:13;1005:2;994:9;990:18;983:41;1092:2;1084:6;1080:15;1074:22;1071:1;1060:37;1055:2;1044:9;1040:18;1033:65;1162:42;1156:2;1148:6;1144:15;1138:22;1134:71;1129:2;1118:9;1114:18;1107:99;934:4;1253:2;1245:6;1241:15;1235:22;1295:4;1288;1277:9;1273:20;1266:34;1317:52;1364:3;1353:9;1349:19;1335:12;1317:52;:::i;:::-;1309:60;784:591;-1:-1:-1;;;;784:591:108:o;1611:632::-;1782:2;1834:21;;;1904:13;;1807:18;;;1926:22;;;1753:4;;1782:2;2005:15;;;;1979:2;1964:18;;;1753:4;2048:169;2062:6;2059:1;2056:13;2048:169;;;2123:13;;2111:26;;2192:15;;;;2157:12;;;;2084:1;2077:9;2048:169;;;-1:-1:-1;2234:3:108;;1611:632;-1:-1:-1;;;;;;1611:632:108:o;2248:154::-;2334:42;2327:5;2323:54;2316:5;2313:65;2303:93;;2392:1;2389;2382:12;2407:247;2466:6;2519:2;2507:9;2498:7;2494:23;2490:32;2487:52;;;2535:1;2532;2525:12;2487:52;2574:9;2561:23;2593:31;2618:5;2593:31;:::i;:::-;2643:5;2407:247;-1:-1:-1;;;2407:247:108:o;2659:184::-;2711:77;2708:1;2701:88;2808:4;2805:1;2798:15;2832:4;2829:1;2822:15;2848:1661;3102:4;3150:2;3139:9;3135:18;3180:2;3169:9;3162:21;3203:6;3238;3232:13;3269:6;3261;3254:22;3307:2;3296:9;3292:18;3285:25;;3369:2;3359:6;3356:1;3352:14;3341:9;3337:30;3333:39;3319:53;;3391:4;3430:2;3422:6;3418:15;3451:1;3461:314;3475:6;3472:1;3469:13;3461:314;;;3564:66;3552:9;3544:6;3540:22;3536:95;3531:3;3524:108;3655:40;3688:6;3679;3673:13;3655:40;:::i;:::-;3645:50;-1:-1:-1;3753:12:108;;;;3718:15;;;;3497:1;3490:9;3461:314;;;-1:-1:-1;;3811:22:108;;;3791:18;;;3784:50;3887:13;;3909:24;;;3991:15;;;;3951;;;-1:-1:-1;3887:13:108;-1:-1:-1;4026:1:108;4036:445;4052:8;4047:3;4044:17;4036:445;;;4123:8;4117:15;4162:2;4158;4155:10;4145:218;;4207:77;4204:1;4197:88;4312:4;4309:1;4302:15;4344:4;4341:1;4334:15;4145:218;4376:17;;4454;;;;4415:14;;;;4080:1;4071:11;4036:445;;;-1:-1:-1;4498:5:108;;2848:1661;-1:-1:-1;;;;;;;2848:1661:108:o;4706:184::-;4758:77;4755:1;4748:88;4855:4;4852:1;4845:15;4879:4;4876:1;4869:15;4895:334;4966:2;4960:9;5022:2;5012:13;;5027:66;5008:86;4996:99;;5125:18;5110:34;;5146:22;;;5107:62;5104:88;;;5172:18;;:::i;:::-;5208:2;5201:22;4895:334;;-1:-1:-1;4895:334:108:o;5234:245::-;5282:4;5315:18;5307:6;5304:30;5301:56;;;5337:18;;:::i;:::-;-1:-1:-1;5394:2:108;5382:15;5399:66;5378:88;5468:4;5374:99;;5234:245::o;5484:462::-;5526:5;5579:3;5572:4;5564:6;5560:17;5556:27;5546:55;;5597:1;5594;5587:12;5546:55;5633:6;5620:20;5664:48;5680:31;5708:2;5680:31;:::i;:::-;5664:48;:::i;:::-;5737:2;5728:7;5721:19;5783:3;5776:4;5771:2;5763:6;5759:15;5755:26;5752:35;5749:55;;;5800:1;5797;5790:12;5749:55;5865:2;5858:4;5850:6;5846:17;5839:4;5830:7;5826:18;5813:55;5913:1;5888:16;;;5906:4;5884:27;5877:38;;;;5892:7;5484:462;-1:-1:-1;;;5484:462:108:o;5951:388::-;6028:6;6036;6089:2;6077:9;6068:7;6064:23;6060:32;6057:52;;;6105:1;6102;6095:12;6057:52;6141:9;6128:23;6118:33;;6202:2;6191:9;6187:18;6174:32;6229:18;6221:6;6218:30;6215:50;;;6261:1;6258;6251:12;6215:50;6284:49;6325:7;6316:6;6305:9;6301:22;6284:49;:::i;:::-;6274:59;;;5951:388;;;;;:::o;6344:159::-;6407:5;6452:3;6443:6;6438:3;6434:16;6430:26;6427:46;;;6469:1;6466;6459:12;6427:46;-1:-1:-1;6491:6:108;6344:159;-1:-1:-1;6344:159:108:o;6508:431::-;6607:6;6615;6668:2;6656:9;6647:7;6643:23;6639:32;6636:52;;;6684:1;6681;6674:12;6636:52;6720:9;6707:23;6697:33;;6781:2;6770:9;6766:18;6753:32;6808:18;6800:6;6797:30;6794:50;;;6840:1;6837;6830:12;6794:50;6863:70;6925:7;6916:6;6905:9;6901:22;6863:70;:::i;7126:320::-;7194:6;7247:2;7235:9;7226:7;7222:23;7218:32;7215:52;;;7263:1;7260;7253:12;7215:52;7303:9;7290:23;7336:18;7328:6;7325:30;7322:50;;;7368:1;7365;7358:12;7322:50;7391:49;7432:7;7423:6;7412:9;7408:22;7391:49;:::i;7451:218::-;7598:2;7587:9;7580:21;7561:4;7618:45;7659:2;7648:9;7644:18;7636:6;7618:45;:::i;7674:363::-;7764:6;7817:2;7805:9;7796:7;7792:23;7788:32;7785:52;;;7833:1;7830;7823:12;7785:52;7873:9;7860:23;7906:18;7898:6;7895:30;7892:50;;;7938:1;7935;7928:12;7892:50;7961:70;8023:7;8014:6;8003:9;7999:22;7961:70;:::i;8042:118::-;8129:5;8126:1;8115:20;8108:5;8105:31;8095:59;;8150:1;8147;8140:12;8165:1065;8277:6;8285;8293;8301;8354:3;8342:9;8333:7;8329:23;8325:33;8322:53;;;8371:1;8368;8361:12;8322:53;8403:9;8397:16;8453:10;8446:5;8442:22;8435:5;8432:33;8422:61;;8479:1;8476;8469:12;8422:61;8552:2;8537:18;;8531:25;8502:5;;-1:-1:-1;8565:31:108;8531:25;8565:31;:::i;:::-;8667:2;8652:18;;8646:25;8615:7;;-1:-1:-1;8680:33:108;8646:25;8680:33;:::i;:::-;8783:2;8768:18;;8762:25;8732:7;;-1:-1:-1;8810:18:108;8799:30;;8796:50;;;8842:1;8839;8832:12;8796:50;8865:22;;8918:4;8910:13;;8906:27;-1:-1:-1;8896:55:108;;8947:1;8944;8937:12;8896:55;8976:2;8970:9;9001:48;9017:31;9045:2;9017:31;:::i;9001:48::-;9072:2;9065:5;9058:17;9112:7;9107:2;9102;9098;9094:11;9090:20;9087:33;9084:53;;;9133:1;9130;9123:12;9084:53;9146:54;9197:2;9192;9185:5;9181:14;9176:2;9172;9168:11;9146:54;:::i;:::-;8165:1065;;;;-1:-1:-1;8165:1065:108;;-1:-1:-1;;;;8165:1065:108:o;9235:936::-;9330:6;9361:2;9404;9392:9;9383:7;9379:23;9375:32;9372:52;;;9420:1;9417;9410:12;9372:52;9453:9;9447:16;9482:18;9523:2;9515:6;9512:14;9509:34;;;9539:1;9536;9529:12;9509:34;9577:6;9566:9;9562:22;9552:32;;9622:7;9615:4;9611:2;9607:13;9603:27;9593:55;;9644:1;9641;9634:12;9593:55;9673:2;9667:9;9695:2;9691;9688:10;9685:36;;;9701:18;;:::i;:::-;9747:2;9744:1;9740:10;9730:20;;9770:28;9794:2;9790;9786:11;9770:28;:::i;:::-;9832:15;;;9902:11;;;9898:20;;;9863:12;;;;9930:19;;;9927:39;;;9962:1;9959;9952:12;9927:39;9986:11;;;;10006:135;10022:6;10017:3;10014:15;10006:135;;;10088:10;;10076:23;;10039:12;;;;10119;;;;10006:135;;;10160:5;9235:936;-1:-1:-1;;;;;;;;9235:936:108:o;10176:184::-;10228:77;10225:1;10218:88;10325:4;10322:1;10315:15;10349:4;10346:1;10339:15;10365:326;10454:6;10449:3;10442:19;10506:6;10499:5;10492:4;10487:3;10483:14;10470:43;;10558:1;10551:4;10542:6;10537:3;10533:16;10529:27;10522:38;10424:3;10680:4;10610:66;10605:2;10597:6;10593:15;10589:88;10584:3;10580:98;10576:109;10569:116;;10365:326;;;;:::o;10696:1175::-;10885:2;10874:9;10867:21;10937:6;10924:20;10919:2;10908:9;10904:18;10897:48;10848:4;10992:2;10984:6;10980:15;10967:29;11005;11028:5;11005:29;:::i;:::-;11084:5;11081:1;11070:20;11065:2;11054:9;11050:18;11043:48;;11140:2;11132:6;11128:15;11115:29;11153:33;11178:7;11153:33;:::i;:::-;11235:42;11226:7;11222:56;11217:2;11206:9;11202:18;11195:84;;11339:2;11331:6;11327:15;11314:29;11419:66;11410:6;11394:14;11390:27;11386:100;11366:18;11362:125;11352:153;;11501:1;11498;11491:12;11352:153;11529:31;;11583:21;;11627:18;11616:30;;11613:50;;;11659:1;11656;11649:12;11613:50;11707:6;11691:14;11687:27;11679:6;11675:40;11672:60;;;11728:1;11725;11718:12;11672:60;11770:4;11763;11752:9;11748:20;11741:34;11792:73;11860:3;11849:9;11845:19;11837:6;11832:2;11823:7;11819:16;11792:73;:::i;:::-;11784:81;10696:1175;-1:-1:-1;;;;;10696:1175:108:o;12178:437::-;12257:1;12253:12;;;;12300;;;12321:61;;12375:4;12367:6;12363:17;12353:27;;12321:61;12428:2;12420:6;12417:14;12397:18;12394:38;12391:218;;12465:77;12462:1;12455:88;12566:4;12563:1;12556:15;12594:4;12591:1;12584:15;12620:277;12687:6;12740:2;12728:9;12719:7;12715:23;12711:32;12708:52;;;12756:1;12753;12746:12;12708:52;12788:9;12782:16;12841:5;12834:13;12827:21;12820:5;12817:32;12807:60;;12863:1;12860;12853:12;13027:1211;13153:3;13182:1;13215:6;13209:13;13245:3;13267:1;13295:9;13291:2;13287:18;13277:28;;13355:2;13344:9;13340:18;13377;13367:61;;13421:4;13413:6;13409:17;13399:27;;13367:61;13447:2;13495;13487:6;13484:14;13464:18;13461:38;13458:222;;13534:77;13529:3;13522:90;13635:4;13632:1;13625:15;13665:4;13660:3;13653:17;13458:222;13696:18;13723:162;;;;13899:1;13894:319;;;;13689:524;;13723:162;13771:66;13760:9;13756:82;13751:3;13744:95;13868:6;13863:3;13859:16;13852:23;;13723:162;;13894:319;12974:1;12967:14;;;13011:4;12998:18;;13988:1;14002:165;14016:6;14013:1;14010:13;14002:165;;;14094:14;;14081:11;;;14074:35;14137:16;;;;14031:10;;14002:165;;;14006:3;;14196:6;14191:3;14187:16;14180:23;;13689:524;-1:-1:-1;14229:3:108;;13027:1211;-1:-1:-1;;;;;;;;13027:1211:108:o;14243:184::-;14313:6;14366:2;14354:9;14345:7;14341:23;14337:32;14334:52;;;14382:1;14379;14372:12;14334:52;-1:-1:-1;14405:16:108;;14243:184;-1:-1:-1;14243:184:108:o;14685:349::-;14724:3;14755:66;14748:5;14745:77;14742:257;;14855:77;14852:1;14845:88;14956:4;14953:1;14946:15;14984:4;14981:1;14974:15;14742:257;-1:-1:-1;15026:1:108;15015:13;;14685:349::o;15039:289::-;15214:6;15203:9;15196:25;15257:2;15252;15241:9;15237:18;15230:30;15177:4;15277:45;15318:2;15307:9;15303:18;15295:6;15277:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeWriter(address)": "4fef6a38",
    "getEntities()": "31b933b9",
    "getEntitiesWithValue((uint256,int32,address,string))": "c241204e",
    "getEntitiesWithValue(bytes)": "b361be46",
    "getRawValue(uint256)": "b8bc073d",
    "getSchema()": "6b122fe0",
    "getValue(uint256)": "0ff4c916",
    "has(uint256)": "cccf7a8e",
    "id()": "af640d0f",
    "owner()": "8da5cb5b",
    "registerIndexer(address)": "75c0669c",
    "registerWorld(address)": "9d2c76b4",
    "remove(uint256)": "4cc82215",
    "set(uint256,(uint256,int32,address,string))": "9ad6ae98",
    "set(uint256,bytes)": "8b282947",
    "transferOwnership(address)": "f2fde38b",
    "unauthorizeWriter(address)": "bf4fe57e",
    "world()": "30b67baa",
    "writeAccess(address)": "861eb905"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"world\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BareComponent__NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableWritable__NotWriter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"authorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntities\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"int32\",\"name\":\"b\",\"type\":\"int32\"},{\"internalType\":\"address\",\"name\":\"c\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"d\",\"type\":\"string\"}],\"internalType\":\"struct TestStruct\",\"name\":\"test\",\"type\":\"tuple\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getRawValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"enum LibTypes.SchemaValue[]\",\"name\":\"values\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getValue\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"int32\",\"name\":\"b\",\"type\":\"int32\"},{\"internalType\":\"address\",\"name\":\"c\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"d\",\"type\":\"string\"}],\"internalType\":\"struct TestStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"indexer\",\"type\":\"address\"}],\"name\":\"registerIndexer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_world\",\"type\":\"address\"}],\"name\":\"registerWorld\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"int32\",\"name\":\"b\",\"type\":\"int32\"},{\"internalType\":\"address\",\"name\":\"c\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"d\",\"type\":\"string\"}],\"internalType\":\"struct TestStruct\",\"name\":\"value\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"unauthorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"writeAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeWriter(address)\":{\"params\":{\"writer\":\"Address to grant write access to.\"}},\"getEntitiesWithValue(bytes)\":{\"params\":{\"value\":\"Abi-encoded value to get the list of entities with this value for.\"}},\"getRawValue(uint256)\":{\"params\":{\"entity\":\"Entity to get the raw value in this component for.\"}},\"has(uint256)\":{\"params\":{\"entity\":\"Entity to check whether it has a value in this component for.\"}},\"owner()\":{\"returns\":{\"_0\":\"conrtact owner\"}},\"registerIndexer(address)\":{\"params\":{\"indexer\":\"Address of the indexer to notify when a component value is set.\"}},\"registerWorld(address)\":{\"params\":{\"_world\":\"Address of the World contract.\"}},\"remove(uint256)\":{\"params\":{\"entity\":\"Entity to remove from this component.\"}},\"set(uint256,bytes)\":{\"params\":{\"entity\":\"Entity to set the value for.\",\"value\":\"Value to set for the given entity.\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}},\"unauthorizeWriter(address)\":{\"params\":{\"writer\":\"Address to revoke write access.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeWriter(address)\":{\"notice\":\"Grant write access to the given address. Can only be called by the owner.\"},\"getEntities()\":{\"notice\":\"Get a list of all entities that have a value in this component.\"},\"getEntitiesWithValue(bytes)\":{\"notice\":\"Get a list of all entities that have the specified value in this component.\"},\"getRawValue(uint256)\":{\"notice\":\"Get the raw (abi-encoded) value of the given entity in this component.\"},\"getSchema()\":{\"notice\":\"Return the keys and value types of the schema of this component. \"},\"has(uint256)\":{\"notice\":\"Check whether the given entity has a value in this component.\"},\"id()\":{\"notice\":\"Public identifier of this component \"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"registerIndexer(address)\":{\"notice\":\"Register a new indexer that gets notified when a component value is set.\"},\"registerWorld(address)\":{\"notice\":\"Register this component in the given world.\"},\"remove(uint256)\":{\"notice\":\"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"set(uint256,bytes)\":{\"notice\":\"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"},\"unauthorizeWriter(address)\":{\"notice\":\"Revoke write access from the given address. Can only be called by the owner.\"},\"world()\":{\"notice\":\"Reference to the World contract this component is registered in \"},\"writeAccess(address)\":{\"notice\":\"Whether given operator has write access \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/TestComponent.sol\":\"TestComponent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@solidstate/=node_modules/@solidstate/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":memmove/=node_modules/memmove/src/\",\":solecs/=node_modules/@latticexyz/solecs/src/\",\":solmate/=node_modules/solmate/src/\"]},\"sources\":{\"node_modules/@latticexyz/solecs/src/BareComponent.sol\":{\"keccak256\":\"0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a\",\"dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA\"]},\"node_modules/@latticexyz/solecs/src/Component.sol\":{\"keccak256\":\"0x40085c2f86bf6be7a756015025477aa46308b1618083ece93ae13093881a6874\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca8653540b5674e50abfd4b4898009b472fc7fd2fba456146c1a1c44b615d83a\",\"dweb:/ipfs/QmSqbRng5fHuGUKgkFuNw3BfoefNteYU95sYi4g9QjCCNh\"]},\"node_modules/@latticexyz/solecs/src/LibTypes.sol\":{\"keccak256\":\"0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798\",\"dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH\"]},\"node_modules/@latticexyz/solecs/src/MapSet.sol\":{\"keccak256\":\"0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288\",\"dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9\"]},\"node_modules/@latticexyz/solecs/src/Ownable.sol\":{\"keccak256\":\"0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4\",\"dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza\"]},\"node_modules/@latticexyz/solecs/src/OwnableWritable.sol\":{\"keccak256\":\"0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c\",\"dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A\"]},\"node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol\":{\"keccak256\":\"0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4\",\"dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW\"]},\"node_modules/@latticexyz/solecs/src/Set.sol\":{\"keccak256\":\"0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46\",\"dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME\"]},\"node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol\":{\"keccak256\":\"0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629\",\"dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW\"]},\"node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol\":{\"keccak256\":\"0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e\",\"dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi\"]},\"node_modules/@latticexyz/solecs/src/interfaces/IEntityContainer.sol\":{\"keccak256\":\"0x4506db1dcbdbe68a397107a57bfa3da888a889f14181a90eb728cfecc60700b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23f5c02d110f5abf6340a08a2a8b7e0b5668f211fe6baf41213e6c4f69dece10\",\"dweb:/ipfs/QmYfKeZMeEUNExsxjkCF5nGdw8KRyPe1t5tcGFTEkP7CkV\"]},\"node_modules/@latticexyz/solecs/src/interfaces/IEntityIndexer.sol\":{\"keccak256\":\"0xd89023b2a5e9961be3c9d49d9f7f9ac7dcc416e3f43a8758dc058d1db2eea6b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3266ea1dd5a7f372f8814db24ac4981730f66fba8e6f90f614246ca5cec529b4\",\"dweb:/ipfs/QmQ71BtaBsDjfke46dndaTBVhyXAHxs5qs7d9GHJwVXuvw\"]},\"node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol\":{\"keccak256\":\"0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78\",\"dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY\"]},\"node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol\":{\"keccak256\":\"0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f\",\"dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9\"]},\"node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol\":{\"keccak256\":\"0xd4e257a8c2c2ddceba671d791df0556d40b15b06f6ca479784afb143d2919adf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcf752a88f0679992ebea18e93de0c13bf0d840c222b764865c889c72349d9e1\",\"dweb:/ipfs/QmaSpUThcJGNkZnz4uAHLJKdhYTeQQCSCKagDaTF8h9DJ7\"]},\"node_modules/@latticexyz/solecs/src/interfaces/Query.sol\":{\"keccak256\":\"0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059\",\"dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP\"]},\"node_modules/@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\",\"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\"]},\"node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"node_modules/@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"node_modules/@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\",\"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\"]},\"node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"node_modules/@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"node_modules/@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]},\"node_modules/memmove/src/Array.sol\":{\"keccak256\":\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"]},\"node_modules/memmove/src/LinkedList.sol\":{\"keccak256\":\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"]},\"src/test/TestComponent.sol\":{\"keccak256\":\"0x9763deebbb2a0caedd2e026e4552f322fd0870e68199d2b9001085defcb5200d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f5b4f58fc36383f3367047c2df6c3ce679e23560da63b39ce552e4a50780401\",\"dweb:/ipfs/QmZciVeRsjJWRyCFT4cdjMkeS6Dur41PiWji83qv3ihKUf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BareComponent__NotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnableWritable__NotWriter"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotTransitiveOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntities",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct TestStruct",
              "name": "test",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "a",
                  "type": "uint256"
                },
                {
                  "internalType": "int32",
                  "name": "b",
                  "type": "int32"
                },
                {
                  "internalType": "address",
                  "name": "c",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "d",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRawValue",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "keys",
              "type": "string[]"
            },
            {
              "internalType": "enum LibTypes.SchemaValue[]",
              "name": "values",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getValue",
          "outputs": [
            {
              "internalType": "struct TestStruct",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "a",
                  "type": "uint256"
                },
                {
                  "internalType": "int32",
                  "name": "b",
                  "type": "int32"
                },
                {
                  "internalType": "address",
                  "name": "c",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "d",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "has",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "id",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "indexer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerIndexer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerWorld"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "struct TestStruct",
              "name": "value",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "a",
                  "type": "uint256"
                },
                {
                  "internalType": "int32",
                  "name": "b",
                  "type": "int32"
                },
                {
                  "internalType": "address",
                  "name": "c",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "d",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unauthorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "world",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "writeAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeWriter(address)": {
            "params": {
              "writer": "Address to grant write access to."
            }
          },
          "getEntitiesWithValue(bytes)": {
            "params": {
              "value": "Abi-encoded value to get the list of entities with this value for."
            }
          },
          "getRawValue(uint256)": {
            "params": {
              "entity": "Entity to get the raw value in this component for."
            }
          },
          "has(uint256)": {
            "params": {
              "entity": "Entity to check whether it has a value in this component for."
            }
          },
          "owner()": {
            "returns": {
              "_0": "conrtact owner"
            }
          },
          "registerIndexer(address)": {
            "params": {
              "indexer": "Address of the indexer to notify when a component value is set."
            }
          },
          "registerWorld(address)": {
            "params": {
              "_world": "Address of the World contract."
            }
          },
          "remove(uint256)": {
            "params": {
              "entity": "Entity to remove from this component."
            }
          },
          "set(uint256,bytes)": {
            "params": {
              "entity": "Entity to set the value for.",
              "value": "Value to set for the given entity."
            }
          },
          "transferOwnership(address)": {
            "params": {
              "account": "address of new owner"
            }
          },
          "unauthorizeWriter(address)": {
            "params": {
              "writer": "Address to revoke write access."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorizeWriter(address)": {
            "notice": "Grant write access to the given address. Can only be called by the owner."
          },
          "getEntities()": {
            "notice": "Get a list of all entities that have a value in this component."
          },
          "getEntitiesWithValue(bytes)": {
            "notice": "Get a list of all entities that have the specified value in this component."
          },
          "getRawValue(uint256)": {
            "notice": "Get the raw (abi-encoded) value of the given entity in this component."
          },
          "getSchema()": {
            "notice": "Return the keys and value types of the schema of this component. "
          },
          "has(uint256)": {
            "notice": "Check whether the given entity has a value in this component."
          },
          "id()": {
            "notice": "Public identifier of this component "
          },
          "owner()": {
            "notice": "get the ERC173 contract owner"
          },
          "registerIndexer(address)": {
            "notice": "Register a new indexer that gets notified when a component value is set."
          },
          "registerWorld(address)": {
            "notice": "Register this component in the given world."
          },
          "remove(uint256)": {
            "notice": "Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "set(uint256,bytes)": {
            "notice": "Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "transferOwnership(address)": {
            "notice": "transfer contract ownership to new account"
          },
          "unauthorizeWriter(address)": {
            "notice": "Revoke write access from the given address. Can only be called by the owner."
          },
          "world()": {
            "notice": "Reference to the World contract this component is registered in "
          },
          "writeAccess(address)": {
            "notice": "Whether given operator has write access "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@solidstate/=node_modules/@solidstate/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "memmove/=node_modules/memmove/src/",
        "solecs/=node_modules/@latticexyz/solecs/src/",
        "solmate/=node_modules/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/TestComponent.sol": "TestComponent"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@latticexyz/solecs/src/BareComponent.sol": {
        "keccak256": "0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a",
        "urls": [
          "bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a",
          "dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/Component.sol": {
        "keccak256": "0x40085c2f86bf6be7a756015025477aa46308b1618083ece93ae13093881a6874",
        "urls": [
          "bzz-raw://ca8653540b5674e50abfd4b4898009b472fc7fd2fba456146c1a1c44b615d83a",
          "dweb:/ipfs/QmSqbRng5fHuGUKgkFuNw3BfoefNteYU95sYi4g9QjCCNh"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/LibTypes.sol": {
        "keccak256": "0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102",
        "urls": [
          "bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798",
          "dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/MapSet.sol": {
        "keccak256": "0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db",
        "urls": [
          "bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288",
          "dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/Ownable.sol": {
        "keccak256": "0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209",
        "urls": [
          "bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4",
          "dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/OwnableWritable.sol": {
        "keccak256": "0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf",
        "urls": [
          "bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c",
          "dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol": {
        "keccak256": "0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5",
        "urls": [
          "bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4",
          "dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/Set.sol": {
        "keccak256": "0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344",
        "urls": [
          "bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46",
          "dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol": {
        "keccak256": "0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4",
        "urls": [
          "bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629",
          "dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol": {
        "keccak256": "0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9",
        "urls": [
          "bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e",
          "dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/interfaces/IEntityContainer.sol": {
        "keccak256": "0x4506db1dcbdbe68a397107a57bfa3da888a889f14181a90eb728cfecc60700b8",
        "urls": [
          "bzz-raw://23f5c02d110f5abf6340a08a2a8b7e0b5668f211fe6baf41213e6c4f69dece10",
          "dweb:/ipfs/QmYfKeZMeEUNExsxjkCF5nGdw8KRyPe1t5tcGFTEkP7CkV"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/interfaces/IEntityIndexer.sol": {
        "keccak256": "0xd89023b2a5e9961be3c9d49d9f7f9ac7dcc416e3f43a8758dc058d1db2eea6b5",
        "urls": [
          "bzz-raw://3266ea1dd5a7f372f8814db24ac4981730f66fba8e6f90f614246ca5cec529b4",
          "dweb:/ipfs/QmQ71BtaBsDjfke46dndaTBVhyXAHxs5qs7d9GHJwVXuvw"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol": {
        "keccak256": "0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77",
        "urls": [
          "bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78",
          "dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol": {
        "keccak256": "0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9",
        "urls": [
          "bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f",
          "dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol": {
        "keccak256": "0xd4e257a8c2c2ddceba671d791df0556d40b15b06f6ca479784afb143d2919adf",
        "urls": [
          "bzz-raw://dcf752a88f0679992ebea18e93de0c13bf0d840c222b764865c889c72349d9e1",
          "dweb:/ipfs/QmaSpUThcJGNkZnz4uAHLJKdhYTeQQCSCKagDaTF8h9DJ7"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/solecs/src/interfaces/Query.sol": {
        "keccak256": "0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c",
        "urls": [
          "bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059",
          "dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/access/ownable/IOwnable.sol": {
        "keccak256": "0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1",
        "urls": [
          "bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38",
          "dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol": {
        "keccak256": "0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60",
        "urls": [
          "bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3",
          "dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/access/ownable/Ownable.sol": {
        "keccak256": "0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f",
        "urls": [
          "bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc",
          "dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol": {
        "keccak256": "0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9",
        "urls": [
          "bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52",
          "dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol": {
        "keccak256": "0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73",
        "urls": [
          "bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995",
          "dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6",
        "urls": [
          "bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555",
          "dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol": {
        "keccak256": "0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89",
        "urls": [
          "bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75",
          "dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/utils/AddressUtils.sol": {
        "keccak256": "0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf",
        "urls": [
          "bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929",
          "dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm"
        ],
        "license": "MIT"
      },
      "node_modules/@solidstate/contracts/utils/UintUtils.sol": {
        "keccak256": "0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8",
        "urls": [
          "bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2",
          "dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza"
        ],
        "license": "MIT"
      },
      "node_modules/memmove/src/Array.sol": {
        "keccak256": "0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515",
        "urls": [
          "bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1",
          "dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ"
        ],
        "license": "MIT"
      },
      "node_modules/memmove/src/LinkedList.sol": {
        "keccak256": "0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1",
        "urls": [
          "bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598",
          "dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc"
        ],
        "license": "MIT"
      },
      "src/test/TestComponent.sol": {
        "keccak256": "0x9763deebbb2a0caedd2e026e4552f322fd0870e68199d2b9001085defcb5200d",
        "urls": [
          "bzz-raw://4f5b4f58fc36383f3367047c2df6c3ce679e23560da63b39ce552e4a50780401",
          "dweb:/ipfs/QmZciVeRsjJWRyCFT4cdjMkeS6Dur41PiWji83qv3ihKUf"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/TestComponent.sol",
    "id": 16123,
    "exportedSymbols": {
      "Component": [
        4971
      ],
      "ID": [
        15941
      ],
      "LibTypes": [
        6298
      ],
      "TestComponent": [
        16122
      ],
      "TestStruct": [
        15950
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1327:105",
    "nodes": [
      {
        "id": 15929,
        "nodeType": "PragmaDirective",
        "src": "32:24:105",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 15931,
        "nodeType": "ImportDirective",
        "src": "57:49:105",
        "nodes": [],
        "absolutePath": "node_modules/@latticexyz/solecs/src/Component.sol",
        "file": "solecs/Component.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16123,
        "sourceUnit": 4972,
        "symbolAliases": [
          {
            "foreign": {
              "id": 15930,
              "name": "Component",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4971,
              "src": "66:9:105",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 15933,
        "nodeType": "ImportDirective",
        "src": "107:47:105",
        "nodes": [],
        "absolutePath": "node_modules/@latticexyz/solecs/src/LibTypes.sol",
        "file": "solecs/LibTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16123,
        "sourceUnit": 6299,
        "symbolAliases": [
          {
            "foreign": {
              "id": 15932,
              "name": "LibTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6298,
              "src": "116:8:105",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 15941,
        "nodeType": "VariableDeclaration",
        "src": "156:61:105",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "ID",
        "nameLocation": "173:2:105",
        "scope": 16123,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 15934,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "156:7:105",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "arguments": [
            {
              "arguments": [
                {
                  "hexValue": "6c69622e74657374436f6d706f6e656e74",
                  "id": 15938,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "196:19:105",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_3e8d66466117807be104d072ef802820dff472f0909aaa1ee20fd390b8c87bd3",
                    "typeString": "literal_string \"lib.testComponent\""
                  },
                  "value": "lib.testComponent"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_3e8d66466117807be104d072ef802820dff472f0909aaa1ee20fd390b8c87bd3",
                    "typeString": "literal_string \"lib.testComponent\""
                  }
                ],
                "id": 15937,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "186:9:105",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 15939,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "186:30:105",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            ],
            "id": 15936,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "178:7:105",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_uint256_$",
              "typeString": "type(uint256)"
            },
            "typeName": {
              "id": 15935,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "178:7:105",
              "typeDescriptions": {}
            }
          },
          "id": 15940,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "names": [],
          "nodeType": "FunctionCall",
          "src": "178:39:105",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 15950,
        "nodeType": "StructDefinition",
        "src": "220:70:105",
        "nodes": [],
        "canonicalName": "TestStruct",
        "members": [
          {
            "constant": false,
            "id": 15943,
            "mutability": "mutable",
            "name": "a",
            "nameLocation": "250:1:105",
            "nodeType": "VariableDeclaration",
            "scope": 15950,
            "src": "242:9:105",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15942,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "242:7:105",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15945,
            "mutability": "mutable",
            "name": "b",
            "nameLocation": "261:1:105",
            "nodeType": "VariableDeclaration",
            "scope": 15950,
            "src": "255:7:105",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int32",
              "typeString": "int32"
            },
            "typeName": {
              "id": 15944,
              "name": "int32",
              "nodeType": "ElementaryTypeName",
              "src": "255:5:105",
              "typeDescriptions": {
                "typeIdentifier": "t_int32",
                "typeString": "int32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15947,
            "mutability": "mutable",
            "name": "c",
            "nameLocation": "274:1:105",
            "nodeType": "VariableDeclaration",
            "scope": 15950,
            "src": "266:9:105",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15946,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "266:7:105",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15949,
            "mutability": "mutable",
            "name": "d",
            "nameLocation": "286:1:105",
            "nodeType": "VariableDeclaration",
            "scope": 15950,
            "src": "279:8:105",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 15948,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "279:6:105",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "TestStruct",
        "nameLocation": "227:10:105",
        "scope": 16123,
        "visibility": "public"
      },
      {
        "id": 16122,
        "nodeType": "ContractDefinition",
        "src": "292:1066:105",
        "nodes": [
          {
            "id": 15962,
            "nodeType": "FunctionDefinition",
            "src": "332:50:105",
            "nodes": [],
            "body": {
              "id": 15961,
              "nodeType": "Block",
              "src": "380:2:105",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 15957,
                    "name": "world",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15954,
                    "src": "369:5:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 15958,
                    "name": "ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15941,
                    "src": "376:2:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 15959,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 15956,
                  "name": "Component",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4971,
                  "src": "359:9:105"
                },
                "nodeType": "ModifierInvocation",
                "src": "359:20:105"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 15955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15954,
                  "mutability": "mutable",
                  "name": "world",
                  "nameLocation": "352:5:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 15962,
                  "src": "344:13:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "343:15:105"
            },
            "returnParameters": {
              "id": 15960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "380:0:105"
            },
            "scope": 16122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16047,
            "nodeType": "FunctionDefinition",
            "src": "386:449:105",
            "nodes": [],
            "body": {
              "id": 16046,
              "nodeType": "Block",
              "src": "497:338:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 15979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15973,
                      "name": "keys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15967,
                      "src": "503:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "34",
                          "id": 15977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "523:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          }
                        ],
                        "id": 15976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "510:12:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (string memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 15974,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "514:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 15975,
                          "nodeType": "ArrayTypeName",
                          "src": "514:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        }
                      },
                      "id": 15978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "510:15:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "503:22:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 15980,
                  "nodeType": "ExpressionStatement",
                  "src": "503:22:105"
                },
                {
                  "expression": {
                    "id": 15988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15981,
                      "name": "values",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15971,
                      "src": "531:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "34",
                          "id": 15986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "567:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          }
                        ],
                        "id": 15985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "540:26:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (enum LibTypes.SchemaValue[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 15983,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 15982,
                              "name": "LibTypes.SchemaValue",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 6297,
                              "src": "544:20:105"
                            },
                            "referencedDeclaration": 6297,
                            "src": "544:20:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SchemaValue_$6297",
                              "typeString": "enum LibTypes.SchemaValue"
                            }
                          },
                          "id": 15984,
                          "nodeType": "ArrayTypeName",
                          "src": "544:22:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_storage_ptr",
                            "typeString": "enum LibTypes.SchemaValue[]"
                          }
                        }
                      },
                      "id": 15987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "540:29:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "src": "531:38:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                      "typeString": "enum LibTypes.SchemaValue[] memory"
                    }
                  },
                  "id": 15989,
                  "nodeType": "ExpressionStatement",
                  "src": "531:38:105"
                },
                {
                  "expression": {
                    "id": 15994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15990,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15967,
                        "src": "576:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 15992,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 15991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "581:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "576:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "61",
                      "id": 15993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "586:3:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
                        "typeString": "literal_string \"a\""
                      },
                      "value": "a"
                    },
                    "src": "576:13:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 15995,
                  "nodeType": "ExpressionStatement",
                  "src": "576:13:105"
                },
                {
                  "expression": {
                    "id": 16002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15996,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15971,
                        "src": "595:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 15998,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 15997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "602:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "595:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 15999,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6298,
                          "src": "607:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$6298_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 16000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6297,
                        "src": "607:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$6297_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 16001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "UINT256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6276,
                      "src": "607:28:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "595:40:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$6297",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 16003,
                  "nodeType": "ExpressionStatement",
                  "src": "595:40:105"
                },
                {
                  "expression": {
                    "id": 16008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16004,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15967,
                        "src": "642:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 16006,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 16005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "647:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "642:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "62",
                      "id": 16007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "652:3:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510",
                        "typeString": "literal_string \"b\""
                      },
                      "value": "b"
                    },
                    "src": "642:13:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 16009,
                  "nodeType": "ExpressionStatement",
                  "src": "642:13:105"
                },
                {
                  "expression": {
                    "id": 16016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16010,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15971,
                        "src": "661:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 16012,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 16011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "668:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "661:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 16013,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6298,
                          "src": "673:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$6298_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 16014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6297,
                        "src": "673:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$6297_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 16015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "INT32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6266,
                      "src": "673:26:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "661:38:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$6297",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 16017,
                  "nodeType": "ExpressionStatement",
                  "src": "661:38:105"
                },
                {
                  "expression": {
                    "id": 16022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16018,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15967,
                        "src": "706:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 16020,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 16019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "711:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "706:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "63",
                      "id": 16021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "716:3:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_0b42b6393c1f53060fe3ddbfcd7aadcca894465a5a438f69c87d790b2299b9b2",
                        "typeString": "literal_string \"c\""
                      },
                      "value": "c"
                    },
                    "src": "706:13:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 16023,
                  "nodeType": "ExpressionStatement",
                  "src": "706:13:105"
                },
                {
                  "expression": {
                    "id": 16030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16024,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15971,
                        "src": "725:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 16026,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 16025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "732:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "725:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 16027,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6298,
                          "src": "737:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$6298_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 16028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6297,
                        "src": "737:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$6297_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 16029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6279,
                      "src": "737:28:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "725:40:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$6297",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 16031,
                  "nodeType": "ExpressionStatement",
                  "src": "725:40:105"
                },
                {
                  "expression": {
                    "id": 16036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16032,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15967,
                        "src": "772:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 16034,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 16033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "777:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "772:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "64",
                      "id": 16035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "782:3:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_f1918e8562236eb17adc8502332f4c9c82bc14e19bfc0aa10ab674ff75b3d2f3",
                        "typeString": "literal_string \"d\""
                      },
                      "value": "d"
                    },
                    "src": "772:13:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 16037,
                  "nodeType": "ExpressionStatement",
                  "src": "772:13:105"
                },
                {
                  "expression": {
                    "id": 16044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16038,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15971,
                        "src": "791:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 16040,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 16039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "798:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "791:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 16041,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6298,
                          "src": "803:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$6298_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 16042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6297,
                        "src": "803:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$6297_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 16043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STRING",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6278,
                      "src": "803:27:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "791:39:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$6297",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 16045,
                  "nodeType": "ExpressionStatement",
                  "src": "791:39:105"
                }
              ]
            },
            "baseFunctions": [
              7089
            ],
            "functionSelector": "6b122fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "395:9:105",
            "overrides": {
              "id": 15964,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "419:8:105"
            },
            "parameters": {
              "id": 15963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:2:105"
            },
            "returnParameters": {
              "id": 15972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15967,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "453:4:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 16047,
                  "src": "437:20:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15965,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "437:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 15966,
                    "nodeType": "ArrayTypeName",
                    "src": "437:8:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15971,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "489:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 16047,
                  "src": "459:36:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_memory_ptr",
                    "typeString": "enum LibTypes.SchemaValue[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15969,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 15968,
                        "name": "LibTypes.SchemaValue",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6297,
                        "src": "459:20:105"
                      },
                      "referencedDeclaration": 6297,
                      "src": "459:20:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$6297",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "id": 15970,
                    "nodeType": "ArrayTypeName",
                    "src": "459:22:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$6297_$dyn_storage_ptr",
                      "typeString": "enum LibTypes.SchemaValue[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "436:60:105"
            },
            "scope": 16122,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16064,
            "nodeType": "FunctionDefinition",
            "src": "839:104:105",
            "nodes": [],
            "body": {
              "id": 16063,
              "nodeType": "Block",
              "src": "902:41:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16056,
                        "name": "entity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16049,
                        "src": "912:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 16059,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16052,
                            "src": "931:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestStruct_$15950_calldata_ptr",
                              "typeString": "struct TestStruct calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_TestStruct_$15950_calldata_ptr",
                              "typeString": "struct TestStruct calldata"
                            }
                          ],
                          "expression": {
                            "id": 16057,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "920:3:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 16058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "920:10:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 16060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "920:17:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 16055,
                      "name": "set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16064,
                        4583
                      ],
                      "referencedDeclaration": 4583,
                      "src": "908:3:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 16061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "908:30:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16062,
                  "nodeType": "ExpressionStatement",
                  "src": "908:30:105"
                }
              ]
            },
            "functionSelector": "9ad6ae98",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "848:3:105",
            "parameters": {
              "id": 16053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16049,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "860:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 16064,
                  "src": "852:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16052,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "888:5:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 16064,
                  "src": "868:25:105",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TestStruct_$15950_calldata_ptr",
                    "typeString": "struct TestStruct"
                  },
                  "typeName": {
                    "id": 16051,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16050,
                      "name": "TestStruct",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15950,
                      "src": "868:10:105"
                    },
                    "referencedDeclaration": 15950,
                    "src": "868:10:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TestStruct_$15950_storage_ptr",
                      "typeString": "struct TestStruct"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "851:43:105"
            },
            "returnParameters": {
              "id": 16054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "902:0:105"
            },
            "scope": 16122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16104,
            "nodeType": "FunctionDefinition",
            "src": "947:254:105",
            "nodes": [],
            "body": {
              "id": 16103,
              "nodeType": "Block",
              "src": "1021:180:105",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    16073,
                    16075,
                    16077,
                    16079
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16073,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "1036:1:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 16103,
                      "src": "1028:9:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16072,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1028:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 16075,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "1045:1:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 16103,
                      "src": "1039:7:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      },
                      "typeName": {
                        "id": 16074,
                        "name": "int32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1039:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int32",
                          "typeString": "int32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 16077,
                      "mutability": "mutable",
                      "name": "c",
                      "nameLocation": "1056:1:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 16103,
                      "src": "1048:9:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16076,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1048:7:105",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 16079,
                      "mutability": "mutable",
                      "name": "d",
                      "nameLocation": "1073:1:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 16103,
                      "src": "1059:15:105",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 16078,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1059:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16095,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 16083,
                            "name": "entity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16066,
                            "src": "1108:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 16082,
                          "name": "getRawValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4628,
                          "src": "1096:11:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) view returns (bytes memory)"
                          }
                        },
                        "id": 16084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1096:19:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 16086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1124:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 16085,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1124:6:105",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 16088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1132:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int32_$",
                              "typeString": "type(int32)"
                            },
                            "typeName": {
                              "id": 16087,
                              "name": "int32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1132:5:105",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 16090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1139:7:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16089,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1139:7:105",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 16092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1148:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 16091,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1148:6:105",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 16093,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1123:32:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint32_$_$_t_type$_t_int32_$_$_t_type$_t_address_$_$_t_type$_t_string_storage_ptr_$_$",
                          "typeString": "tuple(type(uint32),type(int32),type(address),type(string storage pointer))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint32_$_$_t_type$_t_int32_$_$_t_type$_t_address_$_$_t_type$_t_string_storage_ptr_$_$",
                          "typeString": "tuple(type(uint32),type(int32),type(address),type(string storage pointer))"
                        }
                      ],
                      "expression": {
                        "id": 16080,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1078:3:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 16081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1078:10:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 16094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:83:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint32_$_t_int32_$_t_address_payable_$_t_string_memory_ptr_$",
                      "typeString": "tuple(uint32,int32,address payable,string memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1027:134:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16097,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16073,
                        "src": "1185:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16098,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16075,
                        "src": "1188:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int32",
                          "typeString": "int32"
                        }
                      },
                      {
                        "id": 16099,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16077,
                        "src": "1191:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16100,
                        "name": "d",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16079,
                        "src": "1194:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int32",
                          "typeString": "int32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 16096,
                      "name": "TestStruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15950,
                      "src": "1174:10:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TestStruct_$15950_storage_ptr_$",
                        "typeString": "type(struct TestStruct storage pointer)"
                      }
                    },
                    "id": 16101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1174:22:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TestStruct_$15950_memory_ptr",
                      "typeString": "struct TestStruct memory"
                    }
                  },
                  "functionReturnParameters": 16071,
                  "id": 16102,
                  "nodeType": "Return",
                  "src": "1167:29:105"
                }
              ]
            },
            "functionSelector": "0ff4c916",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "956:8:105",
            "parameters": {
              "id": 16067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16066,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "973:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 16104,
                  "src": "965:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "964:16:105"
            },
            "returnParameters": {
              "id": 16071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16070,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16104,
                  "src": "1002:17:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TestStruct_$15950_memory_ptr",
                    "typeString": "struct TestStruct"
                  },
                  "typeName": {
                    "id": 16069,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16068,
                      "name": "TestStruct",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15950,
                      "src": "1002:10:105"
                    },
                    "referencedDeclaration": 15950,
                    "src": "1002:10:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TestStruct_$15950_storage_ptr",
                      "typeString": "struct TestStruct"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1001:19:105"
            },
            "scope": 16122,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16121,
            "nodeType": "FunctionDefinition",
            "src": "1205:151:105",
            "nodes": [],
            "body": {
              "id": 16120,
              "nodeType": "Block",
              "src": "1300:56:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 16116,
                            "name": "test",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16107,
                            "src": "1345:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestStruct_$15950_calldata_ptr",
                              "typeString": "struct TestStruct calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_TestStruct_$15950_calldata_ptr",
                              "typeString": "struct TestStruct calldata"
                            }
                          ],
                          "expression": {
                            "id": 16114,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1334:3:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 16115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1334:10:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 16117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1334:16:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 16113,
                      "name": "getEntitiesWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16121,
                        4813
                      ],
                      "referencedDeclaration": 4813,
                      "src": "1313:20:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (uint256[] memory)"
                      }
                    },
                    "id": 16118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1313:38:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 16112,
                  "id": 16119,
                  "nodeType": "Return",
                  "src": "1306:45:105"
                }
              ]
            },
            "functionSelector": "c241204e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntitiesWithValue",
            "nameLocation": "1214:20:105",
            "parameters": {
              "id": 16108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16107,
                  "mutability": "mutable",
                  "name": "test",
                  "nameLocation": "1255:4:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 16121,
                  "src": "1235:24:105",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TestStruct_$15950_calldata_ptr",
                    "typeString": "struct TestStruct"
                  },
                  "typeName": {
                    "id": 16106,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16105,
                      "name": "TestStruct",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15950,
                      "src": "1235:10:105"
                    },
                    "referencedDeclaration": 15950,
                    "src": "1235:10:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TestStruct_$15950_storage_ptr",
                      "typeString": "struct TestStruct"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1234:26:105"
            },
            "returnParameters": {
              "id": 16112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16121,
                  "src": "1282:16:105",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16109,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1282:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 16110,
                    "nodeType": "ArrayTypeName",
                    "src": "1282:9:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1281:18:105"
            },
            "scope": 16122,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15951,
              "name": "Component",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4971,
              "src": "318:9:105"
            },
            "id": 15952,
            "nodeType": "InheritanceSpecifier",
            "src": "318:9:105"
          }
        ],
        "canonicalName": "TestComponent",
        "contractDependencies": [
          16570,
          16826
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          16122,
          4971,
          4708,
          16660,
          16886,
          7600,
          17429,
          17844,
          17305,
          7140,
          17294,
          7643,
          17439
        ],
        "name": "TestComponent",
        "nameLocation": "301:13:105",
        "scope": 16123,
        "usedErrors": [
          4508,
          16585,
          17841,
          17843
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 105
}
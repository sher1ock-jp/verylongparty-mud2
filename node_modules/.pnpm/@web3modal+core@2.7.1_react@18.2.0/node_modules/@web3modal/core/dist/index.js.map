{"version":3,"file":"index.js","sources":["../src/controllers/RouterCtrl.ts","../src/utils/CoreUtil.ts","../src/controllers/ClientCtrl.ts","../src/controllers/EventsCtrl.ts","../src/controllers/OptionsCtrl.ts","../src/controllers/ConfigCtrl.ts","../src/utils/BlockchainApiUtil.ts","../src/controllers/AccountCtrl.ts","../src/utils/ExplorerUtil.ts","../src/controllers/ExplorerCtrl.ts","../src/controllers/WcConnectionCtrl.ts","../src/controllers/ModalCtrl.ts","../src/controllers/ThemeCtrl.ts","../src/controllers/ToastCtrl.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n","import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  W3M_VERSION: 'W3M_VERSION',\n\n  W3M_PREFER_INJECTED_URL_FLAG: 'w3mPreferInjected',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    try {\n      localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n    } catch {\n      console.info('Unable to set WalletConnect deep link')\n    }\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    try {\n      const [href] = wcUri.split('?')\n      localStorage.setItem(\n        CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n        JSON.stringify({ href, name: 'Android' })\n      )\n    } catch {\n      console.info('Unable to set WalletConnect android deep link')\n    }\n  },\n\n  removeWalletConnectDeepLink() {\n    try {\n      localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n    } catch {\n      console.info('Unable to remove WalletConnect deep link')\n    }\n  },\n\n  setWeb3ModalVersionInStorage() {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(CoreUtil.W3M_VERSION, process.env.ROLLUP_W3M_VERSION ?? 'UNKNOWN')\n      }\n    } catch {\n      console.info('Unable to set Web3Modal version in storage')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  },\n\n  getSwitchNetworkRouterData() {\n    const routerData = RouterCtrl.state.data?.SwitchNetwork\n    if (!routerData) {\n      throw new Error('Missing \"SwitchNetwork\" view data')\n    }\n\n    return routerData\n  },\n\n  isPreferInjectedFlag() {\n    if (typeof location !== 'undefined') {\n      const queryParams = new URLSearchParams(location.search)\n\n      return queryParams.has(CoreUtil.W3M_PREFER_INJECTED_URL_FLAG)\n    }\n\n    return false\n  }\n}\n","import type { ClientCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nlet client: ClientCtrlState['ethereumClient'] = undefined\n\n// -- controller -- As function to enable correct ssr handling\nexport const ClientCtrl = {\n  ethereumClient: undefined,\n\n  setEthereumClient(ethereumClient: ClientCtrlState['ethereumClient']) {\n    client = ethereumClient\n  },\n\n  client() {\n    if (client) {\n      return client\n    }\n\n    throw new Error('ClientCtrl has no client set')\n  }\n}\n","import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  selectedChain: undefined,\n  chains: undefined,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false,\n  isPreferInjected: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains?: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  getSelectedChain() {\n    const selectedChain = ClientCtrl.client().getNetwork().chain\n    if (selectedChain) {\n      state.selectedChain = selectedChain\n    }\n\n    return state.selectedChain\n  },\n\n  setSelectedChain(selectedChain: OptionsCtrlState['selectedChain']) {\n    state.selectedChain = selectedChain\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsPreferInjected(isPreferInjected: OptionsCtrlState['isPreferInjected']) {\n    state.isPreferInjected = isPreferInjected\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ClientCtrl } from './ClientCtrl'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chainImages: undefined,\n  tokenImages: undefined,\n  tokenContracts: undefined,\n  enableNetworkView: false,\n  enableAccountView: true,\n  enableExplorer: true,\n  defaultChain: undefined,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n    OptionsCtrl.setChains(ClientCtrl.client().chains)\n    OptionsCtrl.setIsPreferInjected(\n      ClientCtrl.client().isInjectedProviderInstalled() && CoreUtil.isPreferInjectedFlag()\n    )\n\n    if (config.defaultChain) {\n      OptionsCtrl.setSelectedChain(config.defaultChain)\n    }\n\n    CoreUtil.setWeb3ModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\n\n// -- Constants -----------------------------------------------------\nexport const NAMESPACE = 'eip155'\nconst BLOCKCHAIN_API = 'https://rpc.walletconnect.com'\n\n// -- Utility -------------------------------------------------------\nexport const BlockchainApiUtil = {\n  async getIdentity(address: string, chainId: number): Promise<{ name?: string; avatar?: string }> {\n    const { projectId } = ConfigCtrl.state\n    const chain_id = `${NAMESPACE}:${chainId}`\n    const endpoint = `${BLOCKCHAIN_API}/v1/identity/${address}?chainId=${chain_id}&projectId=${projectId}`\n\n    return (await fetch(endpoint)).json()\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { AccountCtrlState } from '../types/controllerTypes'\nimport { BlockchainApiUtil } from '../utils/BlockchainApiUtil'\nimport { ClientCtrl } from './ClientCtrl'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<AccountCtrlState>({\n  address: undefined,\n  profileName: undefined,\n  profileAvatar: undefined,\n  profileLoading: false,\n  balanceLoading: false,\n  balance: undefined,\n  isConnected: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const AccountCtrl = {\n  state,\n\n  subscribe(callback: (newState: AccountCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  getAccount() {\n    const account = ClientCtrl.client().getAccount()\n    state.address = account.address\n    state.isConnected = account.isConnected\n  },\n\n  async fetchProfile(\n    preloadAvatarFn: (avatar: string) => Promise<unknown>,\n    profileAddress?: `0x${string}`\n  ) {\n    try {\n      state.profileLoading = true\n      state.profileName = null\n      state.profileAvatar = null\n      const address = profileAddress ?? state.address\n      const mainnetId = 1\n      const isMainnetConfigured = OptionsCtrl.state.chains?.find(chain => chain.id === mainnetId)\n      if (address && isMainnetConfigured) {\n        try {\n          const profile = await BlockchainApiUtil.getIdentity(address, mainnetId)\n          state.profileName = profile.name\n          state.profileAvatar = profile.avatar\n        } catch {\n          // If problem resolving the identity using our own Identity API, fallback to RPC resolution\n          const name = await ClientCtrl.client().fetchEnsName({ address, chainId: mainnetId })\n          state.profileName = name\n          if (name) {\n            const avatar = await ClientCtrl.client().fetchEnsAvatar({ name, chainId: mainnetId })\n            state.profileAvatar = avatar\n          }\n        }\n        if (state.profileAvatar) {\n          await preloadAvatarFn(state.profileAvatar)\n        }\n      }\n    } finally {\n      state.profileLoading = false\n    }\n  },\n\n  async fetchBalance(balanceAddress?: `0x${string}`) {\n    try {\n      const { chain } = ClientCtrl.client().getNetwork()\n      const { tokenContracts } = ConfigCtrl.state\n      let token: `0x${string}` | undefined = undefined\n      if (chain && tokenContracts) {\n        token = tokenContracts[chain.id] as `0x${string}`\n      }\n      state.balanceLoading = true\n      const address = balanceAddress ?? state.address\n      if (address) {\n        const balance = await ClientCtrl.client().fetchBalance({ address, token })\n        state.balance = { amount: balance.formatted, symbol: balance.symbol }\n      }\n    } finally {\n      state.balanceLoading = false\n    }\n  },\n\n  setAddress(address: AccountCtrlState['address']) {\n    state.address = address\n  },\n\n  setIsConnected(isConnected: AccountCtrlState['isConnected']) {\n    state.isConnected = isConnected\n  },\n\n  resetBalance() {\n    state.balance = undefined\n  },\n\n  resetAccount() {\n    state.address = undefined\n    state.isConnected = false\n    state.profileName = undefined\n    state.profileAvatar = undefined\n    state.balance = undefined\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\nconst SDK_TYPE = 'w3m'\nconst SDK_VERSION = `js-${process.env.ROLLUP_W3M_VERSION}`\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const allParams = { sdkType: SDK_TYPE, sdkVersion: SDK_VERSION, ...params }\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(allParams).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  injectedWallets: [],\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (recomendedWallets.length) {\n      extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n    } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  async getInjectedWallets() {\n    const { listings: listingsObj } = await ExplorerUtil.getInjectedListings({})\n    const listings = Object.values(listingsObj)\n    state.injectedWallets = listings\n\n    return state.injectedWallets\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { WcConnectionCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<WcConnectionCtrlState>({\n  pairingEnabled: false,\n  pairingUri: '',\n  pairingError: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const WcConnectionCtrl = {\n  state,\n\n  subscribe(callback: (newState: WcConnectionCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setPairingUri(pairingUri: WcConnectionCtrlState['pairingUri']) {\n    state.pairingUri = pairingUri\n  },\n\n  setPairingError(pairingError: WcConnectionCtrlState['pairingError']) {\n    state.pairingError = pairingError\n  },\n\n  setPairingEnabled(pairingEnabled: WcConnectionCtrlState['pairingEnabled']) {\n    state.pairingEnabled = pairingEnabled\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { AccountCtrl } from './AccountCtrl'\nimport { ClientCtrl } from './ClientCtrl'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\nimport { WcConnectionCtrl } from './WcConnectionCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  route?: 'Account' | 'ConnectWallet' | 'Help' | 'SelectNetwork'\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded, isPreferInjected, selectedChain } = OptionsCtrl.state\n      const { isConnected } = AccountCtrl.state\n      const { enableNetworkView } = ConfigCtrl.state\n      WcConnectionCtrl.setPairingEnabled(true)\n\n      if (!isConnected) {\n        CoreUtil.removeWalletConnectDeepLink()\n      }\n\n      if (options?.route) {\n        RouterCtrl.reset(options.route)\n      } else if (isConnected) {\n        RouterCtrl.reset('Account')\n      } else if (enableNetworkView) {\n        RouterCtrl.reset('SelectNetwork')\n      } else if (isPreferInjected) {\n        ClientCtrl.client()\n          .connectConnector('injected', selectedChain?.id)\n          .catch(err => console.error(err))\n        resolve()\n\n        return\n      } else {\n        RouterCtrl.reset('ConnectWallet')\n      }\n\n      const { pairingUri } = WcConnectionCtrl.state\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded && (pairingUri || isConnected)) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          const connection = WcConnectionCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded && (connection.pairingUri || isConnected)) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n"],"names":["state","proxy","RouterCtrl","callback","valtioSub","view","data","last","CoreUtil","ua","url","appUrl","wcUri","name","safeAppUrl","encodedWcUrl","miliseconds","resolve","href","target","e","_a","routerData","client","ClientCtrl","ethereumClient","isEnabled","EventsCtrl","snapshot","connectedWalletId","event","OptionsCtrl","chains","selectedChain","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","isPreferInjected","ConfigCtrl","config","_b","NAMESPACE","BLOCKCHAIN_API","BlockchainApiUtil","address","chainId","projectId","chain_id","endpoint","AccountCtrl","account","preloadAvatarFn","profileAddress","mainnetId","isMainnetConfigured","chain","profile","avatar","balanceAddress","tokenContracts","token","balance","isConnected","d","p","I","P","m","t","s","l","W3M_API","SDK_TYPE","SDK_VERSION","fetchListings","params","allParams","__spreadValues","key","value","ExplorerUtil","imageId","L","x","y","A","u","isMobile","ExplorerCtrl","explorerRecommendedWalletIds","explorerExcludedWalletIds","listings","listingsArr","a","b","aIndex","bIndex","isExcluded","extendedParams","recomendedWallets","wallet","page","search","listingsObj","total","type","WcConnectionCtrl","pairingUri","pairingError","pairingEnabled","ModalCtrl","options","enableNetworkView","err","interval","opts","connection","i","h","c","r","isDarkMode","ThemeCtrl","theme","themeMode","themeVariables","ToastCtrl","message","variant"],"mappings":"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"}
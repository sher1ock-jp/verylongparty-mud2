/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MirrorSubscriber,
  MirrorSubscriberInterface,
} from "../MirrorSubscriber";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "table",
        type: "bytes32",
      },
      {
        internalType: "Schema",
        name: "schema",
        type: "bytes32",
      },
      {
        internalType: "Schema",
        name: "keySchema",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "Slice_OutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    name: "StoreCore_InvalidDataLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tableId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "tableIdString",
        type: "string",
      },
    ],
    name: "StoreCore_TableNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onAfterSetField",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "table",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "key",
        type: "bytes32[]",
      },
      {
        internalType: "uint8",
        name: "schemaIndex",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onBeforeSetField",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "table",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "key",
        type: "bytes32[]",
      },
    ],
    name: "onDeleteRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "table",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "key",
        type: "bytes32[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onSetRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611c82380380611c8283398101604081905261002f916100bb565b604051636ac99b4360e11b81527f0c2ca7aa050a8aecd8cd7e2c3470c944528880c3ce7c10dbde01cf032da9955e60048201526024810183905260448101829052339063d593368690606401600060405180830381600087803b15801561009557600080fd5b505af11580156100a9573d6000803e3d6000fd5b505050600093909355506100e9915050565b6000806000606084860312156100d057600080fd5b8351925060208401519150604084015190509250925092565b611b8a806100f86000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063469b7ee2146100515780636b3d7d5f1461006657806382b6745f1461007a578063b51fef6c1461008d575b600080fd5b61006461005f366004611679565b6100a0565b005b610064610074366004611679565b50505050565b610064610088366004611701565b6100da565b61006461009b36600461176e565b61010a565b6100ae565b60405180910390fd5b6100747f0c2ca7aa050a8aecd8cd7e2c3470c944528880c3ce7c10dbde01cf032da9955e848484610138565b6101057f0c2ca7aa050a8aecd8cd7e2c3470c944528880c3ce7c10dbde01cf032da9955e8383610204565b505050565b6101347f0c2ca7aa050a8aecd8cd7e2c3470c944528880c3ce7c10dbde01cf032da9955e826102c6565b5050565b6000610142610384565b90503073ffffffffffffffffffffffffffffffffffffffff8216036101725761016d858585856103d0565b6101fd565b6040517f114a726600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063114a7266906101ca908890889088908890600401611848565b600060405180830381600087803b1580156101e457600080fd5b505af11580156101f8573d6000803e3d6000fd5b505050505b5050505050565b600061020e610384565b90503073ffffffffffffffffffffffffffffffffffffffff821603610238576100748484846105bb565b6040517f8ed41f2f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821690638ed41f2f9061028e9087908790879060040161187c565b600060405180830381600087803b1580156102a857600080fd5b505af11580156102bc573d6000803e3d6000fd5b5050505050505050565b60006102d0610384565b90503073ffffffffffffffffffffffffffffffffffffffff8216036102f957610105838361079c565b6040517f505a181d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063505a181d9061034d90869086906004016118b1565b600060405180830381600087803b15801561036757600080fd5b505af115801561037b573d6000803e3d6000fd5b50505050505050565b7f629a4c26e296b22a8e0856e9f6ecb2d1008d7e00081111962cd175fa7488e1755460009073ffffffffffffffffffffffffffffffffffffffff16806103cb573391505090565b919050565b60006103db85610936565b90507fd01f9f1368f831528fc9fe6442366b2b7d957fbfff3bcf7c24d9ab5fe51f8c46858585856040516104129493929190611848565b60405180910390a160006104258661099d565b905060005b81518110156104d6576000828281518110610447576104476118ca565b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff1663469b7ee2898989896040518563ffffffff1660e01b81526004016104909493929190611848565b600060405180830381600087803b1580156104aa57600080fd5b505af11580156104be573d6000803e3d6000fd5b505050505080806104ce906118f6565b91505061042a565b506104e082610a7a565b60ff168460ff1610156104ff576104fa8686848787610a8b565b61050c565b61050c8686848787610b36565b60005b815181101561037b57600082828151811061052c5761052c6118ca565b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff16636b3d7d5f898989896040518563ffffffff1660e01b81526004016105759493929190611848565b600060405180830381600087803b15801561058f57600080fd5b505af11580156105a3573d6000803e3d6000fd5b505050505080806105b3906118f6565b91505061050f565b60006105c684610936565b90506000806105d58385610b75565b915091507f912af873e852235aae78a1d25ae9bb28b616a67c36898c53a14fd8184504ee3286868660405161060c9392919061187c565b60405180910390a1600061061f8761099d565b905060005b81518110156106ce576000828281518110610641576106416118ca565b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff166382b6745f8a8a8a6040518463ffffffff1660e01b81526004016106889392919061187c565b600060405180830381600087803b1580156106a257600080fd5b505af11580156106b6573d6000803e3d6000fd5b505050505080806106c6906118f6565b915050610624565b5060006106db8888610c13565b9050602086016106ee8260008388610c69565b6106f9856020611910565b6107039082611910565b905061070e86610d29565b60ff1660000361072357505050505050505050565b600061072f8a8a610d35565b858155905060008060005b6107438a610d29565b60ff168160ff16101561078d5761075b8d8d83610d6c565b925061076a8860ff8316610dc8565b91506107798360008785610c69565b6107838286611910565b945060010161073a565b50505050505050505050505050565b60006107a783610936565b90507f2cc8610b80ef19409ae51ecbdd9c137960fb22ae9ef2d817d36ec1b685d68ecd83836040516107da9291906118b1565b60405180910390a160006107ed8461099d565b905060005b815181101561089a57600082828151811061080f5761080f6118ca565b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff1663b51fef6c87876040518363ffffffff1660e01b81526004016108549291906118b1565b600060405180830381600087803b15801561086e57600080fd5b505af1158015610882573d6000803e3d6000fd5b50505050508080610892906118f6565b9150506107f2565b5060006108a78585610c13565b90506109018160006108b98660f01c90565b67ffffffffffffffff8111156108d1576108d1611534565b6040519080825280601f01601f1916602001820160405280156108fb576020820181803683370190505b50610dfa565b61090a83610d29565b60ff1660000361091b575050505050565b60006109278686610d35565b6000815590505b505050505050565b600061094182610e0a565b9050806103cb57818260405160200161095c91815260200190565b60408051601f19818403018152908290527fd623a70d0000000000000000000000000000000000000000000000000000000082526100a59291600401611928565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106109d7576109d76118ca565b602090810291909101810191909152604080517f6d756473746f7265000000000000000000000000000000000000000000000000818401527f486f6f6b7300000000000000000000000000000000000000000000000000000060308201528151808203909301835281019052600090610a5b90610a5390611941565b836000610ecf565b9050610a72610a6d8260008451610fb0565b611040565b949350505050565b6000601082901b5b60f81c92915050565b6000610a9a8460ff8516611051565b90508151610ab88260c5811115610ab357610ab3611965565b61107d565b14610b0f57610ad28160c5811115610ab357610ab3611965565b82516040517f521b3d33000000000000000000000000000000000000000000000000000000008152600481019290925260248201526044016100a5565b6000610b1b8787610c13565b90506000610b2986866110dd565b90506102bc828286610dfa565b6000610b4184610a7a565b610b4b908461197b565b9050610b5a8686838551611129565b6000610b67878784610d6c565b905061037b81600085610dfa565b600080610b828460f01c90565b9150816000610b9086610d29565b60ff161115610bc457828401602001519150610bac8260c81c90565b610bb7906020611910565b610bc19082611910565b90505b83518114610c0b5783516040517f521b3d330000000000000000000000000000000000000000000000000000000081526100a5918391600401918252602082015260400190565b509250929050565b60007f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d98383604051602001610c4a9392919061199e565b60408051601f1981840301815291905280516020909101209392505050565b8215610ce35760208310610c9357602083048401935060208381610c8f57610c8f6119bd565b0692505b8215610ce35760208390036000600019600884021c1990506008850281811c91508451811c9050811987541682821617875550818311610cd4575050610074565b50600194909401939182019190035b5b60208110610d055781518455600190930192602090910190601f1901610ce4565b8015610074576000600019600883021c198554845182169119161785555050505050565b6000601882901b610a82565b60007f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d98383604051602001610c4a939291906119d3565b60007f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d9848484604051602001610da59493929190611a33565b6040516020818303038152906040528051906020012060001c90505b9392505050565b600080610dd6836005611a66565b610de1906007611910565b9050610def84826008021b90565b60d81c949350505050565b6101058383602084018451610c69565b604080516001808252818301909252600091829190602080830190803683370190505090508281600081518110610e4357610e436118ca565b602090810291909101810191909152604080517f6d756473746f7265000000000000000000000000000000000000000000000000818401527f736368656d61000000000000000000000000000000000000000000000000000060308201528151808203909301835281019052600090610ec590610ebf90611941565b83610c13565b9050610a72815490565b60606000610edb610384565b90503073ffffffffffffffffffffffffffffffffffffffff821603610f0d57610f0585858561115b565b915050610dc1565b6040517fd03edb8c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063d03edb8c90610f6390889088908890600401611a85565b600060405180830381865afa158015610f80573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f059190810190611ab1565b509392505050565b6000818311158015610fc3575083518211155b610fff578383836040517f23230fa30000000000000000000000000000000000000000000000000000000081526004016100a593929190611b1f565b6020840161100d8482611910565b9050600061101b8585611b44565b6fffffffffffffffffffffffffffffffff1660809290921b9190911795945050505050565b60606000610dc1836014606061117f565b600061106983611062846004611910565b6008021b90565b60f81c60c5811115610dc157610dc1611965565b6000808260c581111561109257611092611965565b60ff16905060618110156110ac57601f1660010192915050565b60618360c58111156110c0576110c0611965565b036110ce5750601492915050565b50600092915050565b50919050565b600080805b8360ff16811015610fa85761110b6110fa8683611051565b60c5811115610ab357610ab3611965565b6111159083611910565b915080611121816118f6565b9150506110e2565b60006111358585610d35565b90506000611141825490565b90506111518160ff861685611291565b808355905061092e565b6060600061116885610936565b90506111768585858461136a565b95945050505050565b6060600061118d8560801c90565b90506fffffffffffffffffffffffffffffffff851660008582816111b3576111b36119bd565b0490506111c08683611b5b565b1561124d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f756e7061636b546f41727261793a207061636b65644c656e677468206d75737460448201527f2062652061206d756c7469706c65206f6620656c656d656e7453697a6500000060648201526084016100a5565b60405193506020840160208202810160405281855260005b82811015611285578451871c825293870193602090910190600101611265565b50505050509392505050565b6000838161129f8260c81c90565b905060006112b0878760ff16610dc8565b90508085106112d4576112c38186611b44565b6112cd9083611910565b91506112eb565b6112de8582611b44565b6112e89083611b44565b91505b60006112f8876005611a66565b611303906007611910565b905078ffffffffffffffffffffffffffffffffffffffffffffffffff841660c884901b1793507fffffffffff0000000000000000000000000000000000000000000000000000006008820290811c19851660d888901b90911c175b98975050505050505050565b606061137582610a7a565b60ff168360ff1610156113955761138e858585856113a1565b9050610a72565b61138e85858585611401565b606060006113b28360ff8616611051565b905060006113cb8260c5811115610ab357610ab3611965565b905060006113d98888610c13565b905060006113e786886110dd565b90506113f482848361144c565b9998505050505050505050565b6060600061140e83610a7a565b611418908561197b565b90506000611427878784610d6c565b905060006114428360ff1661143c8a8a61146f565b90610dc8565b905061135e828260005b60405160208101601f19603f8584010116604052838252610fa88585858461147c565b600080610ec58484610d35565b81156114ee57602082106114a6576020820484019350602082816114a2576114a26119bd565b0691505b81156114ee5760208290036000600019600883021c1990508554600885021b8119845116828216178452508185116114df575050610074565b50600194909401939283900392015b5b602083106115105783548152600190930192601f19909201916020016114ef565b8215610074576000600019600885021c198251865482169119161782525050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561157357611573611534565b604052919050565b600082601f83011261158c57600080fd5b8135602067ffffffffffffffff8211156115a8576115a8611534565b8160051b6115b782820161154a565b92835284810182019282810190878511156115d157600080fd5b83870192505b848310156115f0578235825291830191908301906115d7565b979650505050505050565b600067ffffffffffffffff82111561161557611615611534565b50601f01601f191660200190565b600082601f83011261163457600080fd5b8135611647611642826115fb565b61154a565b81815284602083860101111561165c57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561168f57600080fd5b84359350602085013567ffffffffffffffff808211156116ae57600080fd5b6116ba8883890161157b565b94506040870135915060ff821682146116d257600080fd5b909250606086013590808211156116e857600080fd5b506116f587828801611623565b91505092959194509250565b60008060006060848603121561171657600080fd5b83359250602084013567ffffffffffffffff8082111561173557600080fd5b6117418783880161157b565b9350604086013591508082111561175757600080fd5b5061176486828701611623565b9150509250925092565b6000806040838503121561178157600080fd5b82359150602083013567ffffffffffffffff81111561179f57600080fd5b6117ab8582860161157b565b9150509250929050565b600081518084526020808501945080840160005b838110156117e5578151875295820195908201906001016117c9565b509495945050505050565b60005b8381101561180b5781810151838201526020016117f3565b838111156100745750506000910152565b600081518084526118348160208601602086016117f0565b601f01601f19169290920160200192915050565b84815260806020820152600061186160808301866117b5565b60ff8516604084015282810360608401526115f0818561181c565b83815260606020820152600061189560608301856117b5565b82810360408401526118a7818561181c565b9695505050505050565b828152604060208201526000610a7260408301846117b5565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198203611909576119096118e0565b5060010190565b60008219821115611923576119236118e0565b500190565b828152604060208201526000610a72604083018461181c565b805160208083015191908110156110d75760001960209190910360031b1b16919050565b634e487b7160e01b600052602160045260246000fd5b600060ff821660ff841680821015611995576119956118e0565b90039392505050565b83815282602082015260606040820152600061117660608301846117b5565b634e487b7160e01b600052601260045260246000fd5b8381528260208201526080604082015260006119f260808301846117b5565b8281036060840152600681527f6c656e6774680000000000000000000000000000000000000000000000000000602082015260408101915050949350505050565b848152836020820152608060408201526000611a5260808301856117b5565b905060ff8316606083015295945050505050565b6000816000190483118215151615611a8057611a806118e0565b500290565b838152606060208201526000611a9e60608301856117b5565b905060ff83166040830152949350505050565b600060208284031215611ac357600080fd5b815167ffffffffffffffff811115611ada57600080fd5b8201601f81018413611aeb57600080fd5b8051611af9611642826115fb565b818152856020838501011115611b0e57600080fd5b6111768260208301602086016117f0565b606081526000611b32606083018661181c565b60208301949094525060400152919050565b600082821015611b5657611b566118e0565b500390565b600082611b7857634e487b7160e01b600052601260045260246000fd5b50069056fea164736f6c634300080d000a";

type MirrorSubscriberConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MirrorSubscriberConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MirrorSubscriber__factory extends ContractFactory {
  constructor(...args: MirrorSubscriberConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    table: PromiseOrValue<BytesLike>,
    schema: PromiseOrValue<BytesLike>,
    keySchema: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MirrorSubscriber> {
    return super.deploy(
      table,
      schema,
      keySchema,
      overrides || {}
    ) as Promise<MirrorSubscriber>;
  }
  override getDeployTransaction(
    table: PromiseOrValue<BytesLike>,
    schema: PromiseOrValue<BytesLike>,
    keySchema: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      table,
      schema,
      keySchema,
      overrides || {}
    );
  }
  override attach(address: string): MirrorSubscriber {
    return super.attach(address) as MirrorSubscriber;
  }
  override connect(signer: Signer): MirrorSubscriber__factory {
    return super.connect(signer) as MirrorSubscriber__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MirrorSubscriberInterface {
    return new utils.Interface(_abi) as MirrorSubscriberInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MirrorSubscriber {
    return new Contract(address, _abi, signerOrProvider) as MirrorSubscriber;
  }
}

{"version":3,"sources":["../src/rules/NoMsgSender.ts","../src/rules/SystemFileName.ts","../src/index.ts"],"sourcesContent":["import type { ContractDefinition, MemberAccess } from \"@solidity-parser/parser/dist/src/ast-types\";\nimport { SolhintRule } from \"../solhintTypes\";\n\nexport class NoMsgSender implements SolhintRule {\n  ruleId = \"no-msg-sender\";\n  reporter: any;\n  config: any;\n\n  isSystemOrLibrary = false;\n\n  constructor(reporter: any, config: any) {\n    this.reporter = reporter;\n    this.config = config;\n  }\n\n  ContractDefinition(node: ContractDefinition) {\n    const { name, kind } = node;\n\n    this.isSystemOrLibrary = kind === \"library\" || (kind === \"contract\" && name.endsWith(\"System\"));\n  }\n\n  \"ContractDefinition:exit\"() {\n    this.isSystemOrLibrary = false;\n  }\n\n  MemberAccess(node: MemberAccess) {\n    const { expression, memberName } = node;\n    if (expression.type === \"Identifier\" && memberName === \"sender\") {\n      this.reporter.error(\n        node,\n        this.ruleId,\n        `Systems and their libraries should use \"_msgSender()\" or \"_world()\" instead of \"msg.sender\".`\n      );\n    }\n  }\n}\n","import path from \"path\";\nimport { visit } from \"@solidity-parser/parser\";\nimport type { ContractDefinition, SourceUnit } from \"@solidity-parser/parser/dist/src/ast-types\";\nimport { SolhintRule } from \"../solhintTypes\";\n\nexport class SystemFileName implements SolhintRule {\n  ruleId = \"system-file-name\";\n  reporter: any;\n  config: any;\n\n  expectedContractName: string;\n  isSystemFile = false;\n\n  constructor(reporter: any, config: any, inputSrc: string, fileName: string) {\n    this.reporter = reporter;\n    this.config = config;\n\n    this.expectedContractName = path.basename(fileName, \".sol\");\n    if (\n      this.expectedContractName.endsWith(\"System\") &&\n      this.expectedContractName !== \"System\" &&\n      !this.expectedContractName.match(/^I[A-Z]/)\n    ) {\n      this.isSystemFile = true;\n    }\n  }\n\n  SourceUnit(node: SourceUnit) {\n    // only systems need a matching contract\n    if (!this.isSystemFile) return;\n    const expectedContractName = this.expectedContractName;\n\n    // search the source file for a matching contract name\n    let withMatchingContract = false;\n    visit(node, {\n      ContractDefinition(node: ContractDefinition) {\n        const { name, kind } = node;\n\n        if (kind === \"contract\" && name === expectedContractName) {\n          withMatchingContract = true;\n        }\n      },\n    });\n\n    if (!withMatchingContract) {\n      this.reporter.error(\n        node,\n        this.ruleId,\n        `System file must contain a contract with a matching name \"${expectedContractName}\"`\n      );\n    }\n  }\n}\n","import { NoMsgSender } from \"./rules/NoMsgSender\";\nimport { SystemFileName } from \"./rules/SystemFileName\";\n\nexport = [NoMsgSender, SystemFileName];\n"],"mappings":"wdAGO,IAAMA,EAAN,KAAyC,CAC9C,OAAS,gBACT,SACA,OAEA,kBAAoB,GAEpB,YAAYC,EAAeC,EAAa,CACtC,KAAK,SAAWD,EAChB,KAAK,OAASC,CAChB,CAEA,mBAAmBC,EAA0B,CAC3C,GAAM,CAAE,KAAAC,EAAM,KAAAC,CAAK,EAAIF,EAEvB,KAAK,kBAAoBE,IAAS,WAAcA,IAAS,YAAcD,EAAK,SAAS,QAAQ,CAC/F,CAEA,2BAA4B,CAC1B,KAAK,kBAAoB,EAC3B,CAEA,aAAaD,EAAoB,CAC/B,GAAM,CAAE,WAAAG,EAAY,WAAAC,CAAW,EAAIJ,EAC/BG,EAAW,OAAS,cAAgBC,IAAe,UACrD,KAAK,SAAS,MACZJ,EACA,KAAK,OACL,8FACF,CAEJ,CACF,ECnCA,IAAAK,EAAiB,mBACjBC,EAAsB,mCAITC,EAAN,KAA4C,CACjD,OAAS,mBACT,SACA,OAEA,qBACA,aAAe,GAEf,YAAYC,EAAeC,EAAaC,EAAkBC,EAAkB,CAC1E,KAAK,SAAWH,EAChB,KAAK,OAASC,EAEd,KAAK,qBAAuB,EAAAG,QAAK,SAASD,EAAU,MAAM,EAExD,KAAK,qBAAqB,SAAS,QAAQ,GAC3C,KAAK,uBAAyB,UAC9B,CAAC,KAAK,qBAAqB,MAAM,SAAS,IAE1C,KAAK,aAAe,GAExB,CAEA,WAAWE,EAAkB,CAE3B,GAAI,CAAC,KAAK,aAAc,OACxB,IAAMC,EAAuB,KAAK,qBAG9BC,EAAuB,MAC3B,SAAMF,EAAM,CACV,mBAAmBA,EAA0B,CAC3C,GAAM,CAAE,KAAAG,EAAM,KAAAC,CAAK,EAAIJ,EAEnBI,IAAS,YAAcD,IAASF,IAClCC,EAAuB,GAE3B,CACF,CAAC,EAEIA,GACH,KAAK,SAAS,MACZF,EACA,KAAK,OACL,6DAA6DC,IAC/D,CAEJ,CACF,ECjDA,eAAS,CAACI,EAAaC,CAAc","names":["NoMsgSender","reporter","config","node","name","kind","expression","memberName","import_path","import_parser","SystemFileName","reporter","config","inputSrc","fileName","path","node","expectedContractName","withMatchingContract","name","kind","NoMsgSender","SystemFileName"]}
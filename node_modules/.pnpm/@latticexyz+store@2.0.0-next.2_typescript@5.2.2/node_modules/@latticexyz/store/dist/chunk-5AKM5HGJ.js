var l={storeImportPath:"@latticexyz/store/src/",userTypesPath:"Types",codegenDirectory:"codegen"},g={namespace:"",enums:{}},m={directory:"tables",keySchema:{key:"bytes32"},tableIdArgument:!1,storeArgument:!0,ephemeral:!1};import{AbiTypes as D,StaticAbiTypes as z}from"@latticexyz/schema-type/deprecated";import{z as t,ZodIssueCode as o}from"zod";import{getDuplicates as p,parseStaticArray as R,STORE_SELECTOR_MAX_LENGTH as L,zObjectName as f,zSelector as S,zUserEnum as k,zValueName as b}from"@latticexyz/config";var j=f,O=b,v=b,I=f,d=t.string(),_=t.string(),P=t.record(O,_).default(m.keySchema),U=t.record(v,d).refine(e=>Object.keys(e).length>0,"Table schema may not be empty"),K=d.transform(e=>U.parse({value:e})),q=U.or(K),h=t.object({directory:t.string().default(m.directory),name:S.optional(),tableIdArgument:t.boolean().default(m.tableIdArgument),storeArgument:t.boolean().default(m.storeArgument),dataStruct:t.boolean().optional(),keySchema:P,schema:q,ephemeral:t.boolean().default(m.ephemeral)}).transform(e=>(Object.keys(e.schema).length===1?e.dataStruct??=!1:e.dataStruct??=!0,e)),B=d.transform(e=>h.parse({schema:{value:e}})),M=h.or(B),$=t.record(j,M).transform(e=>{for(let n of Object.keys(e)){let s=e[n];s.name=n.slice(0,L),e[n]=s}return e}),H=t.object({enums:t.record(I,k).default(g.enums)}),x=t.object({namespace:S.default(g.namespace),storeImportPath:t.string().default(l.storeImportPath),tables:$,userTypesPath:t.string().default(l.userTypesPath),codegenDirectory:t.string().default(l.codegenDirectory)}).merge(H),se=x.superRefine(C),re=x.catchall(t.any()).superRefine(C);function C(e,n){for(let a of Object.values(e.tables)){let c=Object.keys(a.keySchema),N=Object.keys(a.schema),T=p([...c,...N]);T.length>0&&n.addIssue({code:o.custom,message:`Field and key names within one table must be unique: ${T.join(", ")}`})}let s=Object.keys(e.tables),r=Object.keys(e.enums),i=r,E=[...s,...i],u=p(E);u.length>0&&n.addIssue({code:o.custom,message:`Table library names, enum names must be globally unique: ${u.join(", ")}`});let A=Object.values(e.tables).map(({name:a})=>a),y=p(A);y.length>0&&n.addIssue({code:o.custom,message:`Table names must be unique: ${y.join(", ")}`});for(let a of Object.values(e.tables)){for(let c of Object.values(a.keySchema))F(r,c,n);for(let c of Object.values(a.schema))G(i,r,c,n)}}function G(e,n,s,r){if(!D.includes(s)&&!e.includes(s)){let i=R(s);i?V(n,i.elementType,i.staticLength,r):r.addIssue({code:o.custom,message:`${s} is not a valid abi type, and is not defined in userTypes`})}}function F(e,n,s){!z.includes(n)&&!e.includes(n)&&s.addIssue({code:o.custom,message:`${n} is not a static type`})}function V(e,n,s,r){F(e,n,r),s===0?r.addIssue({code:o.custom,message:"Static array length must not be 0"}):s>=2**16&&r.addIssue({code:o.custom,message:"Static array length must be less than 2**16"})}export{l as a,g as b,m as c,q as d,M as e,$ as f,H as g,se as h,re as i};
//# sourceMappingURL=chunk-5AKM5HGJ.js.map
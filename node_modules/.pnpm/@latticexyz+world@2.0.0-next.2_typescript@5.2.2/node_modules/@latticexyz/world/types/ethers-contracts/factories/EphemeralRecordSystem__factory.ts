/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  EphemeralRecordSystem,
  EphemeralRecordSystemInterface,
} from "../EphemeralRecordSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "resource",
        type: "string",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "Slice_OutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    name: "StoreCore_InvalidDataLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tableId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "tableIdString",
        type: "string",
      },
    ],
    name: "StoreCore_TableNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "table",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "key",
        type: "bytes32[]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "StoreEphemeralRecord",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "name",
        type: "bytes16",
      },
      {
        internalType: "bytes32[]",
        name: "key",
        type: "bytes32[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "emitEphemeralRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tableId",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "key",
        type: "bytes32[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "emitEphemeralRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611420806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063ab7404bb1461003b578063be83698c14610050575b600080fd5b61004e610049366004610f00565b610063565b005b61004e61005e366004610f91565b6100ec565b600061007087873361010a565b90506100e38186868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8a01819004810282018101909252888152925088915087908190840183828082843760009201919091525061018192505050565b50505050505050565b610103856100fa8760801b90565b86868686610063565b5050505050565b608082901c6fffffffffffffffffffffffffffffffff1984161761012f848484610297565b61017a5761013c81610306565b826040517fe64c0348000000000000000000000000000000000000000000000000000000008152600401610171929190611063565b60405180910390fd5b9392505050565b600061018c846103f5565b90506101988183610461565b50507f230ea578f076e518b96d8b1b4ca2e5dc4898fd02d11e43c9f067c22d1c391d3b8484846040516101cd939291906110d6565b60405180910390a160006101e0856104ff565b905060005b815181101561028f5760008282815181106102025761020261110b565b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff166382b6745f8888886040518463ffffffff1660e01b8152600401610249939291906110d6565b600060405180830381600087803b15801561026357600080fd5b505af1158015610277573d6000803e3d6000fd5b5050505050808061028790611137565b9150506101e5565b505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff831614806102d657506102d66fffffffffffffffffffffffffffffffff1985165b836105da565b806102fe57506102fe6fffffffffffffffffffffffffffffffff198516608085901c176102d0565b949350505050565b606081608081901b6fffffffffffffffffffffffffffffffff1982161561032d578161034f565b7f524f4f545f4e414d4553504143450000000000000000000000000000000000005b6fffffffffffffffffffffffffffffffff1982161561036e5781610390565b7f524f4f545f4e414d4500000000000000000000000000000000000000000000005b6040516fffffffffffffffffffffffffffffffff1992831660208201527f2f0000000000000000000000000000000000000000000000000000000000000060308201529116603182015260410160405160208183030381529060405292505050919050565b6000610400826106ac565b90508061045c57818260405160200161041b91815260200190565b60408051601f19818403018152908290527fd623a70d0000000000000000000000000000000000000000000000000000000082526101719291600401611151565b919050565b60008061046e8460f01c90565b915081600061047c86610771565b60ff1611156104b0578284016020015191506104988260c81c90565b6104a390602061116a565b6104ad908261116a565b90505b835181146104f75783516040517f521b3d33000000000000000000000000000000000000000000000000000000008152610171918391600401918252602082015260400190565b509250929050565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106105395761053961110b565b602090810291909101810191909152604080517f6d756473746f7265000000000000000000000000000000000000000000000000928101929092527f486f6f6b7300000000000000000000000000000000000000000000000000000060308301526000916105c391015b6040516020818303038152906040526105bb90611198565b836000610782565b90506102fe6105d58260008451610863565b6108f3565b6040805160028082526060820183526000928392919060208301908036833701905050905083816000815181106106135761061361110b565b6020026020010181815250508273ffffffffffffffffffffffffffffffffffffffff1660001b8160018151811061064c5761064c61110b565b6020908102919091018101919091526040805160009281018390527f5265736f75726365416363657373000000000000000000000000000000000000603082015261069791016105a3565b602081015190915060f81c5b95945050505050565b6040805160018082528183019092526000918291906020808301908036833701905050905082816000815181106106e5576106e561110b565b602090810291909101810191909152604080517f6d756473746f7265000000000000000000000000000000000000000000000000818401527f736368656d610000000000000000000000000000000000000000000000000000603082015281518082039093018352810190526000906107679061076190611198565b83610904565b90506102fe815490565b6000601882901b5b60f81c92915050565b6060600061078e61095a565b90503073ffffffffffffffffffffffffffffffffffffffff8216036107c0576107b88585856109a1565b91505061017a565b6040517fd03edb8c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063d03edb8c90610816908890889088906004016111bc565b600060405180830381865afa158015610833573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107b891908101906111e8565b509392505050565b6000818311158015610876575083518211155b6108b2578383836040517f23230fa300000000000000000000000000000000000000000000000000000000815260040161017193929190611295565b602084016108c0848261116a565b905060006108ce85856112ba565b6fffffffffffffffffffffffffffffffff1660809290921b9190911795945050505050565b6060600061017a83601460606109bc565b60007f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d9838360405160200161093b939291906112d1565b60408051601f1981840301815291905280516020909101209392505050565b7f629a4c26e296b22a8e0856e9f6ecb2d1008d7e00081111962cd175fa7488e1755460009073ffffffffffffffffffffffffffffffffffffffff168061045c573391505090565b606060006109ae856103f5565b90506106a385858584610ace565b606060006109ca8560801c90565b90506fffffffffffffffffffffffffffffffff851660008582816109f0576109f06112f0565b0490506109fd8683611306565b15610a8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f756e7061636b546f41727261793a207061636b65644c656e677468206d75737460448201527f2062652061206d756c7469706c65206f6620656c656d656e7453697a650000006064820152608401610171565b60405193506020840160208202810160405281855260005b82811015610ac2578451871c825293870193602090910190600101610aa2565b50505050509392505050565b6060610ad982610b05565b60ff168360ff161015610af957610af285858585610b11565b90506102fe565b610af285858585610b76565b6000601082901b610779565b60606000610b228360ff8616610bd1565b90506000610b408260c5811115610b3b57610b3b611328565b610bfd565b90506000610b4e8888610904565b90506000610b5c8688610c5d565b9050610b69828483610ca9565b9998505050505050505050565b60606000610b8383610b05565b610b8d908561133e565b90506000610b9c878784610ccc565b90506000610bb78360ff16610bb18a8a610d25565b90610d32565b9050610bc582826000610ca9565b98975050505050505050565b6000610be983610be284600461116a565b6008021b90565b60f81c60c581111561017a5761017a611328565b6000808260c5811115610c1257610c12611328565b60ff1690506061811015610c2c57601f1660010192915050565b60618360c5811115610c4057610c40611328565b03610c4e5750601492915050565b50600092915050565b50919050565b600080805b8360ff1681101561085b57610c8b610c7a8683610bd1565b60c5811115610b3b57610b3b611328565b610c95908361116a565b915080610ca181611137565b915050610c62565b60405160208101601f19603f858401011660405283825261085b85858584610d64565b60007f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d9848484604051602001610d059493929190611361565b60408051601f198184030181529190528051602090910120949350505050565b6000806107678484610e1a565b600080610d40836005611394565b610d4b90600761116a565b9050610d5984826008021b90565b60d81c949350505050565b8115610dd65760208210610d8e57602082048401935060208281610d8a57610d8a6112f0565b0691505b8115610dd65760208290036000600019600883021c1990508554600885021b811984511682821617845250818511610dc7575050610e14565b50600194909401939283900392015b5b60208310610df85783548152600190930192601f1990920191602001610dd7565b8215610e145780518454600019600886021c9182169119161781525b50505050565b60007f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d9838360405160200161093b939291906113b3565b80356fffffffffffffffffffffffffffffffff198116811461045c57600080fd5b60008083601f840112610e8457600080fd5b50813567ffffffffffffffff811115610e9c57600080fd5b6020830191508360208260051b8501011115610eb757600080fd5b9250929050565b60008083601f840112610ed057600080fd5b50813567ffffffffffffffff811115610ee857600080fd5b602083019150836020828501011115610eb757600080fd5b60008060008060008060808789031215610f1957600080fd5b610f2287610e51565b9550610f3060208801610e51565b9450604087013567ffffffffffffffff80821115610f4d57600080fd5b610f598a838b01610e72565b90965094506060890135915080821115610f7257600080fd5b50610f7f89828a01610ebe565b979a9699509497509295939492505050565b600080600080600060608688031215610fa957600080fd5b85359450602086013567ffffffffffffffff80821115610fc857600080fd5b610fd489838a01610e72565b90965094506040880135915080821115610fed57600080fd5b50610ffa88828901610ebe565b969995985093965092949392505050565b60005b8381101561102657818101518382015260200161100e565b83811115610e145750506000910152565b6000815180845261104f81602086016020860161100b565b601f01601f19169290920160200192915050565b6040815260006110766040830185611037565b905073ffffffffffffffffffffffffffffffffffffffff831660208301529392505050565b600081518084526020808501945080840160005b838110156110cb578151875295820195908201906001016110af565b509495945050505050565b8381526060602082015260006110ef606083018561109b565b82810360408401526111018185611037565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019820361114a5761114a611121565b5060010190565b8281526040602082015260006102fe6040830184611037565b6000821982111561117d5761117d611121565b500190565b634e487b7160e01b600052604160045260246000fd5b80516020808301519190811015610c575760001960209190910360031b1b16919050565b8381526060602082015260006111d5606083018561109b565b905060ff83166040830152949350505050565b6000602082840312156111fa57600080fd5b815167ffffffffffffffff8082111561121257600080fd5b818401915084601f83011261122657600080fd5b81518181111561123857611238611182565b604051601f8201601f19908116603f0116810190838211818310171561126057611260611182565b8160405282815287602084870101111561127957600080fd5b61128a83602083016020880161100b565b979650505050505050565b6060815260006112a86060830186611037565b60208301949094525060400152919050565b6000828210156112cc576112cc611121565b500390565b8381528260208201526060604082015260006106a3606083018461109b565b634e487b7160e01b600052601260045260246000fd5b60008261132357634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052602160045260246000fd5b600060ff821660ff84168082101561135857611358611121565b90039392505050565b848152836020820152608060408201526000611380608083018561109b565b905060ff8316606083015295945050505050565b60008160001904831182151516156113ae576113ae611121565b500290565b8381528260208201526080604082015260006113d2608083018461109b565b8281036060840152600681527f6c656e677468000000000000000000000000000000000000000000000000000060208201526040810191505094935050505056fea164736f6c634300080d000a";

type EphemeralRecordSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EphemeralRecordSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EphemeralRecordSystem__factory extends ContractFactory {
  constructor(...args: EphemeralRecordSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EphemeralRecordSystem> {
    return super.deploy(overrides || {}) as Promise<EphemeralRecordSystem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EphemeralRecordSystem {
    return super.attach(address) as EphemeralRecordSystem;
  }
  override connect(signer: Signer): EphemeralRecordSystem__factory {
    return super.connect(signer) as EphemeralRecordSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EphemeralRecordSystemInterface {
    return new utils.Interface(_abi) as EphemeralRecordSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EphemeralRecordSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EphemeralRecordSystem;
  }
}

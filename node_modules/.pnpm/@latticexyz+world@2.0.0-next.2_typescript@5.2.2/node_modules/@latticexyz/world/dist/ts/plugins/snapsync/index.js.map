{"version":3,"sources":["../../../../ts/plugins/snapsync/configExtensions.ts","../../../../ts/plugins/snapsync/plugin.ts","../../../../ts/plugins/snapsync/typeExtensions.ts"],"sourcesContent":["import { extendMUDCoreConfig, resolveTableId } from \"@latticexyz/config\";\nimport { zPluginStoreConfig } from \"@latticexyz/store\";\nimport { zSnapSyncPluginConfig } from \"./plugin\";\nimport { zPluginWorldConfig } from \"../../library\";\n\nextendMUDCoreConfig((config) => {\n  const modifiedConfig = { ...config } as Record<string, unknown>;\n  const snapSyncConfig = zSnapSyncPluginConfig.parse(config);\n\n  if (snapSyncConfig.snapSync) {\n    const worldConfig = zPluginWorldConfig.parse(config);\n    const storeConfig = zPluginStoreConfig.parse(config);\n    const tableNames = Object.entries(storeConfig.tables)\n      .filter(([_, t]) => !t.ephemeral)\n      .map(([name, _]) => name);\n    const newModules = tableNames.map((tableName) => {\n      return {\n        name: \"KeysInTableModule\",\n        root: true,\n        args: [resolveTableId(tableName)],\n      };\n    });\n\n    modifiedConfig.modules = [\n      ...worldConfig.modules,\n      {\n        name: \"SnapSyncModule\",\n        root: true,\n        args: [],\n      },\n      ...newModules,\n    ];\n  }\n\n  return modifiedConfig;\n});\n","import { z } from \"zod\";\n\nexport const zSnapSyncPluginConfig = z\n  .object({\n    snapSync: z.boolean(),\n  })\n  .catchall(z.any());\n","import \"@latticexyz/store/register\";\n\ninterface SnapSyncConfig {\n  snapSync: boolean;\n}\n\ndeclare module \"@latticexyz/config\" {\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  export interface MUDCoreUserConfig extends SnapSyncConfig {}\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  export interface MUDCoreConfig extends SnapSyncConfig {}\n}\n"],"mappings":"kFAAA,OAAS,uBAAAA,EAAqB,kBAAAC,MAAsB,qBACpD,OAAS,sBAAAC,MAA0B,oBCDnC,OAAS,KAAAC,MAAS,MAEX,IAAMC,EAAwBD,EAClC,OAAO,CACN,SAAUA,EAAE,QAAQ,CACtB,CAAC,EACA,SAASA,EAAE,IAAI,CAAC,EDDnBE,EAAqBC,GAAW,CAC9B,IAAMC,EAAiB,CAAE,GAAGD,CAAO,EAGnC,GAFuBE,EAAsB,MAAMF,CAAM,EAEtC,SAAU,CAC3B,IAAMG,EAAcC,EAAmB,MAAMJ,CAAM,EAC7CK,EAAcC,EAAmB,MAAMN,CAAM,EAI7CO,EAHa,OAAO,QAAQF,EAAY,MAAM,EACjD,OAAO,CAAC,CAACG,EAAG,CAAC,IAAM,CAAC,EAAE,SAAS,EAC/B,IAAI,CAAC,CAACC,EAAMD,CAAC,IAAMC,CAAI,EACI,IAAKC,IAC1B,CACL,KAAM,oBACN,KAAM,GACN,KAAM,CAACC,EAAeD,CAAS,CAAC,CAClC,EACD,EAEDT,EAAe,QAAU,CACvB,GAAGE,EAAY,QACf,CACE,KAAM,iBACN,KAAM,GACN,KAAM,CAAC,CACT,EACA,GAAGI,CACL,EAGF,OAAON,CACT,CAAC,EEnCD,MAAO","names":["extendMUDCoreConfig","resolveTableId","zPluginStoreConfig","z","zSnapSyncPluginConfig","extendMUDCoreConfig","config","modifiedConfig","zSnapSyncPluginConfig","worldConfig","zPluginWorldConfig","storeConfig","zPluginStoreConfig","newModules","_","name","tableName","resolveTableId"]}